[
  {
    "id": 1203,
    "date": "2020-07-13T09:00:26",
    "date_gmt": "2020-07-13T17:00:26",
    "modified": "2020-08-16T11:31:39",
    "modified_gmt": "2020-08-16T19:31:39",
    "slug": "values",
    "status": "publish",
    "link": "https://leobenkel.com/2020/07/skb-scala-values/",
    "title": " Scala Values",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1wFWnK\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala values.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala values !</p>\n\n<div class=\"skb-focus\"><p>A Value in Scala is what hold values.</p> \n<p>It can be considered in two parts. First its name, for instance <code>a</code> and then its value, for instance, <code>12</code>.</p><p>In Scala, a value also has a type, for instance, <code>Int</code> when it is an integer.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/6EuSjLIMT7KQhdUiB7Nf8Q.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/6EuSjLIMT7KQhdUiB7Nf8Q\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (6EuSjLIMT7KQhdUiB7Nf8Q)</a>.</p>\n\n<h2>More information about Scala values</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala values.</p>\n\n<div class=\"skb-focus\"><p>We assigned a value to the Value <code>a</code>.</p><ul><li>The line 3 is the value</li><li> The line 5 is doing a sum of the integer <code>2</code> and the value <code>a</code></li><li>\nOn line 7, we see <code>assert</code> which perform a test if the sum above is equal to <code>8</code></li></ul></p>\n<p>Also, important things to keep in mind, <code>val</code> are immutable. In Scala, if you want a variable, you would have to use the keyword <code>var</code>.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala values.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/\">the next Scala Knowledege Bit</a>.</p>\n\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1203\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1203\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1203\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1203\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1203\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Values &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Values here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1203\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1203\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1203\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1203\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1203\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-values/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "6EuSjLIMT7KQhdUiB7Nf8Q",
    "prevUrl": null,
    "nextUrl": "string-interpolation",
    "mainInfoBox": "<p>A Value in Scala is what hold values.</p> \n<p>It can be considered in two parts. First its name, for instance <code>a</code> and then its value, for instance, <code>12</code>.</p><p>In Scala, a value also has a type, for instance, <code>Int</code> when it is an integer.</p>",
    "detailedInfoBox": "<p>We assigned a value to the Value <code>a</code>.</p><ul><li>The line 3 is the value</li><li> The line 5 is doing a sum of the integer <code>2</code> and the value <code>a</code></li><li>\nOn line 7, we see <code>assert</code> which perform a test if the sum above is equal to <code>8</code></li></ul><p></p>\n<p>Also, important things to keep in mind, <code>val</code> are immutable. In Scala, if you want a variable, you would have to use the keyword <code>var</code>.</p>"
  },
  {
    "id": 1208,
    "date": "2020-07-15T09:01:28",
    "date_gmt": "2020-07-15T17:01:28",
    "modified": "2020-07-17T09:05:14",
    "modified_gmt": "2020-07-17T17:05:14",
    "slug": "string-interpolation",
    "status": "publish",
    "link": "https://leobenkel.com/2020/07/skb-scala-string-interpolation/",
    "title": " Scala String Interpolation",
    "content": "\n<p></p>\n\n\n<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1gKgJ9\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala String Interpolation.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala String Interpolation !</p>\n\n<div class=\"skb-focus\"><p>Scala String Interpolation is how Strings can be constructed in Scala. It will be the way you can add Values inside a String. </p>\n<p>Strings in programming languages are chains of character, for instance: <code>\"Hello World\"</code>.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/YvHTOaC8SFCFpKzQLmd9ag.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/YvHTOaC8SFCFpKzQLmd9ag\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (YvHTOaC8SFCFpKzQLmd9ag)</a>.</p>\n\n<h2>More information about Scala String Interpolation</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala String Interpolation.</p>\n\n<div class=\"skb-focus\"><p>You might have noticed the string is contained between quotes: <code>\"...\"</code>. </p>\n<p>An other thing to notice is the <code>s</code> preceding the first quote. It is necessary to transform <code>$h</code> into the content of the value <code>h</code>.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala String Interpolation.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-values/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1208\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1208\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1208\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1208\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1208\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala String Interpolation &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala String Interpolation here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1208\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1208\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1208\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1208\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1208\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "YvHTOaC8SFCFpKzQLmd9ag",
    "prevUrl": "values",
    "nextUrl": "methods",
    "mainInfoBox": "<p>Scala String Interpolation is how Strings can be constructed in Scala. It will be the way you can add Values inside a String. </p>\n<p>Strings in programming languages are chains of character, for instance: <code>\"Hello World\"</code>.</p>",
    "detailedInfoBox": "<p>You might have noticed the string is contained between quotes: <code>\"...\"</code>. </p>\n<p>An other thing to notice is the <code>s</code> preceding the first quote. It is necessary to transform <code>$h</code> into the content of the value <code>h</code>.</p>"
  },
  {
    "id": 1213,
    "date": "2020-07-17T09:00:40",
    "date_gmt": "2020-07-17T17:00:40",
    "modified": "2020-07-20T09:23:02",
    "modified_gmt": "2020-07-20T17:23:02",
    "slug": "methods",
    "status": "publish",
    "link": "https://leobenkel.com/2020/07/skb-scala-methods/",
    "title": " Scala Methods",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1allMl\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Methods.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Methods !</p>\n\n<div class=\"skb-focus\"><p>A method in programming language is a bit of code that get executed when called and return a value.</p>\n<p>In Scala, the boundary between Values and Methods is very thin and we are going to learn more about all of it as we go into more complex Scala Knowledge Bits.</p><p>But, if things goes as planned, today should be simple.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/WAa2MFWwQBW2rIPjVNBgEw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/WAa2MFWwQBW2rIPjVNBgEw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (WAa2MFWwQBW2rIPjVNBgEw)</a>.</p>\n\n<h2>More information about Scala Methods</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Methods.</p>\n\n<div class=\"skb-focus\"><p>I hope you had fun with today&#8217;s Scala Knowledge Bit ! </p>\n<p>One main thing to note, if the method do not take arguments, you do not need the <code>(...)</code>, the parentheses are optional.</p>\n<p>In practice, you have to be careful when calling the method. Be sure to use parentheses when it was defined with them. And don&#8217;t use the parentheses when the method was defined without them.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Methods.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-string-interpolation/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1213\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1213\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1213\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1213\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1213\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Methods &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Methods here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1213\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1213\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1213\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1213\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1213\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "WAa2MFWwQBW2rIPjVNBgEw",
    "prevUrl": "string-interpolation",
    "nextUrl": "method-with-arguments",
    "mainInfoBox": "<p>A method in programming language is a bit of code that get executed when called and return a value.</p>\n<p>In Scala, the boundary between Values and Methods is very thin and we are going to learn more about all of it as we go into more complex Scala Knowledge Bits.</p><p>But, if things goes as planned, today should be simple.</p>",
    "detailedInfoBox": "<p>I hope you had fun with today’s Scala Knowledge Bit ! </p>\n<p>One main thing to note, if the method do not take arguments, you do not need the <code>(...)</code>, the parentheses are optional.</p>\n<p>In practice, you have to be careful when calling the method. Be sure to use parentheses when it was defined with them. And don’t use the parentheses when the method was defined without them.</p>"
  },
  {
    "id": 1218,
    "date": "2020-07-20T09:00:01",
    "date_gmt": "2020-07-20T17:00:01",
    "modified": "2020-07-22T23:22:16",
    "modified_gmt": "2020-07-23T07:22:16",
    "slug": "method-with-arguments",
    "status": "publish",
    "link": "https://leobenkel.com/2020/07/skb-scala-method-with-arguments/",
    "title": " Scala Method with Arguments",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-2tR8Ap\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Method with Arguments.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Method with Arguments !</p>\n\n<div class=\"skb-focus\"><p>In programming language, a method does some operations and return a result.</p>\n<p>In most use cases, the method will take parameters to perform the operation.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/P7T6QckdSIKzUFdCdawLEg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/P7T6QckdSIKzUFdCdawLEg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (P7T6QckdSIKzUFdCdawLEg)</a>.</p>\n\n<h2>More information about Scala Method with Arguments</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Method with Arguments.</p>\n\n<div class=\"skb-focus\"><p>You have learned that <code>a</code> and <code>b</code> are parameters of the method <code>add</code>. You can use them as normal values but only within the method. You can extend the context to several lines with <code>{...}</code>.</p><p>\nIn some other programming language, like Java, you need the keyword <code>return</code> to make the method return a value but in Scala, the last line of the method is what is being returned automatically.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Method with Arguments.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-methods/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1218\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1218\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1218\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1218\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1218\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Method with Arguments- Periodic exercise to learn bits of knowledge about Scala. Scala Method with Arguments here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1218\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1218\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1218\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1218\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1218\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "P7T6QckdSIKzUFdCdawLEg",
    "prevUrl": "methods",
    "nextUrl": "list-sum-method",
    "mainInfoBox": "<p>In programming language, a method does some operations and return a result.</p>\n<p>In most use cases, the method will take parameters to perform the operation.</p>",
    "detailedInfoBox": "<p>You have learned that <code>a</code> and <code>b</code> are parameters of the method <code>add</code>. You can use them as normal values but only within the method. You can extend the context to several lines with <code>{...}</code>.</p><p>\nIn some other programming language, like Java, you need the keyword <code>return</code> to make the method return a value but in Scala, the last line of the method is what is being returned automatically.</p>"
  },
  {
    "id": 1228,
    "date": "2020-07-22T09:01:35",
    "date_gmt": "2020-07-22T17:01:35",
    "modified": "2020-09-09T14:24:58",
    "modified_gmt": "2020-09-09T22:24:58",
    "slug": "list-sum-method",
    "status": "publish",
    "link": "https://leobenkel.com/2020/07/skb-scala-list-sum-method/",
    "title": " Scala List Sum Method",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1fddrU\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala List Sum Method.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala List Sum Method !</p>\n\n<div class=\"skb-focus\"><p>Scala has a lot of pre-built methods. We are going to learn about one related to <code>List</code> called <code>sum</code>.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/WkXaFPHSR7q1M4I7xncZFg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/WkXaFPHSR7q1M4I7xncZFg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (WkXaFPHSR7q1M4I7xncZFg)</a>.</p>\n\n<h2>More information about Scala List Sum Method</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala List Sum Method.</p>\n\n<div class=\"skb-focus\"><p><code>sum</code> will go through each element of the List and add all the elements together.</p>\n<p>It is actually a shortcut for <code>list.fold(0)( _ + _ )</code>. It might look strange syntax right now but SKB will help you become an expert soon. \n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala List Sum Method.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-option/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-method-with-arguments/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1228\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1228\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1228\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1228\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1228\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala List Sum Method &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala List Sum Method here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1228\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1228\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1228\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1228\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1228\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "WkXaFPHSR7q1M4I7xncZFg",
    "prevUrl": "method-with-arguments",
    "nextUrl": "option",
    "mainInfoBox": "<p>Scala has a lot of pre-built methods. We are going to learn about one related to <code>List</code> called <code>sum</code>.</p>",
    "detailedInfoBox": "<p><code>sum</code> will go through each element of the List and add all the elements together.</p>\n<p>It is actually a shortcut for <code>list.fold(0)( _ + _ )</code>. It might look strange syntax right now but SKB will help you become an expert soon. \n</p>"
  },
  {
    "id": 1230,
    "date": "2020-07-24T09:02:54",
    "date_gmt": "2020-07-24T17:02:54",
    "modified": "2020-09-09T14:25:30",
    "modified_gmt": "2020-09-09T22:25:30",
    "slug": "option",
    "status": "publish",
    "link": "https://leobenkel.com/2020/07/skb-scala-option/",
    "title": " Scala Option",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1MvnFN\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Option.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Option !</p>\n\n<div class=\"skb-focus\"><p><code>Option</code> is the way in Scala to handle <code>null</code>.\n</p>\n<p>It allows to encapsulate the concept of &#8220;<i>is this value defined</i>&#8221; or &#8220;<i>does this variable contains a value</i>&#8220;.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/77OEvedmT6KHssXPBduEIw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/77OEvedmT6KHssXPBduEIw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (77OEvedmT6KHssXPBduEIw)</a>.</p>\n\n<h2>More information about Scala Option</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Option.</p>\n\n<div class=\"skb-focus\"><p>You might have guessed it on your own but the <code>isDefined</code> method will return <code>true</code> when the <code>Option</code> contains a value, and <code>isEmpty</code> returns <code>true</code> when the <code>Option</code> contains nothing.</p>\n<p>We are going to learn, in later SKB, about<code>pattern matching</code> and <code>map</code>. It will allow us to modify the value contained in the <code>Option</code>.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Option.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-list-sum-method/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1230\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1230\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1230\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1230\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1230\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Option &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Option here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1230\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1230\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1230\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1230\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1230\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-option/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "77OEvedmT6KHssXPBduEIw",
    "prevUrl": "list-sum-method",
    "nextUrl": "val-lazy-def",
    "mainInfoBox": "<p><code>Option</code> is the way in Scala to handle <code>null</code>.\n</p>\n<p>It allows to encapsulate the concept of “<i>is this value defined</i>” or “<i>does this variable contains a value</i>“.</p>",
    "detailedInfoBox": "<p>You might have guessed it on your own but the <code>isDefined</code> method will return <code>true</code> when the <code>Option</code> contains a value, and <code>isEmpty</code> returns <code>true</code> when the <code>Option</code> contains nothing.</p>\n<p>We are going to learn, in later SKB, about<code>pattern matching</code> and <code>map</code>. It will allow us to modify the value contained in the <code>Option</code>.</p>"
  },
  {
    "id": 1272,
    "date": "2020-07-27T09:01:27",
    "date_gmt": "2020-07-27T17:01:27",
    "modified": "2020-07-29T09:02:16",
    "modified_gmt": "2020-07-29T17:02:16",
    "slug": "val-lazy-def",
    "status": "publish",
    "link": "https://leobenkel.com/2020/07/skb-scala-val-lazy-def/",
    "title": " Scala difference between val, lazy val and def",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1DxSYI\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about the difference between <code>val</code>, <code>lazy val</code> and <code>def</code> in Scala.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about the difference between <code>val</code>, <code>lazy val</code> and <code>def</code> in Scala !</p>\n\n<div class=\"skb-focus\"><p>We have seen <code>val</code> and <code>def</code> in previous SKBs but we haven&#8217;t encountered the keyword <code>lazy</code> before.</p>\n<p>Try to figure out by yourself what <code>lazy</code> does. Make sure to read the print statements in the console as you run the code.</p>\n</div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/fRqDtrL9Q22S2aB2Pue9mg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/fRqDtrL9Q22S2aB2Pue9mg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (fRqDtrL9Q22S2aB2Pue9mg)</a>.</p>\n\n<h2>More information about the difference between <code>val</code>, <code>lazy val</code> and <code>def</code> in Scala</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about the difference between <code>val</code>, <code>lazy val</code> and <code>def</code> in Scala.</p>\n\n<div class=\"skb-focus\"><p>Did you figure it out ?</p>\n\n<p>The keyword <code>lazy</code> allows a value to not be evaluated until the very first time it is called. If you call the value again, the previously computed value will be used.</p>\n<p>With <code>val</code> the value is computed instantly as the value is declared. You were able to see the print statement early in the log, before all the others.</p>\n<p>And for <code>def</code>, this is a method, so each time you call the method, you are recomputing the result.</p>\n\n<p>Summary: <ul>\n<li><code>val</code>: Computed once when declared</li>\n<li><code>lazy val</code>: Computed once when called</li>\n<li><code>def</code>: Computed each time it is called</li>\n</ul></p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for the difference between <code>val</code>, <code>lazy val</code> and <code>def</code> in Scala.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-option/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1272\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1272\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1272\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1272\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1272\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala difference between val, lazy val and def &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala difference between val, lazy val and def here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1272\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1272\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1272\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1272\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1272\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "fRqDtrL9Q22S2aB2Pue9mg",
    "prevUrl": "option",
    "nextUrl": "map-for-list",
    "mainInfoBox": "<p>We have seen <code>val</code> and <code>def</code> in previous SKBs but we haven’t encountered the keyword <code>lazy</code> before.</p>\n<p>Try to figure out by yourself what <code>lazy</code> does. Make sure to read the print statements in the console as you run the code.</p>\n",
    "detailedInfoBox": "<p>Did you figure it out ?</p>\n\n<p>The keyword <code>lazy</code> allows a value to not be evaluated until the very first time it is called. If you call the value again, the previously computed value will be used.</p>\n<p>With <code>val</code> the value is computed instantly as the value is declared. You were able to see the print statement early in the log, before all the others.</p>\n<p>And for <code>def</code>, this is a method, so each time you call the method, you are recomputing the result.</p>\n\n<p>Summary: </p><ul>\n<li><code>val</code>: Computed once when declared</li>\n<li><code>lazy val</code>: Computed once when called</li>\n<li><code>def</code>: Computed each time it is called</li>\n</ul><p></p>"
  },
  {
    "id": 1279,
    "date": "2020-07-29T09:00:13",
    "date_gmt": "2020-07-29T17:00:13",
    "modified": "2020-08-04T00:23:10",
    "modified_gmt": "2020-08-04T08:23:10",
    "slug": "map-for-list",
    "status": "publish",
    "link": "https://leobenkel.com/2020/07/skb-scala-map-for-list/",
    "title": " Scala Map for List",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1PhMg4\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>map</code> for List .</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>map</code> for List  !</p>\n\n<div class=\"skb-focus\"><p>Ready for our first dive into Functional Programming? Don&#8217;t worry, we are going through this adventure together and I will make sure you don&#8217;t get lost.</p>\n<p>This is the moment where you might hear about Monad, Monoid, Functors, but we are not doing any of that today. Today we are just learning about a function from the standard library called <code>map</code>. We can put fancy names on it later.</p>\n</div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/mqPBMWVGR5OIpa1J9etlYw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/mqPBMWVGR5OIpa1J9etlYw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (mqPBMWVGR5OIpa1J9etlYw)</a>.</p>\n\n<h2>More information about Scala <code>map</code> for List </h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>map</code> for List .</p>\n\n<div class=\"skb-focus\"><p>You might have understood that <code>map</code> is actually just like a <code>for each</code> from other languages.</p><p>If you don&#8217;t know about it from other language, not to worry.</p>\n\n<p><code>map</code> will just apply a function to each element of the list and return the list with the new values.</p>\n\n<p>If you have a list of type <code>A</code> and you apply a function that transforms a type <code>A</code> to a type <code>B</code> then you will have an output being a list of type <code>B</code>.\n\n<p>That&#8217;s it ! You did well for a first dive into Functional Programming. In upcoming SKBs we will go deeper into this aspect of Scala.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>map</code> for List .</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-val-lazy-def/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1279\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1279\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1279\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1279\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1279\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Map for List &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Map for List here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1279\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1279\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1279\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1279\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1279\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "mqPBMWVGR5OIpa1J9etlYw",
    "prevUrl": "val-lazy-def",
    "nextUrl": "class-new",
    "mainInfoBox": "<p>Ready for our first dive into Functional Programming? Don’t worry, we are going through this adventure together and I will make sure you don’t get lost.</p>\n<p>This is the moment where you might hear about Monad, Monoid, Functors, but we are not doing any of that today. Today we are just learning about a function from the standard library called <code>map</code>. We can put fancy names on it later.</p>\n",
    "detailedInfoBox": "<p>You might have understood that <code>map</code> is actually just like a <code>for each</code> from other languages.</p><p>If you don’t know about it from other language, not to worry.</p>\n\n<p><code>map</code> will just apply a function to each element of the list and return the list with the new values.</p>\n\n<p>If you have a list of type <code>A</code> and you apply a function that transforms a type <code>A</code> to a type <code>B</code> then you will have an output being a list of type <code>B</code>.\n\n</p><p>That’s it ! You did well for a first dive into Functional Programming. In upcoming SKBs we will go deeper into this aspect of Scala.</p>"
  },
  {
    "id": 1289,
    "date": "2020-07-31T09:00:32",
    "date_gmt": "2020-07-31T17:00:32",
    "modified": "2020-09-16T14:49:44",
    "modified_gmt": "2020-09-16T22:49:44",
    "slug": "class-new",
    "status": "publish",
    "link": "https://leobenkel.com/2020/07/skb-scala-class-new/",
    "title": " Scala Class &#8216;new&#8217;",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-20kStR\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Class <code>new</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Class <code>new</code> !</p>\n\n<div class=\"skb-focus\"><p>Scala is a language that join both worlds &#8220;Functional Programming&#8221; and &#8220;Object Oriented&#8221;.</p>\n<p>We talked a little bit about &#8220;Functional Programming&#8221; in the previous SKBs and today we are going to introduce the basics for &#8220;Object Oriented&#8221; : the classes and more specifically how to create an instance of a class.</p>\n<p>We will be diving a bit more into the theory after the exercise.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/Yqd2MrzTTJy5OdhDffdyyA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/Yqd2MrzTTJy5OdhDffdyyA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (Yqd2MrzTTJy5OdhDffdyyA)</a>.</p>\n\n<h2>More information about Scala Class <code>new</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Class <code>new</code>.</p>\n\n<div class=\"skb-focus\"><p>A <code>class</code> is a collection of functions that can be reused. This collection is created with parameters and that will make the <code>instance</code> of the class behave differently.</p>\n<p>In a lot of programming books, you will see a <code>class</code> being described as a &#8220;blueprint&#8221;. And using this &#8220;blueprint&#8221;, you are able to &#8220;instantiate&#8221;, or build, an <code>object</code>.</p>\n<p>The way to build a class in Scala is using the keyword <code>new</code>.</p>\n<p>\nTo summarize all the terminology:\n<ul>\n<li><b>Class</b>: A collection of methods, values. Built with parameter(s). Instantiated to an object via the keyword <code>new</code>.</li>\n<li><b>Object</b>: An instance of a class built with specific parameters.</li>\n<li><b>Instantiate</b>: The action of creating an object from a class.</li>\n<li><code>new</code>: The keyword used in Scala to instantiate a class and make an object.</li>\n<li><b>Field</b>: The <code>val</code> contained in the <code>class</code>.</li>\n<li><b>Method</b>: The <code>def</code> (functions) contained in the <code>class</code>.</li>\n<li><b>Member</b>: A term to describe both <code>field</code> and <code>method</code>.</li>\n</ul>\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Class <code>new</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-map-for-list/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1289\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1289\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1289\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1289\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1289\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Class &#8216;new&#8217; &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Class &#8216;new&#8217; here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1289\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1289\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1289\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1289\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1289\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "Yqd2MrzTTJy5OdhDffdyyA",
    "prevUrl": "map-for-list",
    "nextUrl": "comparators",
    "mainInfoBox": "<p>Scala is a language that join both worlds “Functional Programming” and “Object Oriented”.</p>\n<p>We talked a little bit about “Functional Programming” in the previous SKBs and today we are going to introduce the basics for “Object Oriented” : the classes and more specifically how to create an instance of a class.</p>\n<p>We will be diving a bit more into the theory after the exercise.</p>",
    "detailedInfoBox": "<p>A <code>class</code> is a collection of functions that can be reused. This collection is created with parameters and that will make the <code>instance</code> of the class behave differently.</p>\n<p>In a lot of programming books, you will see a <code>class</code> being described as a “blueprint”. And using this “blueprint”, you are able to “instantiate”, or build, an <code>object</code>.</p>\n<p>The way to build a class in Scala is using the keyword <code>new</code>.</p>\n<p>\nTo summarize all the terminology:\n</p><ul>\n<li><b>Class</b>: A collection of methods, values. Built with parameter(s). Instantiated to an object via the keyword <code>new</code>.</li>\n<li><b>Object</b>: An instance of a class built with specific parameters.</li>\n<li><b>Instantiate</b>: The action of creating an object from a class.</li>\n<li><code>new</code>: The keyword used in Scala to instantiate a class and make an object.</li>\n<li><b>Field</b>: The <code>val</code> contained in the <code>class</code>.</li>\n<li><b>Method</b>: The <code>def</code> (functions) contained in the <code>class</code>.</li>\n<li><b>Member</b>: A term to describe both <code>field</code> and <code>method</code>.</li>\n</ul>\n<p></p>"
  },
  {
    "id": 1296,
    "date": "2020-08-03T09:01:36",
    "date_gmt": "2020-08-03T17:01:36",
    "modified": "2020-09-16T15:34:46",
    "modified_gmt": "2020-09-16T23:34:46",
    "slug": "comparators",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-comparators/",
    "title": " Scala Comparators",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z168KaM\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Comparators.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Comparators !</p>\n\n<div class=\"skb-focus\"><p>A few new concepts are needed for this SKB.</p>\n<p>First, what is a <code>Boolean</code>? A <code>Boolean</code> can only take two values: <code>true</code> or <code>false</code>. It is the result of a mathematical question. For instance, is 2 less than 5 (<code>2 < 5</code>), it would returns \"yes\" (<code>true</code>).</p>\n<p>And from previous SKB, you might have noticed that <code>assert</code> tests if what is inside is <code>true</code>.</p>\n\n</div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that's how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/5MhccpxLQiSzOQ8CWjqjwQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/5MhccpxLQiSzOQ8CWjqjwQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (5MhccpxLQiSzOQ8CWjqjwQ)</a>.</p>\n\n<h2>More information about Scala Comparators</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Comparators.</p>\n\n<div class=\"skb-focus\"><p>In Scala, and in the majority of other programming languages, you have a series of built-in comparators for mathematics:</p>\n<p>\n<ul>\n\n<li><code>==</code> : for equality. Some tips here: <ul>\n<li>Notice that there are two <code>==</code>. With only one <code>=</code>, it would be an assignation (Like in: <code>val a = 2</code>).</li>\n<li>In your projects as a software engineer, always be careful about comparing numbers with decimals (Like <code>1.5632426546</code>, they are called <code>Double</code> or <code>Float</code>) because the computer will round those numbers. So instead of <code>a == b</code>, you should be doing something like: <code>Math.abs(a - b) < 0.01</code>.</li>\n</ul></li>\n\n<li><code>!=</code> : Not equal</li>\n<li><code>></code> : Greater than</li>\n<li><code><</code> : Less than</li>\n<li><code>>=</code> : Greater than or equal</li>\n<li><code><=</code> : Less than or equal</li>\n\n</ul>\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Comparators.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/07/skb-scala-class-new/\">the previous Scala knowledge Bits</a>, go check it out! :) </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1296\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1296\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1296\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1296\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1296\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Comparators &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Comparators here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1296\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1296\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1296\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1296\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1296\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "5MhccpxLQiSzOQ8CWjqjwQ",
    "prevUrl": "class-new",
    "nextUrl": "list-filter-method",
    "mainInfoBox": "<p>A few new concepts are needed for this SKB.</p>\n<p>First, what is a <code>Boolean</code>? A <code>Boolean</code> can only take two values: <code>true</code> or <code>false</code>. It is the result of a mathematical question. For instance, is 2 less than 5 (<code>2 &lt; 5</code>), it would returns \"yes\" (<code>true</code>).</p>\n<p>And from previous SKB, you might have noticed that <code>assert</code> tests if what is inside is <code>true</code>.</p>\n\n",
    "detailedInfoBox": "<p>In Scala, and in the majority of other programming languages, you have a series of built-in comparators for mathematics:</p>\n<p>\n</p><ul>\n\n<li><code>==</code> : for equality. Some tips here: <ul>\n<li>Notice that there are two <code>==</code>. With only one <code>=</code>, it would be an assignation (Like in: <code>val a = 2</code>).</li>\n<li>In your projects as a software engineer, always be careful about comparing numbers with decimals (Like <code>1.5632426546</code>, they are called <code>Double</code> or <code>Float</code>) because the computer will round those numbers. So instead of <code>a == b</code>, you should be doing something like: <code>Math.abs(a - b) &lt; 0.01</code>.</li>\n</ul></li>\n\n<li><code>!=</code> : Not equal</li>\n<li><code>&gt;</code> : Greater than</li>\n<li><code>&lt;</code> : Less than</li>\n<li><code>&gt;=</code> : Greater than or equal</li>\n<li><code>&lt;=</code> : Less than or equal</li>\n\n</ul>\n<p></p>"
  },
  {
    "id": 1292,
    "date": "2020-08-05T09:00:53",
    "date_gmt": "2020-08-05T17:00:53",
    "modified": "2020-09-18T14:42:05",
    "modified_gmt": "2020-09-18T22:42:05",
    "slug": "list-filter-method",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-list-filter-method/",
    "title": " Scala List Filter Method",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-2k3nGt\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala List <code>filter</code> Method.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala List <code>filter</code> Method !</p>\n\n<div class=\"skb-focus\"><p>In a previous SKB, we met the <code>map</code> method that the standard library offers. There are plenty more, but let’s focus on the <code>filter</code> method in this Scala Knowledge Bit.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/EVfJS5WZRDWtIdzPHXOs6w.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/EVfJS5WZRDWtIdzPHXOs6w\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (EVfJS5WZRDWtIdzPHXOs6w)</a>.</p>\n\n<h2>More information about Scala List <code>filter</code> Method</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala List <code>filter</code> Method.</p>\n\n<div class=\"skb-focus\"><p>The <code>filter</code> method allows you to keep the elements of the list that return true for the test (Also called a lambda function).</p>\n<p>For instance, for <code>list.filter(a => a > 2)</code>, the <code>list</code> will be filtered down to only keep the elements that are <code>> 2</code> (greater than 2). If the list was <code>List(1,2,3,4)</code> then the filter method would return a new list: <code>List(3,4)</code>.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala List <code>filter</code> Method.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-comparators/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1292\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1292\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1292\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1292\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1292\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala List Filter Method &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala List Filter Method here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1292\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1292\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1292\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1292\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1292\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "EVfJS5WZRDWtIdzPHXOs6w",
    "prevUrl": "comparators",
    "nextUrl": "call-by-name-parameters",
    "mainInfoBox": "<p>In a previous SKB, we met the <code>map</code> method that the standard library offers. There are plenty more, but let’s focus on the <code>filter</code> method in this Scala Knowledge Bit.</p>",
    "detailedInfoBox": "<p>The <code>filter</code> method allows you to keep the elements of the list that return true for the test (Also called a lambda function).</p>\n<p>For instance, for <code>list.filter(a =&gt; a &gt; 2)</code>, the <code>list</code> will be filtered down to only keep the elements that are <code>&gt; 2</code> (greater than 2). If the list was <code>List(1,2,3,4)</code> then the filter method would return a new list: <code>List(3,4)</code>.</p>"
  },
  {
    "id": 1320,
    "date": "2020-08-07T09:01:43",
    "date_gmt": "2020-08-07T17:01:43",
    "modified": "2020-08-28T12:02:41",
    "modified_gmt": "2020-08-28T20:02:41",
    "slug": "call-by-name-parameters",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/",
    "title": " Scala Call-by-name Parameters",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Zfozos\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala &#8216;call-by-name&#8217; parameters.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala &#8216;call-by-name&#8217; parameters !</p>\n\n<div class=\"skb-focus\"><p>There are two ways to give parameters to a function in most programming languages: &#8216;by-value&#8217; and &#8216;call-by-name&#8217;.</p>\n<p>The &#8216;by-value&#8217; way is what we have seen in previous SKBs when we used functions and methods.</p>\n<p>In this SKB, focus your attention on the way the parameters of the function are being declared and the syntax, notice anything?</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/XkgpvxRaQdSnfdO2yWuSOg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/XkgpvxRaQdSnfdO2yWuSOg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (XkgpvxRaQdSnfdO2yWuSOg)</a>.</p>\n\n<h2>More information about Scala &#8216;call-by-name&#8217; parameters</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala &#8216;call-by-name&#8217; parameters.</p>\n\n<div class=\"skb-focus\"><p>Did you notice the <code>=> Int</code> in the parameter list?</p>\n<p>You can understand it as if it was <code>() => Int</code>, meaning a function that will return <code>Int</code> when called.</p>\n<p>The content of the parameter will not be evaluated until needed. Be aware that it will be re-evaluated for each time it is called. But we will look into it into a more advanced SKB later on.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala &#8216;call-by-name&#8217; parameters.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-list-filter-method/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1320\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1320\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1320\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1320\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1320\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Call-by-name &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Call-by-name here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1320\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1320\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1320\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1320\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1320\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "XkgpvxRaQdSnfdO2yWuSOg",
    "prevUrl": "list-filter-method",
    "nextUrl": "case-class",
    "mainInfoBox": "<p>There are two ways to give parameters to a function in most programming languages: ‘by-value’ and ‘call-by-name’.</p>\n<p>The ‘by-value’ way is what we have seen in previous SKBs when we used functions and methods.</p>\n<p>In this SKB, focus your attention on the way the parameters of the function are being declared and the syntax, notice anything?</p>",
    "detailedInfoBox": "<p>Did you notice the <code>=&gt; Int</code> in the parameter list?</p>\n<p>You can understand it as if it was <code>() =&gt; Int</code>, meaning a function that will return <code>Int</code> when called.</p>\n<p>The content of the parameter will not be evaluated until needed. Be aware that it will be re-evaluated for each time it is called. But we will look into it into a more advanced SKB later on.</p>"
  },
  {
    "id": 1324,
    "date": "2020-08-10T09:01:37",
    "date_gmt": "2020-08-10T17:01:37",
    "modified": "2020-08-31T08:13:29",
    "modified_gmt": "2020-08-31T16:13:29",
    "slug": "case-class",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-case-class/",
    "title": " Scala Case Class",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z186v97\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Case Class.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Case Class !</p>\n\n<div class=\"skb-focus\"><p>We learned about <code>class</code> in a previous SKB, today we are going to learn about <code>case class</code>. They serve the same purpose which is to provide a blueprint to create <code>object</code>s. But case class provides a lot of build-in advantages.</p>\n<p>As a start, notice how the case class is being instantiated, and how the fields are being accessed.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/2cLIBX4MTeK7xf7fXBPI4A.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/2cLIBX4MTeK7xf7fXBPI4A\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (2cLIBX4MTeK7xf7fXBPI4A)</a>.</p>\n\n<h2>More information about Scala Case Class</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Case Class.</p>\n\n<div class=\"skb-focus\"><p>Did you notice that we do not need <code>new</code> to create the instance of the <code>class</code>?</p>\n<p>And did you notice that we do not need a function to access any of the fields?</p>\n<p>In Scala, <code>case class</code> provide build-in things, let&#8217;s go over them: \n<ul>\n\n<li>Constructor: To instantiate an object from a case class, no need for the <code>new</code> keyword. Note that <code>class</code> will not need <code>new</code> either in Scala 3. To understand how this is done, remember the words <code>apply</code> and <code>Companion Object</code>, we are going to come back to it later.</li>\n\n<li>Field accessors: in <code>case class</code>, the field are <code>public</code> ( we are going to talk about <code>visibility</code> later ) by default. So you can access their values without the need to a method that will return it for you.</li>\n\n<li>And more; remember the terms <code>unapply</code>, <code>Product</code> and <code>Serialization</code> for later SKBs.</li>\n\n</ul>\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Case Class.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-call-by-name-parameters/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1324\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1324\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1324\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1324\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1324\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Case Class &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Case Class here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1324\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1324\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1324\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1324\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1324\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "2cLIBX4MTeK7xf7fXBPI4A",
    "prevUrl": "call-by-name-parameters",
    "nextUrl": "objects",
    "mainInfoBox": "<p>We learned about <code>class</code> in a previous SKB, today we are going to learn about <code>case class</code>. They serve the same purpose which is to provide a blueprint to create <code>object</code>s. But case class provides a lot of build-in advantages.</p>\n<p>As a start, notice how the case class is being instantiated, and how the fields are being accessed.</p>",
    "detailedInfoBox": "<p>Did you notice that we do not need <code>new</code> to create the instance of the <code>class</code>?</p>\n<p>And did you notice that we do not need a function to access any of the fields?</p>\n<p>In Scala, <code>case class</code> provide build-in things, let’s go over them: \n</p><ul>\n\n<li>Constructor: To instantiate an object from a case class, no need for the <code>new</code> keyword. Note that <code>class</code> will not need <code>new</code> either in Scala 3. To understand how this is done, remember the words <code>apply</code> and <code>Companion Object</code>, we are going to come back to it later.</li>\n\n<li>Field accessors: in <code>case class</code>, the field are <code>public</code> ( we are going to talk about <code>visibility</code> later ) by default. So you can access their values without the need to a method that will return it for you.</li>\n\n<li>And more; remember the terms <code>unapply</code>, <code>Product</code> and <code>Serialization</code> for later SKBs.</li>\n\n</ul>\n<p></p>"
  },
  {
    "id": 1332,
    "date": "2020-08-12T09:03:24",
    "date_gmt": "2020-08-12T17:03:24",
    "modified": "2020-08-18T19:49:05",
    "modified_gmt": "2020-08-19T03:49:05",
    "slug": "objects",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-objects/",
    "title": " Scala objects",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z2beu02\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Objects.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Objects !</p>\n\n<div class=\"skb-focus\"><p>After seeing about <code>class</code> and <code>case class</code>, we are going to learn about <code>object</code>.</p>\n<p>I know, it is confusing, because we learned that an <code>object</code> is what we create when we instantiate a <code>class</code>, but this term can also be used to talk about a <code>class</code> that do not need to be instantiated. I know, confusing&#8230;</p>\n<p>To make it clearer, let&#8217;s just focus on those <code>object</code>. If you know other programming languages, you might have heard of <code>static</code>, it means that the <code>field</code> and <code>method</code> can be accessed without instantiating the <code>class</code>. Let&#8217;s talk about it more in the section after the exercise.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/1b36QjJlRVi02lvrXSLrgw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/1b36QjJlRVi02lvrXSLrgw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (1b36QjJlRVi02lvrXSLrgw)</a>.</p>\n\n<h2>More information about Scala Objects</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Objects.</p>\n\n<div class=\"skb-focus\"><p>Did you notice how the <code>field</code> and <code>method</code> are being accessed ?</p>\n<p>You use the name of the <code>object</code>, for instance: <code>Configuration</code>.To access <code>KeyNumberOfFoos</code> that is defined inside of <code>Configuration</code>, you just have to do: <code>Configuration.KeyNumberOfFoos</code>. No need for  <code>new</code> or anything special, you can just call the <code>member</code> of the <code>Object</code> directly.</p>\n<p><code>Object</code> are most commonly used when you want to defined constants values that are common for several systems or <code>classes</code>, like the <code>Configuration</code> one we have here. <code>Object</code> are also used to stored &#8220;<i>utility methods</i>&#8221; or also called &#8220;<i>helper methods</i>&#8220;. </p>\n\n<p>This <i>helper methods</i> are common tools for several systems that do not have dependencies defined at runtime. That means that you can define the behavior of this <code>method</code> only based on the input parameters, no need to know any more parameters. For instance, a method to sum two numbers <code>a + b</code>, you do not need to know more than the two inputs: <code>a</code> and <code>b</code>. They are self contained systems and can often be reused from one project to another as a library.</p>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Objects.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-case-class/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1332\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1332\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1332\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1332\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1332\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala objects &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala objects here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1332\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1332\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1332\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1332\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1332\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "1b36QjJlRVi02lvrXSLrgw",
    "prevUrl": "case-class",
    "nextUrl": "visibility",
    "mainInfoBox": "<p>After seeing about <code>class</code> and <code>case class</code>, we are going to learn about <code>object</code>.</p>\n<p>I know, it is confusing, because we learned that an <code>object</code> is what we create when we instantiate a <code>class</code>, but this term can also be used to talk about a <code>class</code> that do not need to be instantiated. I know, confusing…</p>\n<p>To make it clearer, let’s just focus on those <code>object</code>. If you know other programming languages, you might have heard of <code>static</code>, it means that the <code>field</code> and <code>method</code> can be accessed without instantiating the <code>class</code>. Let’s talk about it more in the section after the exercise.</p>",
    "detailedInfoBox": "<p>Did you notice how the <code>field</code> and <code>method</code> are being accessed ?</p>\n<p>You use the name of the <code>object</code>, for instance: <code>Configuration</code>.To access <code>KeyNumberOfFoos</code> that is defined inside of <code>Configuration</code>, you just have to do: <code>Configuration.KeyNumberOfFoos</code>. No need for  <code>new</code> or anything special, you can just call the <code>member</code> of the <code>Object</code> directly.</p>\n<p><code>Object</code> are most commonly used when you want to defined constants values that are common for several systems or <code>classes</code>, like the <code>Configuration</code> one we have here. <code>Object</code> are also used to stored “<i>utility methods</i>” or also called “<i>helper methods</i>“. </p>\n\n<p>This <i>helper methods</i> are common tools for several systems that do not have dependencies defined at runtime. That means that you can define the behavior of this <code>method</code> only based on the input parameters, no need to know any more parameters. For instance, a method to sum two numbers <code>a + b</code>, you do not need to know more than the two inputs: <code>a</code> and <code>b</code>. They are self contained systems and can often be reused from one project to another as a library.</p>\n"
  },
  {
    "id": 1343,
    "date": "2020-08-14T09:02:32",
    "date_gmt": "2020-08-14T17:02:32",
    "modified": "2020-08-18T19:50:38",
    "modified_gmt": "2020-08-19T03:50:38",
    "slug": "visibility",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-visibility/",
    "title": " Scala visibility",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-29w9uc\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala visibility.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala visibility !</p>\n\n<div class=\"skb-focus\"><p>Visibility is about what a <code>class</code> or an <code>object</code> expose to the rest of the world.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/8lBYPLO0RAGZLT1C7idAuw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/8lBYPLO0RAGZLT1C7idAuw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (8lBYPLO0RAGZLT1C7idAuw)</a>.</p>\n\n<h2>More information about Scala visibility</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala visibility.</p>\n\n<div class=\"skb-focus\"><p>Let&#8217;s review the different kind of visibility: </p>\n<p><ul>\n\n<li><code>public</code>: In scala, the <code>public</code> keyword does not exist, this is the default behavior. If nothing is specified, the member of this context will be available for all to call.</li>\n\n<li><code>private</code>: This will make the member not visible to the rest of the world (There is an exception about <code>companion object</code>, we are going to learn about it in a future SKB).</li>\n\n<li><code>protected</code>: This was not illustrated in this exercise. It is related to <i>object oriented programming</i> and more specifically about <i>inheritance</i>. We are going to learn more about it in a later SKB.</li>\n\n</ul></p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala visibility.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-objects/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1343\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1343\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1343\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1343\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1343\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala visibility &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala visibility here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1343\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1343\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1343\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1343\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1343\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "8lBYPLO0RAGZLT1C7idAuw",
    "prevUrl": "objects",
    "nextUrl": "companion-objects",
    "mainInfoBox": "<p>Visibility is about what a <code>class</code> or an <code>object</code> expose to the rest of the world.</p>",
    "detailedInfoBox": "<p>Let’s review the different kind of visibility: </p>\n<p></p><ul>\n\n<li><code>public</code>: In scala, the <code>public</code> keyword does not exist, this is the default behavior. If nothing is specified, the member of this context will be available for all to call.</li>\n\n<li><code>private</code>: This will make the member not visible to the rest of the world (There is an exception about <code>companion object</code>, we are going to learn about it in a future SKB).</li>\n\n<li><code>protected</code>: This was not illustrated in this exercise. It is related to <i>object oriented programming</i> and more specifically about <i>inheritance</i>. We are going to learn more about it in a later SKB.</li>\n\n</ul><p></p>"
  },
  {
    "id": 1337,
    "date": "2020-08-17T09:00:05",
    "date_gmt": "2020-08-17T17:00:05",
    "modified": "2020-09-02T14:30:52",
    "modified_gmt": "2020-09-02T22:30:52",
    "slug": "companion-objects",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-companion-objects/",
    "title": " Scala companion objects",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z2ab3Ps\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala companion objects.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala companion objects !</p>\n\n<div class=\"skb-focus\"><p><code>Companion objects</code> are a specific type of <code>object</code>.</p>\n\n<p>Just like the <code>object</code> we saw in the previous SKB, <code>companion object</code> does not need to be instantiated.</p>\n\n<p>The source of the main difference between <code>object</code> and <code>companion object</code> comes from the name that they share with a <code>class</code>.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/cwwIb13GTha0xT9adIjMqw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/cwwIb13GTha0xT9adIjMqw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (cwwIb13GTha0xT9adIjMqw)</a>.</p>\n\n<h2>More information about Scala companion objects</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala companion objects.</p>\n\n<div class=\"skb-focus\"><p>Did you notice that the <code>class</code> named <code>Animal</code> is able to call a method named <code>convertLegNumberToName</code> that is defined as <code>private</code>?</p>\n\n<p>Other thing to notice is the <code>import</code>. In the previous SKB related to <code>object</code>, we learned how to call the member of an <code>object</code> using its name. When you use the <code>import</code>, you do not need to use the name anymore. Inside the context, where the <code>import</code> is used, with the <code>Animal._</code>, the name is not needed to be called.</p>\n\n<p>To summarize, a <code>companion object</code> is exactly like an </code>object</code>, except that the <code>class</code> that share the same name can access the <code>private</code> members.</p>\n\n<p>It is commonly used when you need to have constant or helper methods related to this class.</p>\n<p>Leaving those members inside the class can create memory issues. Let&#8217;s say you have a large constant &#8211; maybe an array or some other complex object. If it is stored inside the <code>class</code>, then each instantiation will make a copy of this constant in the memory. If instead the constant is in the <code>companion object</code>, then the program will only have to create the constant once.</p>\n\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala companion objects.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-visibility/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1337\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1337\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1337\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1337\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1337\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala companion objects &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala companion objects here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1337\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1337\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1337\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1337\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1337\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "cwwIb13GTha0xT9adIjMqw",
    "prevUrl": "visibility",
    "nextUrl": "apply",
    "mainInfoBox": "<p><code>Companion objects</code> are a specific type of <code>object</code>.</p>\n\n<p>Just like the <code>object</code> we saw in the previous SKB, <code>companion object</code> does not need to be instantiated.</p>\n\n<p>The source of the main difference between <code>object</code> and <code>companion object</code> comes from the name that they share with a <code>class</code>.</p>",
    "detailedInfoBox": "<p>Did you notice that the <code>class</code> named <code>Animal</code> is able to call a method named <code>convertLegNumberToName</code> that is defined as <code>private</code>?</p>\n\n<p>Other thing to notice is the <code>import</code>. In the previous SKB related to <code>object</code>, we learned how to call the member of an <code>object</code> using its name. When you use the <code>import</code>, you do not need to use the name anymore. Inside the context, where the <code>import</code> is used, with the <code>Animal._</code>, the name is not needed to be called.</p>\n\n<p>To summarize, a <code>companion object</code> is exactly like an object, except that the <code>class</code> that share the same name can access the <code>private</code> members.</p>\n\n<p>It is commonly used when you need to have constant or helper methods related to this class.</p>\n<p>Leaving those members inside the class can create memory issues. Let’s say you have a large constant – maybe an array or some other complex object. If it is stored inside the <code>class</code>, then each instantiation will make a copy of this constant in the memory. If instead the constant is in the <code>companion object</code>, then the program will only have to create the constant once.</p>\n\n"
  },
  {
    "id": 1358,
    "date": "2020-08-19T09:03:28",
    "date_gmt": "2020-08-19T17:03:28",
    "modified": "2020-08-31T12:38:48",
    "modified_gmt": "2020-08-31T20:38:48",
    "slug": "apply",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-apply/",
    "title": " Scala apply",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-9dPCC\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>apply</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>apply</code> !</p>\n\n<div class=\"skb-focus\"><p><code>apply</code> is a <i>magic</i> Scala method. There is no need to call <code>apply</code> explicitly to execute it. And this is part of the tool that the <code>case class</code> use.</p>\n<p>This SKB might be a bit longer than previous ones.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/oyx7X5uwQam2xG8ieQt2BQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/oyx7X5uwQam2xG8ieQt2BQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (oyx7X5uwQam2xG8ieQt2BQ)</a>.</p>\n\n<h2>More information about Scala <code>apply</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>apply</code>.</p>\n\n<div class=\"skb-focus\"><p>\n<code>apply</code> can be called like any other method ( <code>Person.apply(...)</code> ) but it can be used without calling its name explicitely ( <code>Person(...)</code> ). And that&#8217;s it.\n</p>\n\n<p>\nIf you want to learn more, continue reading.\n</p>\n\n<p>In fact, you could implement a function yourself: </p>\n\n<pre>\nval add = new Function2[Int, Int, Int] {\n  def apply(a: Int, b: Int): Int = a + b\n}\n\nval result = add(1, 2)\n\nassert(result == 3)\n</pre>\n\n<p>Try and copy it above in the editor.</p>\n\n<p>You could also implement <code>if</code> yourself ! Try it by yourself before looking at Scastie.</p>\n\n<p>\nSolution: <a href=\"https://scastie.scala-lang.org/ZMltOxDQSQ2yusDiU6LNSg\" target=\"_blank\">Scastie (owFP4D18R6yjrDJoPLu7Bg) </a>\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>apply</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-companion-objects/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1358\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1358\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1358\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1358\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1358\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala apply &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala apply here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1358\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1358\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1358\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1358\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1358\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "oyx7X5uwQam2xG8ieQt2BQ",
    "prevUrl": "companion-objects",
    "nextUrl": "option-map",
    "mainInfoBox": "<p><code>apply</code> is a <i>magic</i> Scala method. There is no need to call <code>apply</code> explicitly to execute it. And this is part of the tool that the <code>case class</code> use.</p>\n<p>This SKB might be a bit longer than previous ones.</p>",
    "detailedInfoBox": "<p>\n<code>apply</code> can be called like any other method ( <code>Person.apply(...)</code> ) but it can be used without calling its name explicitely ( <code>Person(...)</code> ). And that’s it.\n</p>\n\n<p>\nIf you want to learn more, continue reading.\n</p>\n\n<p>In fact, you could implement a function yourself: </p>\n\n<pre>val add = new Function2[Int, Int, Int] {\n  def apply(a: Int, b: Int): Int = a + b\n}\n\nval result = add(1, 2)\n\nassert(result == 3)\n</pre>\n\n<p>Try and copy it above in the editor.</p>\n\n<p>You could also implement <code>if</code> yourself ! Try it by yourself before looking at Scastie.</p>\n\n<p>\nSolution: <a href=\"https://scastie.scala-lang.org/ZMltOxDQSQ2yusDiU6LNSg\" target=\"_blank\">Scastie (owFP4D18R6yjrDJoPLu7Bg) </a>\n</p>"
  },
  {
    "id": 1374,
    "date": "2020-08-21T09:00:44",
    "date_gmt": "2020-08-21T17:00:44",
    "modified": "2020-08-27T21:21:00",
    "modified_gmt": "2020-08-28T05:21:00",
    "slug": "option-map",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-option-map/",
    "title": " Scala Option map",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1A40wi\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Option <code>map</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Option <code>map</code> !</p>\n\n<div class=\"skb-focus\"><p>If you followed along, you might remember <code>map</code> from the <code>List</code>. In Scala, and in functional programming, you are going to hear about <code>map</code> a whole bunch.</p>\n\n<p><code>map</code> comes from the functional programming world, and from category theory in mathematics. We are going to dive deeper into those two concepts in the future but for now let&#8217;s focus only on the <code>map</code> method.</p>\n\n<p>Just to throw it out there, but don&#8217;t get hang on it too much, <code>map</code> is part of what is called a <code>functor</code>.</p>\n\n<p>Can you feel that the &#8220;m&#8221; word is going to show up soon ? Should we pop the bubble now ?</p>\n<p>Let&#8217;s rip off the bandage, right now. <strong>MONAD</strong> !</p>\n\n<p>That&#8217;s it, we said it. There is no turning back now. Good luck !</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/Zn7rGMlnSVWfCH3hCnKEhA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/Zn7rGMlnSVWfCH3hCnKEhA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (Zn7rGMlnSVWfCH3hCnKEhA)</a>.</p>\n\n<h2>More information about Scala Option <code>map</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Option <code>map</code>.</p>\n\n<div class=\"skb-focus\"><p>\nHave you recovered from the m-encounter ? Using the <code>map</code> wasn&#8217;t too bad, was it? And you used it before with the <code>List</code>.\n</p>\n\n<p>\nThere are few things to try to modify in this exercise. Go ahead and try those:\n<ul>\n<li>What happen when <code>input</code> is set to <code>None</code>?</li>\n\n<li>What happen if you replace <code>getOrElse</code> by <code>get</code> ? with <code>Some</code> and with <code>None</code>.</li>\n\n<li>\nYou might have written something like <code>.map(a => a + 1)</code> in your solution, try replacing <code>a => a</code> by <code>_</code>. This is some teasing for some upcoming SKB.\n</li>\n\n</ul>\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Option <code>map</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-apply/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1374\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1374\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1374\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1374\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1374\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Option map &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Option map here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1374\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1374\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1374\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1374\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1374\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "Zn7rGMlnSVWfCH3hCnKEhA",
    "prevUrl": "apply",
    "nextUrl": "list-flatten",
    "mainInfoBox": "<p>If you followed along, you might remember <code>map</code> from the <code>List</code>. In Scala, and in functional programming, you are going to hear about <code>map</code> a whole bunch.</p>\n\n<p><code>map</code> comes from the functional programming world, and from category theory in mathematics. We are going to dive deeper into those two concepts in the future but for now let’s focus only on the <code>map</code> method.</p>\n\n<p>Just to throw it out there, but don’t get hang on it too much, <code>map</code> is part of what is called a <code>functor</code>.</p>\n\n<p>Can you feel that the “m” word is going to show up soon ? Should we pop the bubble now ?</p>\n<p>Let’s rip off the bandage, right now. <strong>MONAD</strong> !</p>\n\n<p>That’s it, we said it. There is no turning back now. Good luck !</p>",
    "detailedInfoBox": "<p>\nHave you recovered from the m-encounter ? Using the <code>map</code> wasn’t too bad, was it? And you used it before with the <code>List</code>.\n</p>\n\n<p>\nThere are few things to try to modify in this exercise. Go ahead and try those:\n</p><ul>\n<li>What happen when <code>input</code> is set to <code>None</code>?</li>\n\n<li>What happen if you replace <code>getOrElse</code> by <code>get</code> ? with <code>Some</code> and with <code>None</code>.</li>\n\n<li>\nYou might have written something like <code>.map(a =&gt; a + 1)</code> in your solution, try replacing <code>a =&gt; a</code> by <code>_</code>. This is some teasing for some upcoming SKB.\n</li>\n\n</ul>\n<p></p>"
  },
  {
    "id": 1402,
    "date": "2020-08-24T09:02:03",
    "date_gmt": "2020-08-24T17:02:03",
    "modified": "2020-08-27T21:21:53",
    "modified_gmt": "2020-08-28T05:21:53",
    "slug": "list-flatten",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-list-flatten/",
    "title": " Scala List Flatten",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Za0d62\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala List <code>flatten</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala List <code>flatten</code> !</p>\n\n<div class=\"skb-focus\"><p>Do you remember the <code>map</code>, from few SKBs ago ?</p>\n\n<p>As a reminder, <code>map</code> allows you to transform a <code>List[A]</code> into a <code>List[B]</code>.</p>\n\n<p>What will happen if <code>B</code> is a <code>List</code> as well ?</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/fGhtslb9TiiTQ5brcXpgLg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/fGhtslb9TiiTQ5brcXpgLg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (fGhtslb9TiiTQ5brcXpgLg)</a>.</p>\n\n<h2>More information about Scala List <code>flatten</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala List <code>flatten</code>.</p>\n\n<div class=\"skb-focus\"><p>\n<code>flatten</code> allows you to turn a <code>List[List[A]]</code> into a <code>List[A]</code>.</p>\n\n<p>\nTry to experiment with other <i>containers</i> such as <code>Option</code> we saw in the past.\n</p>\n\n<p>What happen if you do <pre>\nval a: Option[Int] = Some(12)\n\nval aa: Option[Option[Int]] = a.map(x => Some(x))\n\nval flattenA: Option[Int] = aa.flatten\n</pre>\n</p>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala List <code>flatten</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-option-map/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1402\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1402\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1402\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1402\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1402\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala List Flatten &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala List Flatten here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1402\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1402\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1402\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1402\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1402\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "fGhtslb9TiiTQ5brcXpgLg",
    "prevUrl": "option-map",
    "nextUrl": "tuple",
    "mainInfoBox": "<p>Do you remember the <code>map</code>, from few SKBs ago ?</p>\n\n<p>As a reminder, <code>map</code> allows you to transform a <code>List[A]</code> into a <code>List[B]</code>.</p>\n\n<p>What will happen if <code>B</code> is a <code>List</code> as well ?</p>",
    "detailedInfoBox": "<p>\n<code>flatten</code> allows you to turn a <code>List[List[A]]</code> into a <code>List[A]</code>.</p>\n\n<p>\nTry to experiment with other <i>containers</i> such as <code>Option</code> we saw in the past.\n</p>\n\n<p>What happen if you do </p><pre>val a: Option[Int] = Some(12)\n\nval aa: Option[Option[Int]] = a.map(x =&gt; Some(x))\n\nval flattenA: Option[Int] = aa.flatten\n</pre>\n<p></p>\n"
  },
  {
    "id": 1442,
    "date": "2020-08-26T09:02:11",
    "date_gmt": "2020-08-26T17:02:11",
    "modified": "2020-08-28T13:43:41",
    "modified_gmt": "2020-08-28T21:43:41",
    "slug": "tuple",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-tuple/",
    "title": " Scala Tuple",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1DlUgo\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Tuple.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Tuple !</p>\n\n<div class=\"skb-focus\"><p>Imagine, for instance, you would like to pair together an identification number (<code>Int</code>) and a name (<code>String</code>).\n</p>\n<p>Let&#8217;s see how to do that in Scala.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/TUuvqIPHTc2A3jHNSYMBBQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/TUuvqIPHTc2A3jHNSYMBBQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (TUuvqIPHTc2A3jHNSYMBBQ)</a>.</p>\n\n<h2>More information about Scala Tuple</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Tuple.</p>\n\n<div class=\"skb-focus\"><p>\nBy now, you probably have understood that a Tuple is a way to combine two or more types into one. For instance you can combine a <code>Int</code> and a <code>String</code> into a tuple <code>(Int, String)</code>. You can combine up to 22 Types ! ( You can read more why <a href=\"https://stackoverflow.com/questions/4152223/why-are-scala-functions-limited-to-22-parameters\" target=\"_blank\">on here</a> )\n</p>\n\n<p>The other important aspect is the accessors. For instance, if you have a Tuple <code>(Double, Int, String)</code>, to access the first element you have to use <code>_1</code>, the second with <code>_2</code>, etc&#8230;</p>\n\n<p>Tuples are also involved in the concept of <i>pattern matching</i> that we are going to learn more about later.</p>\n\n<p>As a note about good practices: whenever possible, you should use a <code>case class</code> rather than a Tuple. In the long run, it makes things much easier to manage and maintain.</p>\n\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Tuple.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-list-flatten/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1442\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1442\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1442\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1442\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1442\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Tuple &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Tuple here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1442\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1442\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1442\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1442\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1442\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "TUuvqIPHTc2A3jHNSYMBBQ",
    "prevUrl": "list-flatten",
    "nextUrl": "thread-sleep",
    "mainInfoBox": "<p>Imagine, for instance, you would like to pair together an identification number (<code>Int</code>) and a name (<code>String</code>).\n</p>\n<p>Let’s see how to do that in Scala.</p>",
    "detailedInfoBox": "<p>\nBy now, you probably have understood that a Tuple is a way to combine two or more types into one. For instance you can combine a <code>Int</code> and a <code>String</code> into a tuple <code>(Int, String)</code>. You can combine up to 22 Types ! ( You can read more why <a href=\"https://stackoverflow.com/questions/4152223/why-are-scala-functions-limited-to-22-parameters\" target=\"_blank\">on here</a> )\n</p>\n\n<p>The other important aspect is the accessors. For instance, if you have a Tuple <code>(Double, Int, String)</code>, to access the first element you have to use <code>_1</code>, the second with <code>_2</code>, etc…</p>\n\n<p>Tuples are also involved in the concept of <i>pattern matching</i> that we are going to learn more about later.</p>\n\n<p>As a note about good practices: whenever possible, you should use a <code>case class</code> rather than a Tuple. In the long run, it makes things much easier to manage and maintain.</p>\n\n"
  },
  {
    "id": 1446,
    "date": "2020-08-28T09:04:15",
    "date_gmt": "2020-08-28T17:04:15",
    "modified": "2020-08-31T20:16:54",
    "modified_gmt": "2020-09-01T04:16:54",
    "slug": "thread-sleep",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-thread-sleep/",
    "title": " Scala Thread Sleep",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z2lhABq\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Thread Sleep.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Thread Sleep !</p>\n\n<div class=\"skb-focus\"><p>\nThis seem like a simple thing but it will allow us to introduce the idea of <code>Thread</code>, which is a much more complex beast.\n</p>\n\n<p>\nThank you for <strong>iamkpr</strong> from our Discord channel for suggesting going toward asynchronous computation, threading and <code>Future</code>.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/W8rybNOdRk29mQwdFVjqNg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/W8rybNOdRk29mQwdFVjqNg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (W8rybNOdRk29mQwdFVjqNg)</a>.</p>\n\n<h2>More information about Scala Thread Sleep</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Thread Sleep.</p>\n\n<div class=\"skb-focus\"><p>\nA <code>thread</code> is a stream of computation. For instance, you would do:\n</p> \n\n<pre>\nval c = a + b\nval d = c * 2\n</pre>\n\n<p>Those two operations happen one at a time. There is no way for <code>d</code> to be computed before <code>c</code>, in this situation.</p>\n\n<p>Now imagine that you want, for instance, retrieve some data somewhere from two different places. You could query those sources one at a time but most of the time it would be more efficient and faster to start requesting the data from both places so that we can collect the data from both places at once.</p>\n\n<p>You might have heard of <i>multi-threading</i> maybe in the past. This means that the application is able to do more than one thing in parallel.</p>\n\n<p>This SKB was not treating any of those topics about asynchronous operation and parallelization. However, it gaves you a taste of what it is like to have an operation that takes time. The method <code>Thread.sleep(  )</code> allows you to pause the current <code>thread</code> for a number of milliseconds.</p>\n\n<p>When you work on real life projects, time is a very important factor. And being able to leverage threads to run several things at once is extremely important. But don&#8217;t panic, we are going to slowly approach the problem, one SKB at a time.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Thread Sleep.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-random/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-tuple/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1446\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1446\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1446\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1446\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1446\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Thread Sleep &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Scala Thread Sleep here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1446\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1446\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1446\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1446\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1446\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "W8rybNOdRk29mQwdFVjqNg",
    "prevUrl": "tuple",
    "nextUrl": "random",
    "mainInfoBox": "<p>\nThis seem like a simple thing but it will allow us to introduce the idea of <code>Thread</code>, which is a much more complex beast.\n</p>\n\n<p>\nThank you for <strong>iamkpr</strong> from our Discord channel for suggesting going toward asynchronous computation, threading and <code>Future</code>.\n</p>",
    "detailedInfoBox": "<p>\nA <code>thread</code> is a stream of computation. For instance, you would do:\n</p> \n\n<pre>val c = a + b\nval d = c * 2\n</pre>\n\n<p>Those two operations happen one at a time. There is no way for <code>d</code> to be computed before <code>c</code>, in this situation.</p>\n\n<p>Now imagine that you want, for instance, retrieve some data somewhere from two different places. You could query those sources one at a time but most of the time it would be more efficient and faster to start requesting the data from both places so that we can collect the data from both places at once.</p>\n\n<p>You might have heard of <i>multi-threading</i> maybe in the past. This means that the application is able to do more than one thing in parallel.</p>\n\n<p>This SKB was not treating any of those topics about asynchronous operation and parallelization. However, it gaves you a taste of what it is like to have an operation that takes time. The method <code>Thread.sleep(  )</code> allows you to pause the current <code>thread</code> for a number of milliseconds.</p>\n\n<p>When you work on real life projects, time is a very important factor. And being able to leverage threads to run several things at once is extremely important. But don’t panic, we are going to slowly approach the problem, one SKB at a time.</p>"
  },
  {
    "id": 1468,
    "date": "2020-08-31T09:00:58",
    "date_gmt": "2020-08-31T17:00:58",
    "modified": "2020-09-02T14:51:55",
    "modified_gmt": "2020-09-02T22:51:55",
    "slug": "random",
    "status": "publish",
    "link": "https://leobenkel.com/2020/08/skb-scala-random/",
    "title": " Scala Random",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-5PdlP\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Random.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Random !</p>\n\n<div class=\"skb-focus\"><p>\nA random number generator will generate a number that cannot be predicted.\n</p>\n\n<p>Although, it is impossible to generate <i>true</i> random number on a computer.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/jVPerO3XQwWD2dyHZeWgww.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/jVPerO3XQwWD2dyHZeWgww\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (jVPerO3XQwWD2dyHZeWgww)</a>.</p>\n\n<h2>More information about Scala Random</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Random.</p>\n\n<div class=\"skb-focus\"><p>Please take a look at line 3 with the <code>import</code> statement. This tells the compiler that, to be able to compile this code, it will need to fetch this other component. In most Scala code you are going to see in your professional life, there will be <code>import</code> statements at the beginning of the files. But, do not worry, those are usually added automatically by the development environment (IDE) so you don&#8217;t have to care for it quite yet.</p>\n\n<p>\nYou recognize the <code>new</code> from the SKB about <code>class</code>. It tells us that <code>scala.util.Random</code> is a <code>class</code> that needs to be instantiated before able to use it.</p>\n</p>\n\n<p>Now we have a random generator, what can we do with it? You can generate a lot of different types, here we are only focusing on <code>Int</code> to simplify things but you can take a look at <a href=\"https://www.scala-lang.org/api/current/scala/util/Random.html\" target=\"_blank\">scala.util.Random documentation</a> to see what else is available.</p>\n\n<p>Try running the code several times, do you see that the number generated are different each time?</p>\n\n<p>However, the number generated by the generator started with a seed always generate the same series of number. This is because there are no true random in a computer. A random generator is a function that given a number generate a new number. The starting number is the <code>seed</code>. If you are playing procedurally generated games, such as Minecraft for instance, this is what the <code>seed</code> is for, it initializes the random generator. </p>\n\n<p>One interesting part of this SKB is the <code>randomInt</code> method. Did you figure out what was the missing part ? If not, here is the solution:</p>\n\n<pre>\nrand.nextInt(max - min) + min\n</pre>\n\n<p>\nThe first part ( <code>rand.nextInt(max - min)</code> ) will return an Integer between <code>0</code> and <code>max - min</code> but we want something between <code>min</code> and <code>max</code>. We need to add <code>min</code>. That way, we generate a number between <code>0 + min</code> and <code>max - min + min</code>, which resolve to <code>min</code> to <code>max</code>.\n</p>\n\n<p>\nThere is a little brain candy at the end of the code, did you notice it ? <code>for</code>. This is called a <i>for-comprehension</i>. We are going to go more into details about it in up-coming SKBs.\n</p>\n\n<p>\nAn other brain candy is the <code>range</code>. In Scala, you can describe a range of number in different ways:\n<ul>\n<li><code>0 to 2</code> will generate the numbers <code>0, 1, 2</code></li>\n<li><code>0 until 2</code> which will generate the numbers <code>0, 1</code></li>\n<li><code>0 until 10 by 3</code> which will generate the numbers <code>0, 3, 6, 9</code></li>\n</ul>\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Random.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-thread-sleep/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1468\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1468\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1468\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1468\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1468\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Random &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Random here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1468\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1468\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1468\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1468\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1468\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/08/skb-scala-random/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "jVPerO3XQwWD2dyHZeWgww",
    "prevUrl": "thread-sleep",
    "nextUrl": "flatmap",
    "mainInfoBox": "<p>\nA random number generator will generate a number that cannot be predicted.\n</p>\n\n<p>Although, it is impossible to generate <i>true</i> random number on a computer.</p>",
    "detailedInfoBox": "<p>Please take a look at line 3 with the <code>import</code> statement. This tells the compiler that, to be able to compile this code, it will need to fetch this other component. In most Scala code you are going to see in your professional life, there will be <code>import</code> statements at the beginning of the files. But, do not worry, those are usually added automatically by the development environment (IDE) so you don’t have to care for it quite yet.</p>\n\n<p>\nYou recognize the <code>new</code> from the SKB about <code>class</code>. It tells us that <code>scala.util.Random</code> is a <code>class</code> that needs to be instantiated before able to use it.</p>\n<p></p>\n\n<p>Now we have a random generator, what can we do with it? You can generate a lot of different types, here we are only focusing on <code>Int</code> to simplify things but you can take a look at <a href=\"https://www.scala-lang.org/api/current/scala/util/Random.html\" target=\"_blank\">scala.util.Random documentation</a> to see what else is available.</p>\n\n<p>Try running the code several times, do you see that the number generated are different each time?</p>\n\n<p>However, the number generated by the generator started with a seed always generate the same series of number. This is because there are no true random in a computer. A random generator is a function that given a number generate a new number. The starting number is the <code>seed</code>. If you are playing procedurally generated games, such as Minecraft for instance, this is what the <code>seed</code> is for, it initializes the random generator. </p>\n\n<p>One interesting part of this SKB is the <code>randomInt</code> method. Did you figure out what was the missing part ? If not, here is the solution:</p>\n\n<pre>rand.nextInt(max - min) + min\n</pre>\n\n<p>\nThe first part ( <code>rand.nextInt(max - min)</code> ) will return an Integer between <code>0</code> and <code>max - min</code> but we want something between <code>min</code> and <code>max</code>. We need to add <code>min</code>. That way, we generate a number between <code>0 + min</code> and <code>max - min + min</code>, which resolve to <code>min</code> to <code>max</code>.\n</p>\n\n<p>\nThere is a little brain candy at the end of the code, did you notice it ? <code>for</code>. This is called a <i>for-comprehension</i>. We are going to go more into details about it in up-coming SKBs.\n</p>\n\n<p>\nAn other brain candy is the <code>range</code>. In Scala, you can describe a range of number in different ways:\n</p><ul>\n<li><code>0 to 2</code> will generate the numbers <code>0, 1, 2</code></li>\n<li><code>0 until 2</code> which will generate the numbers <code>0, 1</code></li>\n<li><code>0 until 10 by 3</code> which will generate the numbers <code>0, 3, 6, 9</code></li>\n</ul>\n<p></p>"
  },
  {
    "id": 1494,
    "date": "2020-09-02T09:10:15",
    "date_gmt": "2020-09-02T17:10:15",
    "modified": "2021-05-06T14:36:50",
    "modified_gmt": "2021-05-06T22:36:50",
    "slug": "flatmap",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-flatmap/",
    "title": " Scala flatMap",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z2c72QR\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>flatMap</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>flatMap</code> !</p>\n\n<div class=\"skb-focus\"><p>\nI want to introduce you slowly to more complex problems. This one is still fun, as you know, the main topic is <code>flatMap</code> but you are going to get an intuition for a little more.</p>\n\n<p>Enjoy the ride.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/ldCLOORGSEGwvfDOlUKDWA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/ldCLOORGSEGwvfDOlUKDWA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (ldCLOORGSEGwvfDOlUKDWA)</a>.</p>\n\n<h2>More information about Scala <code>flatMap</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>flatMap</code>.</p>\n\n<div class=\"skb-focus\"><p>\nDid you get <code>flatMap</code> ? It is <code>map</code> followed by <code>flatten</code>. Try to replace the <code>flatMap</code> in the code above by <code>map</code> and add <code>flatten</code> after it.\n</p>\n<p>\nOk, now that the topic of today&#8217;s episode is done. What is the wizardry with all the <code>case</code> ?! This is called <i>pattern matching</i>. I am sure that, right now, you have a good intuition about it, but we are going to dive more into it, soon.</p>\n<p>Stay tuned! \n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>flatMap</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/08/skb-scala-random/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1494\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1494\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1494\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1494\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1494\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala flatMap &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala flatMap here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1494\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1494\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1494\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1494\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1494\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "ldCLOORGSEGwvfDOlUKDWA",
    "prevUrl": "random",
    "nextUrl": "curry",
    "mainInfoBox": "<p>\nI want to introduce you slowly to more complex problems. This one is still fun, as you know, the main topic is <code>flatMap</code> but you are going to get an intuition for a little more.</p>\n\n<p>Enjoy the ride.\n</p>",
    "detailedInfoBox": "<p>\nDid you get <code>flatMap</code> ? It is <code>map</code> followed by <code>flatten</code>. Try to replace the <code>flatMap</code> in the code above by <code>map</code> and add <code>flatten</code> after it.\n</p>\n<p>\nOk, now that the topic of today’s episode is done. What is the wizardry with all the <code>case</code> ?! This is called <i>pattern matching</i>. I am sure that, right now, you have a good intuition about it, but we are going to dive more into it, soon.</p>\n<p>Stay tuned! \n</p>"
  },
  {
    "id": 1511,
    "date": "2020-09-04T09:03:48",
    "date_gmt": "2020-09-04T17:03:48",
    "modified": "2020-09-09T18:53:11",
    "modified_gmt": "2020-09-10T02:53:11",
    "slug": "curry",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-curry/",
    "title": " Scala Curry",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1ckIbN\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Curry.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Curry !</p>\n\n<div class=\"skb-focus\"><p>No, we are not talking about food here.</p>\n\n<p>It is just a fancy way to talk about something simple. It describes the transformation of a method that takes several arguments into a series of function that each take one of those arguments. Simple? Try on the exercise.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/yOTTk60dS4W0xRVsPMejbg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/yOTTk60dS4W0xRVsPMejbg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (yOTTk60dS4W0xRVsPMejbg)</a>.</p>\n\n<h2>More information about Scala Curry</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Curry.</p>\n\n<div class=\"skb-focus\"><p>See? Simple. Some coding is worth a thousand words!</p>\n\n<p>Writing the code that way has a few advantages.</p>\n\n<p>\nFor instance, you can decompose the function into <i>partially applied functions</i>, like <code>add2</code> in the exercise. This example is simple, but imagine a complex function that takes a database connector and/or configurations. You could set those arguments, and then only reuse the <i>partially applied function</i> when needed, I like to call it a pre-configured operation. \n</p>\n\n<p>\nI also like using it for aesthetics, It allows to use <code>{ }</code>like in <code>r3</code> in the exercise. \n</p>\n\n<p>And you can have as many arguments chained that way, As well as also combinations, for instance the first block could have 2 arguments and then 1 and then 3 arguments. Use it wisely depending on your needs.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Curry.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-try/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-flatmap/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1511\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1511\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1511\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1511\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1511\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Curry &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Curry here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1511\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1511\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1511\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1511\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1511\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "yOTTk60dS4W0xRVsPMejbg",
    "prevUrl": "flatmap",
    "nextUrl": "try",
    "mainInfoBox": "<p>No, we are not talking about food here.</p>\n\n<p>It is just a fancy way to talk about something simple. It describes the transformation of a method that takes several arguments into a series of function that each take one of those arguments. Simple? Try on the exercise.</p>",
    "detailedInfoBox": "<p>See? Simple. Some coding is worth a thousand words!</p>\n\n<p>Writing the code that way has a few advantages.</p>\n\n<p>\nFor instance, you can decompose the function into <i>partially applied functions</i>, like <code>add2</code> in the exercise. This example is simple, but imagine a complex function that takes a database connector and/or configurations. You could set those arguments, and then only reuse the <i>partially applied function</i> when needed, I like to call it a pre-configured operation. \n</p>\n\n<p>\nI also like using it for aesthetics, It allows to use <code>{ }</code>like in <code>r3</code> in the exercise. \n</p>\n\n<p>And you can have as many arguments chained that way, As well as also combinations, for instance the first block could have 2 arguments and then 1 and then 3 arguments. Use it wisely depending on your needs.</p>"
  },
  {
    "id": 1538,
    "date": "2020-09-07T09:01:03",
    "date_gmt": "2020-09-07T17:01:03",
    "modified": "2020-09-09T18:54:47",
    "modified_gmt": "2020-09-10T02:54:47",
    "slug": "try",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-try/",
    "title": " Scala Try",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1urhOm\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>Try</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>Try</code> !</p>\n\n<div class=\"skb-focus\"><p>\nOne thing to know first is the concept of <code>Exception</code>. An <code>Exception</code>, in java and Scala, is when an error happen. It will stop the interruption of the program and <code>throw</code> an <code>Exception</code>.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/qtHKpgWXTeiYGARNzTp6zA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/qtHKpgWXTeiYGARNzTp6zA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (qtHKpgWXTeiYGARNzTp6zA)</a>.</p>\n\n<h2>More information about Scala <code>Try</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>Try</code>.</p>\n\n<div class=\"skb-focus\"><p>\nThe way to manually trigger an <code>Exception</code> is with <code>throw</code>. The code will then spit out what is called a <i>stack trace</i>. The stack trace will display each line of code that was in the stack of operation when the <code>Exception</code> occurred. It is essential to know how to read those when fixing a bug in a software.\n</p>\n\n<p>\nSometimes, a code will trigger an unexpected error, not one you decide to trigger. For instance, with bad math or more commonly from a third party library like a database connection. The connection might fail or timeout, etc&#8230; And then you need to react from the error. Maybe it is a critical error and you will decide to let the program stop its execution. But sometimes, you might be able to recover, in the case of a database, you could retry until it works, or retries several times until it succeed. \n<p>\n\n<p>\n<code>Try</code> is the way to handle <code>Exception</code> in Scala. It allows you to abstract the potential failure and use the same methods that <code>Option</code> has to manipulate the data that might or might not be there. But instead of <code>None</code> when the <code>Option</code> is empty, you get an <code>Exception</code> when it is not defined which would carry more information about the kind of failure that was encountered. Like <code>Option</code> you can use <code>map</code>, <code>flatMap</code>,<code>get</code>, <code>getOrElse</code> and more.\n</p>\n\n<p>\nGo back to the editor and try to make some code using <code>map</code> and <code>flatMap</code> with <code>Try</code>.\n</p>\n\n<p>You might have noticed the <code>case</code> as well. This is still <i>pattern matching</i>. It is a bit piece of Scala and it is hard to explain, which is why I have been trying to slowly introducing it so when it comes time to dive more into it, you will already have some kind of intuition about it. Patience 🙂</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>Try</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-range/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-curry/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1538\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1538\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1538\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1538\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1538\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Try &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Try here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1538\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1538\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1538\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1538\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1538\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-try/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "qtHKpgWXTeiYGARNzTp6zA",
    "prevUrl": "curry",
    "nextUrl": "range",
    "mainInfoBox": "<p>\nOne thing to know first is the concept of <code>Exception</code>. An <code>Exception</code>, in java and Scala, is when an error happen. It will stop the interruption of the program and <code>throw</code> an <code>Exception</code>.\n</p>",
    "detailedInfoBox": "<p>\nThe way to manually trigger an <code>Exception</code> is with <code>throw</code>. The code will then spit out what is called a <i>stack trace</i>. The stack trace will display each line of code that was in the stack of operation when the <code>Exception</code> occurred. It is essential to know how to read those when fixing a bug in a software.\n</p>\n\n<p>\nSometimes, a code will trigger an unexpected error, not one you decide to trigger. For instance, with bad math or more commonly from a third party library like a database connection. The connection might fail or timeout, etc… And then you need to react from the error. Maybe it is a critical error and you will decide to let the program stop its execution. But sometimes, you might be able to recover, in the case of a database, you could retry until it works, or retries several times until it succeed. \n</p><p>\n\n</p><p>\n<code>Try</code> is the way to handle <code>Exception</code> in Scala. It allows you to abstract the potential failure and use the same methods that <code>Option</code> has to manipulate the data that might or might not be there. But instead of <code>None</code> when the <code>Option</code> is empty, you get an <code>Exception</code> when it is not defined which would carry more information about the kind of failure that was encountered. Like <code>Option</code> you can use <code>map</code>, <code>flatMap</code>,<code>get</code>, <code>getOrElse</code> and more.\n</p>\n\n<p>\nGo back to the editor and try to make some code using <code>map</code> and <code>flatMap</code> with <code>Try</code>.\n</p>\n\n<p>You might have noticed the <code>case</code> as well. This is still <i>pattern matching</i>. It is a bit piece of Scala and it is hard to explain, which is why I have been trying to slowly introducing it so when it comes time to dive more into it, you will already have some kind of intuition about it. Patience 🙂</p>"
  },
  {
    "id": 1547,
    "date": "2020-09-09T09:06:05",
    "date_gmt": "2020-09-09T17:06:05",
    "modified": "2020-09-11T09:34:43",
    "modified_gmt": "2020-09-11T17:34:43",
    "slug": "range",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-range/",
    "title": " Scala Range",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z23Cf7W\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>Range</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>Range</code> !</p>\n\n<div class=\"skb-focus\"><p>I can&#8217;t believe we haven&#8217;t seen <code>Range</code> yet !</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/3mkgQBbsRAKu0Yqo3tzoxA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/3mkgQBbsRAKu0Yqo3tzoxA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (3mkgQBbsRAKu0Yqo3tzoxA)</a>.</p>\n\n<h2>More information about Scala <code>Range</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>Range</code>.</p>\n\n<div class=\"skb-focus\"><p>Super easy ! Right ? And so useful and powerful.</p>\n\n<p>Summary of the keywords:<p>\n\n<ul>\n\n<li><code>to</code>: When you do <code>0 to 3</code>, you will get the numbers <code>0, 1, 2, 3</code>. Notice that the end boundary <strong>is included</strong>.</li>\n\n<li><code>until</code>: When you do <code>0 until 3</code>, you will get the numbers <code>0, 1, 2</code>. Notice that the end boundary <strong>is not included</strong>.</li>\n\n<li><code>by</code>: When you do <code>0 to 11 by 3</code>, you will get the numbers <code>0, 3, 6, 9</code>. The default value is <code>by 1</code>.</li>\n\n</ul>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>Range</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-try/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1547\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1547\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1547\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1547\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1547\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Range &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Range here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1547\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1547\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1547\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1547\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1547\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-range/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "3mkgQBbsRAKu0Yqo3tzoxA",
    "prevUrl": "try",
    "nextUrl": "list-parallel",
    "mainInfoBox": "<p>I can’t believe we haven’t seen <code>Range</code> yet !</p>",
    "detailedInfoBox": "<p>Super easy ! Right ? And so useful and powerful.</p>\n\n<p>Summary of the keywords:</p><p>\n\n</p><ul>\n\n<li><code>to</code>: When you do <code>0 to 3</code>, you will get the numbers <code>0, 1, 2, 3</code>. Notice that the end boundary <strong>is included</strong>.</li>\n\n<li><code>until</code>: When you do <code>0 until 3</code>, you will get the numbers <code>0, 1, 2</code>. Notice that the end boundary <strong>is not included</strong>.</li>\n\n<li><code>by</code>: When you do <code>0 to 11 by 3</code>, you will get the numbers <code>0, 3, 6, 9</code>. The default value is <code>by 1</code>.</li>\n\n</ul>\n"
  },
  {
    "id": 1543,
    "date": "2020-09-11T09:01:21",
    "date_gmt": "2020-09-11T17:01:21",
    "modified": "2020-09-16T09:32:51",
    "modified_gmt": "2020-09-16T17:32:51",
    "slug": "list-parallel",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-list-parallel/",
    "title": " Scala List parallel",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1NIdqO\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala List <code>par</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala List <code>par</code> !</p>\n\n<div class=\"skb-focus\"><p>\nI am going to give you an introduction to <i>parallelization</i>. For this, I will be using <code>par</code>.</p>\n\n<p>However, you have to know, that to use this in <strong>Scala 2.13+</strong> you need extra steps. You can read more on <a href=\"https://stackoverflow.com/a/57290463/3357831\" target=\"_blank\">Stackoverflow</a>.  I made the choice to still be using it because, I think, it is a great stepping stone to understand more complex subjects.\n</p>\n<p>Let&#8217;s dive in!</p>\n</div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/8kl0ZPy6T2ycipzz5iNkSg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/8kl0ZPy6T2ycipzz5iNkSg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (8kl0ZPy6T2ycipzz5iNkSg)</a>.</p>\n\n<h2>More information about Scala List <code>par</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala List <code>par</code>.</p>\n\n<div class=\"skb-focus\"><p>\nCompare the output of the two <code>map</code>. In the first one, you see the numbers in the same order they are in the source <code>Range</code>. In the second one, the order is random, try running it several times ; you will see the order of the print statements change.\n</p>\n\n<p>\nThis happen because all the operation executed in the <code>map</code> happen at the <i>same</i> time, in parallel. \n</p>\n\n<p>Remember the SKB on <code>Thread.sleep</code>, this was the introduction to the concept of Threads. To allow each operation to happen at the same time, Scala will manage a pool of threads for you. Each operation will be allocated to thread that the computer will compute and then return the result for each operation. Finally, the result will be combined before being returned to you.</p>\n\n<p>In further SKBs, we are going to learn more about threads in more details. We are going to talk about <code>Fiber</code>, <code>Future</code>, <code>asynchronous</code> and more. Stay tuned!</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala List <code>par</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-main/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-range/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1543\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1543\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1543\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1543\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1543\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala List parallel &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala  List parallel here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1543\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1543\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1543\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1543\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1543\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "8kl0ZPy6T2ycipzz5iNkSg",
    "prevUrl": "range",
    "nextUrl": "main",
    "mainInfoBox": "<p>\nI am going to give you an introduction to <i>parallelization</i>. For this, I will be using <code>par</code>.</p>\n\n<p>However, you have to know, that to use this in <strong>Scala 2.13+</strong> you need extra steps. You can read more on <a href=\"https://stackoverflow.com/a/57290463/3357831\" target=\"_blank\">Stackoverflow</a>.  I made the choice to still be using it because, I think, it is a great stepping stone to understand more complex subjects.\n</p>\n<p>Let’s dive in!</p>\n",
    "detailedInfoBox": "<p>\nCompare the output of the two <code>map</code>. In the first one, you see the numbers in the same order they are in the source <code>Range</code>. In the second one, the order is random, try running it several times ; you will see the order of the print statements change.\n</p>\n\n<p>\nThis happen because all the operation executed in the <code>map</code> happen at the <i>same</i> time, in parallel. \n</p>\n\n<p>Remember the SKB on <code>Thread.sleep</code>, this was the introduction to the concept of Threads. To allow each operation to happen at the same time, Scala will manage a pool of threads for you. Each operation will be allocated to thread that the computer will compute and then return the result for each operation. Finally, the result will be combined before being returned to you.</p>\n\n<p>In further SKBs, we are going to learn more about threads in more details. We are going to talk about <code>Fiber</code>, <code>Future</code>, <code>asynchronous</code> and more. Stay tuned!</p>"
  },
  {
    "id": 1557,
    "date": "2020-09-14T09:00:10",
    "date_gmt": "2020-09-14T17:00:10",
    "modified": "2020-09-16T09:32:04",
    "modified_gmt": "2020-09-16T17:32:04",
    "slug": "main",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-main/",
    "title": " Scala main",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-UjVSB\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>main</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>main</code> !</p>\n\n<div class=\"skb-focus\"><p>\nA <code>main</code> is the method that is being called to start your program. It needs a specific structure &#8211; called <i>prototype</i> when talking about methods &#8211; to be recognized.\n</p>\n\n<p>Until now we ran all the SKBs in <i>Worksheet</i> mode which hides the <code>main</code> from us.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/Eb9UJewvRlOeORHTpjD5lQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/Eb9UJewvRlOeORHTpjD5lQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (Eb9UJewvRlOeORHTpjD5lQ)</a>.</p>\n\n<h2>More information about Scala <code>main</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>main</code>.</p>\n\n<div class=\"skb-focus\"><p>\nIf you have tried to remove or change the <code>main</code> function, you might have noticed an exception:\n<pre>\njava.lang.RuntimeException: No main class detected.\n</pre>\n</p>\n<p>\nThis <code>Exception</code> will be thrown if a <code>main</code> method cannot be found or is not contained within an <code>object</code>. Try to change the code to trigger it.\n</p>\n<p>\nThe main prototype is always of the form:\n<pre>\ndef main(args: Array[String]): Unit = { }\n</pre>\nThe <code>args: Array[String]</code> is where you would be able to read and use the arguments given to the application when started.\n</p>\n<p>\nThat is pretty much it concerning <code>main</code>, so I thought it would be nice to combine some of the things we&#8217;ve seen in the past. This SKB is using <code>Map</code>, <code>object</code>, <code>Option</code>, <code>lazy val</code>, <code>def</code> all into the same project. Try to play with it and make it your own.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>main</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-set/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-list-parallel/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1557\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1557\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1557\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1557\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1557\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala main &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala main here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1557\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1557\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1557\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1557\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1557\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-main/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "Eb9UJewvRlOeORHTpjD5lQ",
    "prevUrl": "list-parallel",
    "nextUrl": "set",
    "mainInfoBox": "<p>\nA <code>main</code> is the method that is being called to start your program. It needs a specific structure – called <i>prototype</i> when talking about methods – to be recognized.\n</p>\n\n<p>Until now we ran all the SKBs in <i>Worksheet</i> mode which hides the <code>main</code> from us.</p>",
    "detailedInfoBox": "<p>\nIf you have tried to remove or change the <code>main</code> function, you might have noticed an exception:\n</p><pre>java.lang.RuntimeException: No main class detected.\n</pre>\n<p></p>\n<p>\nThis <code>Exception</code> will be thrown if a <code>main</code> method cannot be found or is not contained within an <code>object</code>. Try to change the code to trigger it.\n</p>\n<p>\nThe main prototype is always of the form:\n</p><pre>def main(args: Array[String]): Unit = { }\n</pre>\nThe <code>args: Array[String]</code> is where you would be able to read and use the arguments given to the application when started.\n<p></p>\n<p>\nThat is pretty much it concerning <code>main</code>, so I thought it would be nice to combine some of the things we’ve seen in the past. This SKB is using <code>Map</code>, <code>object</code>, <code>Option</code>, <code>lazy val</code>, <code>def</code> all into the same project. Try to play with it and make it your own.\n</p>"
  },
  {
    "id": 1567,
    "date": "2020-09-16T09:00:06",
    "date_gmt": "2020-09-16T17:00:06",
    "modified": "2020-09-18T11:57:17",
    "modified_gmt": "2020-09-18T19:57:17",
    "slug": "set",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-set/",
    "title": " Scala Set",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1vewij\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Set.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Set !</p>\n\n<div class=\"skb-focus\"><p>\nWe saw other data structures in previous SKB like <code>List</code> or <code>Map</code>.\n</p>\n<p>\nLet&#8217;s look at <code>Set</code>.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/Xnga8KMIQimJPP8BwT5VAQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/Xnga8KMIQimJPP8BwT5VAQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (Xnga8KMIQimJPP8BwT5VAQ)</a>.</p>\n\n<h2>More information about Scala Set</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Set.</p>\n\n<div class=\"skb-focus\"><p>\nDid you notice that <code>Set</code> cannot contain duplicate values? A <code>Set</code> is a list of unique values. \n</p>\n<p>\nWhen you combine the two <code>Set</code>, it removes the duplicated values and only keep one of each.\n</p>\n<p>\nOne thing to know is that <code>Set</code> do not guarantee consistant ordering. You should not rely on index of the elements. If you want to learn more, you can read <a href=\"https://stackoverflow.com/a/5246204/3357831\" target=\"_blank\">this great answer on Stackoverflow</a>.\n</p>\n<p>\nLast thing about <code>Set</code> is that it has all the same function as <code>List</code> such as <code>map</code>, <code>flatMap</code>, <code>filter</code>, etc&#8230; \n</p>\n\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Set.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-main/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1567\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1567\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1567\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1567\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1567\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Set &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Set here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1567\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1567\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1567\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1567\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1567\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-set/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "Xnga8KMIQimJPP8BwT5VAQ",
    "prevUrl": "main",
    "nextUrl": "defined-type",
    "mainInfoBox": "<p>\nWe saw other data structures in previous SKB like <code>List</code> or <code>Map</code>.\n</p>\n<p>\nLet’s look at <code>Set</code>.\n</p>",
    "detailedInfoBox": "<p>\nDid you notice that <code>Set</code> cannot contain duplicate values? A <code>Set</code> is a list of unique values. \n</p>\n<p>\nWhen you combine the two <code>Set</code>, it removes the duplicated values and only keep one of each.\n</p>\n<p>\nOne thing to know is that <code>Set</code> do not guarantee consistant ordering. You should not rely on index of the elements. If you want to learn more, you can read <a href=\"https://stackoverflow.com/a/5246204/3357831\" target=\"_blank\">this great answer on Stackoverflow</a>.\n</p>\n<p>\nLast thing about <code>Set</code> is that it has all the same function as <code>List</code> such as <code>map</code>, <code>flatMap</code>, <code>filter</code>, etc… \n</p>\n\n"
  },
  {
    "id": 1588,
    "date": "2020-09-18T09:00:29",
    "date_gmt": "2020-09-18T17:00:29",
    "modified": "2020-09-21T09:47:03",
    "modified_gmt": "2020-09-21T17:47:03",
    "slug": "defined-type",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-defined-type/",
    "title": " Scala defined type",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-16iCM4\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about SKB &#8211; Scala defined type.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about SKB &#8211; Scala defined type !</p>\n\n<div class=\"skb-focus\"><p>Let&#8217;s make our own type!</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/MBpSt9KLQECIxOPK8Phaeg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/MBpSt9KLQECIxOPK8Phaeg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (MBpSt9KLQECIxOPK8Phaeg)</a>.</p>\n\n<h2>More information about SKB &#8211; Scala defined type</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about SKB &#8211; Scala defined type.</p>\n\n<div class=\"skb-focus\"><p>You saw how to parameterize the entire code.</p>\n<p>Try change <code>MyType</code> from <code>Int</code> to <code>String</code>.</p>\n<p>This seem simple but it is a building block required to understand generic type later.</p>\n<p>If you want to start now, try to replace <code>MyType</code> by the following code:\n\n<pre>\ntype SubType = Int\ntype MyType = List[SubType]\n</pre>\n\nDo you see how you can combine types together ? Like Lego !</p>\n\n<p><code>List</code> can be parameterized, we used it with <code>Int</code> and <code>String</code> in the past, but you can use any type you want.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for SKB &#8211; Scala defined type.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-set/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1588\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1588\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1588\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1588\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1588\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala defined type &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala defined type here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1588\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1588\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1588\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1588\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1588\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "MBpSt9KLQECIxOPK8Phaeg",
    "prevUrl": "set",
    "nextUrl": "pattern-matching",
    "mainInfoBox": "<p>Let’s make our own type!</p>",
    "detailedInfoBox": "<p>You saw how to parameterize the entire code.</p>\n<p>Try change <code>MyType</code> from <code>Int</code> to <code>String</code>.</p>\n<p>This seem simple but it is a building block required to understand generic type later.</p>\n<p>If you want to start now, try to replace <code>MyType</code> by the following code:\n\n</p><pre>type SubType = Int\ntype MyType = List[SubType]\n</pre>\n\nDo you see how you can combine types together ? Like Lego !<p></p>\n\n<p><code>List</code> can be parameterized, we used it with <code>Int</code> and <code>String</code> in the past, but you can use any type you want.</p>"
  },
  {
    "id": 1585,
    "date": "2020-09-21T09:00:55",
    "date_gmt": "2020-09-21T17:00:55",
    "modified": "2020-09-26T08:37:21",
    "modified_gmt": "2020-09-26T16:37:21",
    "slug": "pattern-matching",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-pattern-matching/",
    "title": " Scala pattern matching",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-22wGef\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala pattern matching.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala pattern matching !</p>\n\n<div class=\"skb-focus\"><p>We are going to learn about <i>pattern matching</i> today. At least, an introduction. Pattern matching is one of the key functionality of scala and it contributes to help you write clean and readable code.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/5VQri4WFQ6yrPuBJHNIh5A.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/5VQri4WFQ6yrPuBJHNIh5A\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (5VQri4WFQ6yrPuBJHNIh5A)</a>.</p>\n\n<h2>More information about Scala pattern matching</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala pattern matching.</p>\n\n<div class=\"skb-focus\"><p>The main keyword to use <i>pattern matching</i> is <code>match</code>. But as you saw, you can also use it inside <code>map</code>, as well as <code>flatMap</code> and <code>filter</code> and more.</p>\n\n<p>The overall syntax is: \n\n<pre>\nvalue match {\n    case holder => action\n    case _ => default case\n}\n</pre>\nAnd similar inside a <code>map</code> or other: \n\n<pre>\nlist.map {\n    case holder => action\n    case _ => default case\n}\n</pre>\n</p>\n\n<p>\nIt works kind of like a <code>switch</code> in other languages. And similar to <code>switch</code>, the <code>case</code> are evaluated in order, the first one that evaluate to true will be executed and none of the other ones will be.\n</p>\n\n<p>There are plenty of ways that <i>pattern matching</i> can be used and we only saw a few here, let&#8217;s review:\n\n<ul>\n<li>catch all: <code>case n => ???</code></li>\n<li>catch all without the value: <code>case _ => ???</code></li>\n<li>With condition: <code>case n if n % 2 == 0 => ???</code></li>\n<li>Exact match: <code>case 3 => ???</code> or <code>case \"abc\" => ???</code></li>\n<li>List extraction: \n<ul>\n<li>Empty list: <code>case Nil => ???</code></li>\n<li>Extract head: <code>case head :: tail => ???</code></li>\n<li>One element: <code>case head :: Nil => ???</code></li>\n<li>Two elements: <code>case first :: second :: Nil => ???</code></li>\n<li>One element with condition: <code>case head :: Nil if head % 2 == 0 => ???</code></li>\n<li>Extract value: <code>case 12 :: tail => ???</code></li>\n</ul>\n</li>\n<li>With types: <code>case n: String => ???</code></li>\n<li>Case classes: (there will be an SKB about it)\n<ul>\n<li>Extraction of field: <code>case Person(firstName, lastName) => ???</code></li>\n<li>Extraction of field with condition: <code>case Person(firstName, lastName) if firstName.startsWith(\"L\") => ???</code></li>\n<li>Extraction of field with exact match: <code>case Person(\"Leo\", lastName) => ???</code></li>\n</ul>\n</li>\n<li>With regex: There will be an SKB about it</li>\n<li>With Scala version of enumeration: There will be an SKB about it</li>\n</ul>\nI might have forgotten some. If so, please let me know in the comment below or on our discord server.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala pattern matching.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-defined-type/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1585\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1585\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1585\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1585\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1585\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala pattern matching &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala pattern matching here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1585\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1585\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1585\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1585\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1585\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "5VQri4WFQ6yrPuBJHNIh5A",
    "prevUrl": "defined-type",
    "nextUrl": "foldleft",
    "mainInfoBox": "<p>We are going to learn about <i>pattern matching</i> today. At least, an introduction. Pattern matching is one of the key functionality of scala and it contributes to help you write clean and readable code.</p>",
    "detailedInfoBox": "<p>The main keyword to use <i>pattern matching</i> is <code>match</code>. But as you saw, you can also use it inside <code>map</code>, as well as <code>flatMap</code> and <code>filter</code> and more.</p>\n\n<p>The overall syntax is: \n\n</p><pre>value match {\n    case holder =&gt; action\n    case _ =&gt; default case\n}\n</pre>\nAnd similar inside a <code>map</code> or other: \n\n<pre>list.map {\n    case holder =&gt; action\n    case _ =&gt; default case\n}\n</pre>\n<p></p>\n\n<p>\nIt works kind of like a <code>switch</code> in other languages. And similar to <code>switch</code>, the <code>case</code> are evaluated in order, the first one that evaluate to true will be executed and none of the other ones will be.\n</p>\n\n<p>There are plenty of ways that <i>pattern matching</i> can be used and we only saw a few here, let’s review:\n\n</p><ul>\n<li>catch all: <code>case n =&gt; ???</code></li>\n<li>catch all without the value: <code>case _ =&gt; ???</code></li>\n<li>With condition: <code>case n if n % 2 == 0 =&gt; ???</code></li>\n<li>Exact match: <code>case 3 =&gt; ???</code> or <code>case \"abc\" =&gt; ???</code></li>\n<li>List extraction: \n<ul>\n<li>Empty list: <code>case Nil =&gt; ???</code></li>\n<li>Extract head: <code>case head :: tail =&gt; ???</code></li>\n<li>One element: <code>case head :: Nil =&gt; ???</code></li>\n<li>Two elements: <code>case first :: second :: Nil =&gt; ???</code></li>\n<li>One element with condition: <code>case head :: Nil if head % 2 == 0 =&gt; ???</code></li>\n<li>Extract value: <code>case 12 :: tail =&gt; ???</code></li>\n</ul>\n</li>\n<li>With types: <code>case n: String =&gt; ???</code></li>\n<li>Case classes: (there will be an SKB about it)\n<ul>\n<li>Extraction of field: <code>case Person(firstName, lastName) =&gt; ???</code></li>\n<li>Extraction of field with condition: <code>case Person(firstName, lastName) if firstName.startsWith(\"L\") =&gt; ???</code></li>\n<li>Extraction of field with exact match: <code>case Person(\"Leo\", lastName) =&gt; ???</code></li>\n</ul>\n</li>\n<li>With regex: There will be an SKB about it</li>\n<li>With Scala version of enumeration: There will be an SKB about it</li>\n</ul>\nI might have forgotten some. If so, please let me know in the comment below or on our discord server.\n<p></p>"
  },
  {
    "id": 1581,
    "date": "2020-09-23T09:01:07",
    "date_gmt": "2020-09-23T17:01:07",
    "modified": "2020-09-25T09:10:15",
    "modified_gmt": "2020-09-25T17:10:15",
    "slug": "foldleft",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-foldleft/",
    "title": " Scala foldLeft",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-ZC6csE\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>foldLeft</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>foldLeft</code> !</p>\n\n<div class=\"skb-focus\"><p>Let me introduce <i>accumulators</i> and <i>aggregations</i>.</p>\n\n<p><code>foldLeft</code> is the generic concept that is under most of the function programming transformations. You can replace <code>map</code>, <code>flatMap</code>, <code>filter</code> and more by a <code>foldLeft</code>.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/1YO5x72fSE686gtMiAxKzQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/1YO5x72fSE686gtMiAxKzQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (1YO5x72fSE686gtMiAxKzQ)</a>.</p>\n\n<h2>More information about Scala <code>foldLeft</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>foldLeft</code>.</p>\n\n<div class=\"skb-focus\"><p>\nIn this exercise, you can see two use cases of <code>foldLeft</code>. \nBut first let&#8217;s explain the syntax: \n<pre>\nfoldLeft(initialValue) { case (accumulator, currentElement) => \n    // return the new value of the accumulator\n}\n</pre>\n\nNote that when <code>currentElement</code> is the first element of the <code>List</code>, then <code>accumulator</code> is equal to <code>initialValue</code>. Also, if the the list is empty, then the returned value will be the <code>initialValue</code>.\n</p>\n\n<p>\nThe returned value can be anything, for instance: \n<pre>\nfoldLeft(List.empty) { case (accumulator, currentElement) => \n    accumulator :+ currentElement \n}\n</pre>\nwould return a new <code>List</code> with the same content as the input list.\n</p>\n<p>\nAn other example:\n<pre>\nfoldLeft(0) { case (accumulator, currentElement) => \n    accumulator + currentElement \n}\n</pre>\nwould return the total sum of the item of the <code>List</code>. This is similar to the first example in today&#8217;s exercise. And scala provide a shortcut for it: <code>.sum</code>, this would be a special case of the exercise when the initial value is <code>0</code>.\n</p>\n\n<p>\nIn the second use case, there is a bit more going on. It uses <i>pattern matching</i> to implement different behavior based on the current element and create a new list element by element.\n</p>\n\n<p>\nAs an extra exercise, try to compute the average of the list by changing the initialized value from <code>startFold</code> to <code>(0, 0)</code> and modify the function to aggregate the values.\n</p>\n\n<p>You can also try to implement <code>map</code>, <code>flatMap</code> and, <code>filter</code> using <code>foldLeft</code>. Share your solution with our community on Discord !</p>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>foldLeft</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-pattern-matching/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1581\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1581\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1581\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1581\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1581\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala foldLeft &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala foldLeft here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1581\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1581\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1581\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1581\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1581\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "1YO5x72fSE686gtMiAxKzQ",
    "prevUrl": "pattern-matching",
    "nextUrl": "stream",
    "mainInfoBox": "<p>Let me introduce <i>accumulators</i> and <i>aggregations</i>.</p>\n\n<p><code>foldLeft</code> is the generic concept that is under most of the function programming transformations. You can replace <code>map</code>, <code>flatMap</code>, <code>filter</code> and more by a <code>foldLeft</code>.</p>",
    "detailedInfoBox": "<p>\nIn this exercise, you can see two use cases of <code>foldLeft</code>. \nBut first let’s explain the syntax: \n</p><pre>foldLeft(initialValue) { case (accumulator, currentElement) =&gt; \n    // return the new value of the accumulator\n}\n</pre>\n\nNote that when <code>currentElement</code> is the first element of the <code>List</code>, then <code>accumulator</code> is equal to <code>initialValue</code>. Also, if the the list is empty, then the returned value will be the <code>initialValue</code>.\n<p></p>\n\n<p>\nThe returned value can be anything, for instance: \n</p><pre>foldLeft(List.empty) { case (accumulator, currentElement) =&gt; \n    accumulator :+ currentElement \n}\n</pre>\nwould return a new <code>List</code> with the same content as the input list.\n<p></p>\n<p>\nAn other example:\n</p><pre>foldLeft(0) { case (accumulator, currentElement) =&gt; \n    accumulator + currentElement \n}\n</pre>\nwould return the total sum of the item of the <code>List</code>. This is similar to the first example in today’s exercise. And scala provide a shortcut for it: <code>.sum</code>, this would be a special case of the exercise when the initial value is <code>0</code>.\n<p></p>\n\n<p>\nIn the second use case, there is a bit more going on. It uses <i>pattern matching</i> to implement different behavior based on the current element and create a new list element by element.\n</p>\n\n<p>\nAs an extra exercise, try to compute the average of the list by changing the initialized value from <code>startFold</code> to <code>(0, 0)</code> and modify the function to aggregate the values.\n</p>\n\n<p>You can also try to implement <code>map</code>, <code>flatMap</code> and, <code>filter</code> using <code>foldLeft</code>. Share your solution with our community on Discord !</p>\n"
  },
  {
    "id": 1577,
    "date": "2020-09-25T09:00:35",
    "date_gmt": "2020-09-25T17:00:35",
    "modified": "2020-09-28T10:25:57",
    "modified_gmt": "2020-09-28T18:25:57",
    "slug": "stream",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-stream/",
    "title": " Scala Stream",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-2ku7PK\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Stream.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Stream !</p>\n\n<div class=\"skb-focus\"><p>\nAn other data structure today ! After seeing <code>List</code>, <code>Set</code>. Let&#8217;s talk about <code>Stream</code>, now called <code>LazyList</code> in Scala 2.13+.\n</p>\n\n<p>This is a bit of a longer exercise because there are several ways to create a <code>LazyList</code> and several ways to use it. Remember, this is <strong>your</strong> journey. If you only have the time to complete the beginning, you can move on or come back to it later.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/HXLsbXJQSVSKmS333hXm6w.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/HXLsbXJQSVSKmS333hXm6w\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (HXLsbXJQSVSKmS333hXm6w)</a>.</p>\n\n<h2>More information about Scala Stream</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Stream.</p>\n\n<div class=\"skb-focus\"><p>\nIn the first section, you saw how to create a <code>LazyList</code> recursively using the symbol <code>#::</code>. You also learned that you can <code>take</code> as many elements as you want, but since Scala values <i>immutability</i>, doing it several times in a row will always returns the same elements. Make sure to read the log statements carefully.\n</p>\n\n<p>\nIn the second section, we are using <code>LazyList.from</code> to use the build-in tools that allow you to start a sequential <code>stream</code> starting at <code>n</code> and increasing one by one. You also see that <code>map</code> can be used to modify the outcome of the <code>LazyList</code>. And finally, <code>take</code> can only reduce the size of the stream.\n</p>\n\n<p>\nIn the third and final section, we are implementing <code>factorial</code>, once recursively and then using a <code>LazyList</code>. Have you notice the use of the <code>foldLeft</code> from previous SKB !?\n</p>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Stream.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-foldleft/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1577\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1577\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1577\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1577\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1577\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Stream &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Stream here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1577\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1577\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1577\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1577\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1577\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "HXLsbXJQSVSKmS333hXm6w",
    "prevUrl": "foldleft",
    "nextUrl": "for-comprehension",
    "mainInfoBox": "<p>\nAn other data structure today ! After seeing <code>List</code>, <code>Set</code>. Let’s talk about <code>Stream</code>, now called <code>LazyList</code> in Scala 2.13+.\n</p>\n\n<p>This is a bit of a longer exercise because there are several ways to create a <code>LazyList</code> and several ways to use it. Remember, this is <strong>your</strong> journey. If you only have the time to complete the beginning, you can move on or come back to it later.</p>",
    "detailedInfoBox": "<p>\nIn the first section, you saw how to create a <code>LazyList</code> recursively using the symbol <code>#::</code>. You also learned that you can <code>take</code> as many elements as you want, but since Scala values <i>immutability</i>, doing it several times in a row will always returns the same elements. Make sure to read the log statements carefully.\n</p>\n\n<p>\nIn the second section, we are using <code>LazyList.from</code> to use the build-in tools that allow you to start a sequential <code>stream</code> starting at <code>n</code> and increasing one by one. You also see that <code>map</code> can be used to modify the outcome of the <code>LazyList</code>. And finally, <code>take</code> can only reduce the size of the stream.\n</p>\n\n<p>\nIn the third and final section, we are implementing <code>factorial</code>, once recursively and then using a <code>LazyList</code>. Have you notice the use of the <code>foldLeft</code> from previous SKB !?\n</p>\n"
  },
  {
    "id": 1630,
    "date": "2020-09-28T09:00:25",
    "date_gmt": "2020-09-28T17:00:25",
    "modified": "2020-10-02T11:08:14",
    "modified_gmt": "2020-10-02T19:08:14",
    "slug": "for-comprehension",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-for-comprehension/",
    "title": " Scala for-comprehension",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z2tORNE\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala for-comprehension.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala for-comprehension !</p>\n\n<div class=\"skb-focus\"><p>Using a lot of <code>map</code> and <code>flatMap</code> can make the code very hard to read as it goes into deep functions of functions.</p>\n\n<p>Scala has a way of handling those cases. It is called a <i>for-comprehension</i>.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/Ghu5hkwTQsyazXKdcNujTw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/Ghu5hkwTQsyazXKdcNujTw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (Ghu5hkwTQsyazXKdcNujTw)</a>.</p>\n\n<h2>More information about Scala for-comprehension</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala for-comprehension.</p>\n\n<div class=\"skb-focus\"><p>\nA <i>for-comprehension</i> allow you to chain <code>map</code> and <code>flatMap</code> together in an easy to read form.\n</p>\n\n<p>\nFor instance, those two snippets of code are equivalent:\n<pre>\nfor { n <- list } yield { n + 1 }\n</pre>\nand\n<pre>\nlist.map( n => n + 1 )\n</pre>\n</p>\n\n<p>\nYou can also filter the input using <i>for-comprehension</i>.\n<pre>\nfor {\n    n <- list\n   if n == 2\n} yield {\n  n\n}\n</pre>\nThis snippet is equivalent to:\n<pre>\ninput.withFilter(n => n == 2)\n</pre>\n</p>\n\n<p>\nIn general, everything you can do with <i>pattern matching</i>, you can do within a <i>for-comprehension</i>. \nThe left side of the <code><-</code> behave similar to a <i>pattern matching</i>.\n</p>\n\n<p>\nSometimes, it can be hard to convert in your head back and forth between <i>for-comprehension</i> and <code>map</code> and <code>flatMap</code> modes. Some IDEs, such as IntelliJ, starting with version 2020, allows you to de-sugar the code and convert the <i>for-comprehension</i> into<code>map</code> and <code>flatMap</code>.\n</p>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala for-comprehension.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-stream/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1630\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1630\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1630\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1630\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1630\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala for-comprehension &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala for-comprehension here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1630\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1630\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1630\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1630\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1630\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "Ghu5hkwTQsyazXKdcNujTw",
    "prevUrl": "stream",
    "nextUrl": "implicit-class",
    "mainInfoBox": "<p>Using a lot of <code>map</code> and <code>flatMap</code> can make the code very hard to read as it goes into deep functions of functions.</p>\n\n<p>Scala has a way of handling those cases. It is called a <i>for-comprehension</i>.</p>",
    "detailedInfoBox": "<p>\nA <i>for-comprehension</i> allow you to chain <code>map</code> and <code>flatMap</code> together in an easy to read form.\n</p>\n\n<p>\nFor instance, those two snippets of code are equivalent:\n</p><pre>for { n &lt;- list } yield { n + 1 }\n</pre>\nand\n<pre>list.map( n =&gt; n + 1 )\n</pre>\n<p></p>\n\n<p>\nYou can also filter the input using <i>for-comprehension</i>.\n</p><pre>for {\n    n &lt;- list\n   if n == 2\n} yield {\n  n\n}\n</pre>\nThis snippet is equivalent to:\n<pre>input.withFilter(n =&gt; n == 2)\n</pre>\n<p></p>\n\n<p>\nIn general, everything you can do with <i>pattern matching</i>, you can do within a <i>for-comprehension</i>. \nThe left side of the <code>&lt;-</code> behave similar to a <i>pattern matching</i>.\n</p>\n\n<p>\nSometimes, it can be hard to convert in your head back and forth between <i>for-comprehension</i> and <code>map</code> and <code>flatMap</code> modes. Some IDEs, such as IntelliJ, starting with version 2020, allows you to de-sugar the code and convert the <i>for-comprehension</i> into<code>map</code> and <code>flatMap</code>.\n</p>\n"
  },
  {
    "id": 1638,
    "date": "2020-09-30T09:02:01",
    "date_gmt": "2020-09-30T17:02:01",
    "modified": "2020-10-02T11:09:21",
    "modified_gmt": "2020-10-02T19:09:21",
    "slug": "implicit-class",
    "status": "publish",
    "link": "https://leobenkel.com/2020/09/skb-scala-implicit-class/",
    "title": " Scala implicit class",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1Rq4Sl\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala implicit class.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala implicit class !</p>\n\n<div class=\"skb-focus\"><p>\nSlowly getting into the more advanced features of Scala.</p>\n<p>\nStarting with <i>implicit class</i>.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/pDE2WSbNTtWv2MetlCCumw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/pDE2WSbNTtWv2MetlCCumw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (pDE2WSbNTtWv2MetlCCumw)</a>.</p>\n\n<h2>More information about Scala implicit class</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala implicit class.</p>\n\n<div class=\"skb-focus\"><p><i>implicit class</i> allows you to add methods to a <i>type</i>.</p>\n\n<p>\nThe syntax is like this: \n<pre>\nimplicit class NAME(value_name: TypeToOverride) {\n  def methodToAdd: OutputType = ???\n}\n</pre>\n</p>\n\n<p>\nYou might have noticed an other form:\n<pre>\nimplicit class NAME(val value_name: TypeToOverride) extends AnyVal {\n  def methodToAdd: OutputType = ???\n}\n</pre>\n</p>\n\n<p>\nThe second form will be more efficient, it will not create a new instance. The first form will create a new instance of the Type which can be inefficient if overused. Then, why not use the <code>AnyVal</code> form all the time ? There are a multitude of reasons, I could go over each and every ones of them, but this <a href=\"https://stackoverflow.com/a/14931302/3357831\" target=\"_blank\">Stackoverflow answer</a> explains it in a lot of details.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala implicit class.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-for-comprehension/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1638\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1638\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1638\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1638\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1638\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala implicit class &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala implicit class here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1638\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1638\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1638\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1638\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1638\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "pDE2WSbNTtWv2MetlCCumw",
    "prevUrl": "for-comprehension",
    "nextUrl": "regex",
    "mainInfoBox": "<p>\nSlowly getting into the more advanced features of Scala.</p>\n<p>\nStarting with <i>implicit class</i>.\n</p>",
    "detailedInfoBox": "<p><i>implicit class</i> allows you to add methods to a <i>type</i>.</p>\n\n<p>\nThe syntax is like this: \n</p><pre>implicit class NAME(value_name: TypeToOverride) {\n  def methodToAdd: OutputType = ???\n}\n</pre>\n<p></p>\n\n<p>\nYou might have noticed an other form:\n</p><pre>implicit class NAME(val value_name: TypeToOverride) extends AnyVal {\n  def methodToAdd: OutputType = ???\n}\n</pre>\n<p></p>\n\n<p>\nThe second form will be more efficient, it will not create a new instance. The first form will create a new instance of the Type which can be inefficient if overused. Then, why not use the <code>AnyVal</code> form all the time ? There are a multitude of reasons, I could go over each and every ones of them, but this <a href=\"https://stackoverflow.com/a/14931302/3357831\" target=\"_blank\">Stackoverflow answer</a> explains it in a lot of details.\n</p>"
  },
  {
    "id": 1649,
    "date": "2020-10-02T09:00:02",
    "date_gmt": "2020-10-02T17:00:02",
    "modified": "2020-10-06T09:05:23",
    "modified_gmt": "2020-10-06T17:05:23",
    "slug": "regex",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-regex/",
    "title": " Scala Regex",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z2j9Aii\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Regex.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Regex !</p>\n\n<div class=\"skb-focus\"><p>This SKB is about Regex, which stand for Regular Expression.</p>\n<p>I will not explain the details about Regex in this article but feel free to look at those resources to learn more about it: \n<ul>\n<li>To learn: <a href=\"https://github.com/ziishaned/learn-regex\" target=\"_blank\">github.com/ziishaned/learn-regex</a></li>\n<li>To learn and practice: <a href=\"https://regexone.com/\" target=\"_blank\">Regex One</a></li>\n<li>To practice: <a href=\"https://regexcrossword.com/\" target=\"_blank\">Regex Crossword</a></li>\n</ul>\n</p>\n</div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/I7Vt5quwT2OLFVHbrpyHlw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/I7Vt5quwT2OLFVHbrpyHlw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (I7Vt5quwT2OLFVHbrpyHlw)</a>.</p>\n\n<h2>More information about Scala Regex</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Regex.</p>\n\n<div class=\"skb-focus\"><p>\nThe first example is a simple case to check for a match. However the compilation of the regex into an actionable test can be costly. It is recommended to compile the regex once before using it several times. This is when the second example come into play.\n</p>\n\n<p>\nThe second example is more complex and involved. We describe a structure to hold the regex and build a case class from it. We can then build shortcut methods to make the interaction with the regex more intuitive.\n</p>\n\n<p>\nThe third example is leveraging pattern matching. You can see each group match in the regex <code>( ... )</code> is corresponding to a value in the pattern matching.\n</p>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Regex.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/09/skb-scala-implicit-class/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1649\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1649\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1649\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1649\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1649\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Regex &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Regex here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1649\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1649\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1649\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1649\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1649\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "I7Vt5quwT2OLFVHbrpyHlw",
    "prevUrl": "implicit-class",
    "nextUrl": "implicit-val",
    "mainInfoBox": "<p>This SKB is about Regex, which stand for Regular Expression.</p>\n<p>I will not explain the details about Regex in this article but feel free to look at those resources to learn more about it: \n</p><ul>\n<li>To learn: <a href=\"https://github.com/ziishaned/learn-regex\" target=\"_blank\">github.com/ziishaned/learn-regex</a></li>\n<li>To learn and practice: <a href=\"https://regexone.com/\" target=\"_blank\">Regex One</a></li>\n<li>To practice: <a href=\"https://regexcrossword.com/\" target=\"_blank\">Regex Crossword</a></li>\n</ul>\n<p></p>\n",
    "detailedInfoBox": "<p>\nThe first example is a simple case to check for a match. However the compilation of the regex into an actionable test can be costly. It is recommended to compile the regex once before using it several times. This is when the second example come into play.\n</p>\n\n<p>\nThe second example is more complex and involved. We describe a structure to hold the regex and build a case class from it. We can then build shortcut methods to make the interaction with the regex more intuitive.\n</p>\n\n<p>\nThe third example is leveraging pattern matching. You can see each group match in the regex <code>( ... )</code> is corresponding to a value in the pattern matching.\n</p>\n"
  },
  {
    "id": 1669,
    "date": "2020-10-05T09:02:55",
    "date_gmt": "2020-10-05T17:02:55",
    "modified": "2020-10-07T13:43:51",
    "modified_gmt": "2020-10-07T21:43:51",
    "slug": "implicit-val",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-implicit-val/",
    "title": " Scala implicit val",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1iEDrU\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>implicit val</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>implicit val</code> !</p>\n\n<div class=\"skb-focus\"><p><code>implicit val</code> can do a lot but, for now, we are just going to learn about the basic use case.</p>\n\n<p>This exercise has a lot of code not related to what we are learning, but I am trying to illustrate some kind of real use case rather than a one line exercise. I think it makes it more exciting. If you disagree, please come let me know on our Discord community !</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/2u0HgFdmQhmH0WP6aM1dNA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/2u0HgFdmQhmH0WP6aM1dNA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (2u0HgFdmQhmH0WP6aM1dNA)</a>.</p>\n\n<h2>More information about Scala <code>implicit val</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>implicit val</code>.</p>\n\n<div class=\"skb-focus\"><p>I made sure to reuse only parts we have seen before, and we have seen a lot ! Congratulations for going this far on this series, I hope that it is beneficial to you ! If there are specific things you would like to learn, just let me know and I&#8217;ll add to the TODOs of episodes to write.\n</p>\n\n<p>You can see the use of <code>case class</code>, methods with <code>def</code>, <code>private</code>, <code>object</code> but the new thing here is <code>implicit val</code>.</p>\n\n<p>In a method, you would declare it like any other argument. Except, all <code>implicit</code> arguments must be in their own &#8220;bucket&#8221; of arguments and this &#8220;bucket&#8221; must be the last one of them all for this method. And you have to precede the list of argument by the keyword <code>implicit</code>. Like this: \n\n<pre>\ndef methodName(arg1, arg2, arg3)(arg4, arg5)(implicit arg6, arg7, arg8): OutputType = ???\n</pre>\n\nEach <code>argN</code> would be the <code>name: Type</code> combo.\n</p>\n\n<p>Now, when you actually call the method containing the <code>implicit</code> argument, you do not have to give a specific argument if one is present in the context. You can see it declare like this:\n\n<pre>\nimplicit val name: Type = ???\n</pre>\n\nNote that in this example it was set to <code>private</code>.\n\n</p>\n\n<p>\nYou can also overwrite or just pass the argument like any other normal arguments.\n</p>\n\n<p>\nNote that you shouldn&#8217;t abuse this feature. In fact, it can become dangerous as well as make the code extremely hard to read. Imagine the extreme case where every arguments are <code>implicit</code>, it would be extremely hard to know what is happening. It makes the code hard to read in static environments like GitHub. And, in case of ambiguous possibilities, it can be tricky to understand what is going on. \n</p>\n\n<p>I would recommend to only use this feature for elements that would be part of a configuration or such. Elements that would have to be copy paste and pass to each and every functions down the line. Only use it if it makes the code more readable.</p>\n\n<p>With great power comes great responsibility.</p>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>implicit val</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-future/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-regex/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1669\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1669\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1669\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1669\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1669\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala implicit val &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala implicit val here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1669\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1669\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1669\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1669\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1669\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "2u0HgFdmQhmH0WP6aM1dNA",
    "prevUrl": "regex",
    "nextUrl": "future",
    "mainInfoBox": "<p><code>implicit val</code> can do a lot but, for now, we are just going to learn about the basic use case.</p>\n\n<p>This exercise has a lot of code not related to what we are learning, but I am trying to illustrate some kind of real use case rather than a one line exercise. I think it makes it more exciting. If you disagree, please come let me know on our Discord community !</p>",
    "detailedInfoBox": "<p>I made sure to reuse only parts we have seen before, and we have seen a lot ! Congratulations for going this far on this series, I hope that it is beneficial to you ! If there are specific things you would like to learn, just let me know and I’ll add to the TODOs of episodes to write.\n</p>\n\n<p>You can see the use of <code>case class</code>, methods with <code>def</code>, <code>private</code>, <code>object</code> but the new thing here is <code>implicit val</code>.</p>\n\n<p>In a method, you would declare it like any other argument. Except, all <code>implicit</code> arguments must be in their own “bucket” of arguments and this “bucket” must be the last one of them all for this method. And you have to precede the list of argument by the keyword <code>implicit</code>. Like this: \n\n</p><pre>def methodName(arg1, arg2, arg3)(arg4, arg5)(implicit arg6, arg7, arg8): OutputType = ???\n</pre>\n\nEach <code>argN</code> would be the <code>name: Type</code> combo.\n<p></p>\n\n<p>Now, when you actually call the method containing the <code>implicit</code> argument, you do not have to give a specific argument if one is present in the context. You can see it declare like this:\n\n</p><pre>implicit val name: Type = ???\n</pre>\n\nNote that in this example it was set to <code>private</code>.\n\n<p></p>\n\n<p>\nYou can also overwrite or just pass the argument like any other normal arguments.\n</p>\n\n<p>\nNote that you shouldn’t abuse this feature. In fact, it can become dangerous as well as make the code extremely hard to read. Imagine the extreme case where every arguments are <code>implicit</code>, it would be extremely hard to know what is happening. It makes the code hard to read in static environments like GitHub. And, in case of ambiguous possibilities, it can be tricky to understand what is going on. \n</p>\n\n<p>I would recommend to only use this feature for elements that would be part of a configuration or such. Elements that would have to be copy paste and pass to each and every functions down the line. Only use it if it makes the code more readable.</p>\n\n<p>With great power comes great responsibility.</p>\n"
  },
  {
    "id": 1662,
    "date": "2020-10-07T09:00:24",
    "date_gmt": "2020-10-07T17:00:24",
    "modified": "2020-10-09T09:52:29",
    "modified_gmt": "2020-10-09T17:52:29",
    "slug": "future",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-future/",
    "title": " Scala Future",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1qHXq1\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>Future</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>Future</code> !</p>\n\n<div class=\"skb-focus\"><p>Finally diving into <i>asynchronous</i> standard library !</p>\n<p>Talking about <code>Future</code>, the good and the bad.</p>\n</div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/JkqgIleTS6Sb5Ies2jAKvw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/JkqgIleTS6Sb5Ies2jAKvw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (JkqgIleTS6Sb5Ies2jAKvw)</a>.</p>\n\n<h2>More information about Scala <code>Future</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>Future</code>.</p>\n\n<div class=\"skb-focus\"><p>Lots going on here but hopefully the comments helped breaking it down into bits size knowledge.</p>\n\n<p>First of all, to use <code>Future</code>, you have to define an <code>ExecutionContext</code>. There are plenty of ways to do it but to stay simple, we are going to be using the default <code>global</code> one.</p>\n\n<p>Then, let&#8217;s start with the first part. In this part, we are discovering <code>Future</code>. Simply create then using <code>Future { ... }</code> and you can have any code in there. The return type will be <code>Future[A]</code>, where <code>A</code> is the return type of what is inside the <code>{ }</code>.</p>\n\n<p>You can chain futures together using <i>for-comprehension</i>, like we saw in previous episode. As well as the traditional <code>map</code>, <code>flatMap</code>, etc&#8230;</p>\n\n<p>We are already encountering one danger to know about <code>Future</code>: they start as soon as they are created. Also, the next operation is executed when the first one return, this is why the futures <code>f3</code> to <code>f5</code> are waiting on each other to start. To start them at the same time, you would have to create them outside of the <i>for-comprehension</i> like <code>f1</code> and <code>f2</code>.</p>\n\n<p>The second part is to illustrate the biggest danger about <code>Future</code>. They are <strong>NOT</strong> cancellable !</p>\n\n<p>As you can see, even when the <code>Await</code> time is smaller and would throw an exception, the <code>Future</code> keep running in the background. Which can be dangerous if you are doing some insert in a database for instance and believe that it was cancel, it will not be.</p>\n\n<p>Other framework more advanced like <a href=\"https://github.com/zio/zio\" target=\"_blank\">ZIO</a> offer better asynchronous features using Fibers instead of Threads. But this will have to wait for us to be master in functional programming and more advanced concepts before exploring this library.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>Future</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-implicit-val/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1662\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1662\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1662\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1662\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1662\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Future &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Future here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1662\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1662\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1662\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1662\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1662\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-future/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "JkqgIleTS6Sb5Ies2jAKvw",
    "prevUrl": "implicit-val",
    "nextUrl": "trait",
    "mainInfoBox": "<p>Finally diving into <i>asynchronous</i> standard library !</p>\n<p>Talking about <code>Future</code>, the good and the bad.</p>\n",
    "detailedInfoBox": "<p>Lots going on here but hopefully the comments helped breaking it down into bits size knowledge.</p>\n\n<p>First of all, to use <code>Future</code>, you have to define an <code>ExecutionContext</code>. There are plenty of ways to do it but to stay simple, we are going to be using the default <code>global</code> one.</p>\n\n<p>Then, let’s start with the first part. In this part, we are discovering <code>Future</code>. Simply create then using <code>Future { ... }</code> and you can have any code in there. The return type will be <code>Future[A]</code>, where <code>A</code> is the return type of what is inside the <code>{ }</code>.</p>\n\n<p>You can chain futures together using <i>for-comprehension</i>, like we saw in previous episode. As well as the traditional <code>map</code>, <code>flatMap</code>, etc…</p>\n\n<p>We are already encountering one danger to know about <code>Future</code>: they start as soon as they are created. Also, the next operation is executed when the first one return, this is why the futures <code>f3</code> to <code>f5</code> are waiting on each other to start. To start them at the same time, you would have to create them outside of the <i>for-comprehension</i> like <code>f1</code> and <code>f2</code>.</p>\n\n<p>The second part is to illustrate the biggest danger about <code>Future</code>. They are <strong>NOT</strong> cancellable !</p>\n\n<p>As you can see, even when the <code>Await</code> time is smaller and would throw an exception, the <code>Future</code> keep running in the background. Which can be dangerous if you are doing some insert in a database for instance and believe that it was cancel, it will not be.</p>\n\n<p>Other framework more advanced like <a href=\"https://github.com/zio/zio\" target=\"_blank\">ZIO</a> offer better asynchronous features using Fibers instead of Threads. But this will have to wait for us to be master in functional programming and more advanced concepts before exploring this library.</p>"
  },
  {
    "id": 1680,
    "date": "2020-10-09T09:00:40",
    "date_gmt": "2020-10-09T17:00:40",
    "modified": "2020-10-12T13:24:46",
    "modified_gmt": "2020-10-12T21:24:46",
    "slug": "trait",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-trait/",
    "title": " Scala trait",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-6sOl9\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>trait</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>trait</code> !</p>\n\n<div class=\"skb-focus\"><p><code>trait</code> are like <code>interface</code> from other languages.</p>\n\n<p>Have fun with it !</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/PcemiDBSR1ejWZaPaVxjqQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/PcemiDBSR1ejWZaPaVxjqQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (PcemiDBSR1ejWZaPaVxjqQ)</a>.</p>\n\n<h2>More information about Scala <code>trait</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>trait</code>.</p>\n\n<div class=\"skb-focus\"><p>\n<code>trait</code> allows you to describe what a class should look like.\n</p>\n\n<p>\nYou can implement functions that can be overridden. You can describe functions that have to be overridden. \n</p>\n\n<p>\nNew terms: \n\n<ul>\n\n<li><strong>to inherit</strong>: the action of extending a class</li>\n\n<li><strong>Child</strong>: the class that inherit from a trait</li>\n\n<li><strong>Parent</strong>: the class that is inherited from</li>\n\n</ul>\n</p>\n\n<p>\nSeveral new keywords today:\n<ul>\n\n<li>\n<code>extends</code>: is the keyword to be able to inherit from a class\n</li>\n\n<li>\n<code>override</code>: tell that this element has been overridden.\n</li>\n\n<li>\n<code>final</code>: tell that this cannot be overridden\n</li>\n\n<li>\n<code>protected</code>: similar to <code>private</code> but allow the child class to see this element. <code>private</code> would not allow the child to see it.\n</li>\n\n</ul>\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>trait</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-either/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-future/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1680\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1680\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1680\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1680\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1680\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala trait &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala trait here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1680\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1680\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1680\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1680\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1680\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "PcemiDBSR1ejWZaPaVxjqQ",
    "prevUrl": "future",
    "nextUrl": "either",
    "mainInfoBox": "<p><code>trait</code> are like <code>interface</code> from other languages.</p>\n\n<p>Have fun with it !</p>",
    "detailedInfoBox": "<p>\n<code>trait</code> allows you to describe what a class should look like.\n</p>\n\n<p>\nYou can implement functions that can be overridden. You can describe functions that have to be overridden. \n</p>\n\n<p>\nNew terms: \n\n</p><ul>\n\n<li><strong>to inherit</strong>: the action of extending a class</li>\n\n<li><strong>Child</strong>: the class that inherit from a trait</li>\n\n<li><strong>Parent</strong>: the class that is inherited from</li>\n\n</ul>\n<p></p>\n\n<p>\nSeveral new keywords today:\n</p><ul>\n\n<li>\n<code>extends</code>: is the keyword to be able to inherit from a class\n</li>\n\n<li>\n<code>override</code>: tell that this element has been overridden.\n</li>\n\n<li>\n<code>final</code>: tell that this cannot be overridden\n</li>\n\n<li>\n<code>protected</code>: similar to <code>private</code> but allow the child class to see this element. <code>private</code> would not allow the child to see it.\n</li>\n\n</ul>\n<p></p>"
  },
  {
    "id": 1684,
    "date": "2020-10-12T09:00:24",
    "date_gmt": "2020-10-12T17:00:24",
    "modified": "2020-10-14T09:26:39",
    "modified_gmt": "2020-10-14T17:26:39",
    "slug": "either",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-either/",
    "title": " Scala Either",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1rx4WE\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>Either</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>Either</code> !</p>\n\n<div class=\"skb-focus\"><p><code>Either</code>, you will see, is kind of a in-between <code>Try</code> and <code>Option</code>.</p>\n\n<p>Try to experiment to see the similarity and differences.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/bzjEzMzhQmSOiJm2bejFkw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/bzjEzMzhQmSOiJm2bejFkw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (bzjEzMzhQmSOiJm2bejFkw)</a>.</p>\n\n<h2>More information about Scala <code>Either</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>Either</code>.</p>\n\n<div class=\"skb-focus\"><p>\nSimilar to <code>Option</code>, you can create <code>Either</code> in two ways:\n<ul>\n<li><code>Right</code> which would be similar to <code>Some</code></li>\n<li><code>Left</code> which, over time, became similar to <code>None</code>, except you can store information. I am saying &#8220;over time&#8221; because up until Scala v2.12+, <code>Either</code> was not <i>Right-bias</i>. <code>Left</code> and <code>Right</code> were just two Types. But now, <code>Left</code> is accepting to carry error messages and <code>Right</code> to be the channel for successes.</li>\n</ul>\n</p>\n\n<p>\nYou can test which Type is <code>Either</code> using <code>isLeft</code> and <code>isRight</code>. You can also use <code>map</code>, <code>flatMap</code>, etc&#8230; once again. You must be starting to know those functions pretty well by now. This is where the <i>Right-bias</i> come into play. <code>map</code> will take a function that modify the type contained in <code>Right</code> and will not do anything if the <code>Either</code> contains a <code>Left</code>.\n</p>\n\n<p>\nIf you would like to specifically act on <code>Left</code> or <code>Right</code>, you can use the <code>.left</code> and <code>.right</code> methods to project the <code>Either</code> on one side of the other. For instance, to modify the content of the <code>Left</code> when it is there, you can do <code>.left.map(...)</code>.\n</p>\n\n<p>\nOne major difference with <code>Try</code> is that <code>Either</code> will not catch the Exception. If an exception is thrown inside an <code>Either</code> it will propagate. Inside a <code>Try</code> it will be captured inside the <code>Failure</code> channel.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>Either</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-trait/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1684\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1684\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1684\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1684\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1684\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Either &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Either here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1684\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1684\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1684\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1684\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1684\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-either/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "bzjEzMzhQmSOiJm2bejFkw",
    "prevUrl": "trait",
    "nextUrl": "string-format",
    "mainInfoBox": "<p><code>Either</code>, you will see, is kind of a in-between <code>Try</code> and <code>Option</code>.</p>\n\n<p>Try to experiment to see the similarity and differences.</p>",
    "detailedInfoBox": "<p>\nSimilar to <code>Option</code>, you can create <code>Either</code> in two ways:\n</p><ul>\n<li><code>Right</code> which would be similar to <code>Some</code></li>\n<li><code>Left</code> which, over time, became similar to <code>None</code>, except you can store information. I am saying “over time” because up until Scala v2.12+, <code>Either</code> was not <i>Right-bias</i>. <code>Left</code> and <code>Right</code> were just two Types. But now, <code>Left</code> is accepting to carry error messages and <code>Right</code> to be the channel for successes.</li>\n</ul>\n<p></p>\n\n<p>\nYou can test which Type is <code>Either</code> using <code>isLeft</code> and <code>isRight</code>. You can also use <code>map</code>, <code>flatMap</code>, etc… once again. You must be starting to know those functions pretty well by now. This is where the <i>Right-bias</i> come into play. <code>map</code> will take a function that modify the type contained in <code>Right</code> and will not do anything if the <code>Either</code> contains a <code>Left</code>.\n</p>\n\n<p>\nIf you would like to specifically act on <code>Left</code> or <code>Right</code>, you can use the <code>.left</code> and <code>.right</code> methods to project the <code>Either</code> on one side of the other. For instance, to modify the content of the <code>Left</code> when it is there, you can do <code>.left.map(...)</code>.\n</p>\n\n<p>\nOne major difference with <code>Try</code> is that <code>Either</code> will not catch the Exception. If an exception is thrown inside an <code>Either</code> it will propagate. Inside a <code>Try</code> it will be captured inside the <code>Failure</code> channel.\n</p>"
  },
  {
    "id": 1693,
    "date": "2020-10-14T09:01:13",
    "date_gmt": "2020-10-14T17:01:13",
    "modified": "2020-10-16T09:21:15",
    "modified_gmt": "2020-10-16T17:21:15",
    "slug": "string-format",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-string-format/",
    "title": " Scala String Format",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z2qDk92\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala String Format.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala String Format !</p>\n\n<div class=\"skb-focus\"><p>Little break from the heavy stuff !</p>\n<p>Let&#8217;s see an example on how some <code>Java</code> features have been integrated in Scala. Specially about String formatting at the moment.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/G0GDlJ2GQ2O9w05HPQycGA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/G0GDlJ2GQ2O9w05HPQycGA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (G0GDlJ2GQ2O9w05HPQycGA)</a>.</p>\n\n<h2>More information about Scala String Format</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala String Format.</p>\n\n<div class=\"skb-focus\"><p>\nThis SKB is about formatting numbers.\n</p>\n<p>\nIn the first example, we are seeing how to add leading zeros in front of a number. That can be useful when building some UI or dashboard so the alignment is fix no matter how big the number is. Pretty useful and easy to use !\n</p>\n\n<p>\nThen formatting <code>Double</code>, how to truncate the decimals as well as adding leading zeros. Play with it to get a good intuition about it.\n</p>\n\n<p>\nAnd finally, getting closer to <code>Java</code> with <code>Locale</code> which allow you to display a number the right way based on the location. <code>Locale</code> can also be used to format dates and currencies ! Feel free to search for more information online and try to implement the code in here.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala String Format.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-either/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1693\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1693\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1693\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1693\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1693\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala String Format &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala String Format here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1693\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1693\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1693\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1693\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1693\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "G0GDlJ2GQ2O9w05HPQycGA",
    "prevUrl": "either",
    "nextUrl": "abstract-class",
    "mainInfoBox": "<p>Little break from the heavy stuff !</p>\n<p>Let’s see an example on how some <code>Java</code> features have been integrated in Scala. Specially about String formatting at the moment.</p>",
    "detailedInfoBox": "<p>\nThis SKB is about formatting numbers.\n</p>\n<p>\nIn the first example, we are seeing how to add leading zeros in front of a number. That can be useful when building some UI or dashboard so the alignment is fix no matter how big the number is. Pretty useful and easy to use !\n</p>\n\n<p>\nThen formatting <code>Double</code>, how to truncate the decimals as well as adding leading zeros. Play with it to get a good intuition about it.\n</p>\n\n<p>\nAnd finally, getting closer to <code>Java</code> with <code>Locale</code> which allow you to display a number the right way based on the location. <code>Locale</code> can also be used to format dates and currencies ! Feel free to search for more information online and try to implement the code in here.\n</p>"
  },
  {
    "id": 1696,
    "date": "2020-10-16T09:00:18",
    "date_gmt": "2020-10-16T17:00:18",
    "modified": "2020-10-20T16:19:39",
    "modified_gmt": "2020-10-21T00:19:39",
    "slug": "abstract-class",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-abstract-class/",
    "title": " Scala abstract class",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-2rl9eu\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>abstract class</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>abstract class</code> !</p>\n\n<div class=\"skb-focus\"><p>This SKB is going to continue our progress in the Object Oriented Programming aspect of Scala.</p>\n<p><code>abstract class</code> are pretty similar to <code>trait</code> we saw before. But there are some slight differences.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/fwuSQ1sSRhC5rURpo5vdvw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/fwuSQ1sSRhC5rURpo5vdvw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (fwuSQ1sSRhC5rURpo5vdvw)</a>.</p>\n\n<h2>More information about Scala <code>abstract class</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>abstract class</code>.</p>\n\n<div class=\"skb-focus\"><p>\nYou recognize the same keywords we learned about when we learned about <code>trait</code>. You can see <code>extends</code>, <code>protected</code> and <code>override</code>.\n</p>\n\n<p>\nThere are more differences but for the moment let&#8217;s go one step at a time.\n</p>\n<p>\nThe main difference you can notice compare to <code>trait</code> is that you are able to have a constructor directly when you <code>extends</code> the <code>abstract class</code>. This is pretty convenient to build simple pattern. We are going to see more about this in the context of <code>enumeration</code>.\n</p>\n<p>\nTo practice the concepts of Object Oriented Programming, Try to access the fields of <code>Shape</code> in the child classes. You notice that only <code>lengthOfSides</code> is <code>protected</code> and not the other ones. Remember <code>class</code> ? By default fields are <code>private</code> in a <code>class</code>. Try to add methods, maybe the area ?\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>abstract class</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-string-format/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1696\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1696\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1696\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1696\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1696\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala abstract class &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala abstract class here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1696\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1696\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1696\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1696\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1696\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "fwuSQ1sSRhC5rURpo5vdvw",
    "prevUrl": "string-format",
    "nextUrl": "recursion",
    "mainInfoBox": "<p>This SKB is going to continue our progress in the Object Oriented Programming aspect of Scala.</p>\n<p><code>abstract class</code> are pretty similar to <code>trait</code> we saw before. But there are some slight differences.</p>",
    "detailedInfoBox": "<p>\nYou recognize the same keywords we learned about when we learned about <code>trait</code>. You can see <code>extends</code>, <code>protected</code> and <code>override</code>.\n</p>\n\n<p>\nThere are more differences but for the moment let’s go one step at a time.\n</p>\n<p>\nThe main difference you can notice compare to <code>trait</code> is that you are able to have a constructor directly when you <code>extends</code> the <code>abstract class</code>. This is pretty convenient to build simple pattern. We are going to see more about this in the context of <code>enumeration</code>.\n</p>\n<p>\nTo practice the concepts of Object Oriented Programming, Try to access the fields of <code>Shape</code> in the child classes. You notice that only <code>lengthOfSides</code> is <code>protected</code> and not the other ones. Remember <code>class</code> ? By default fields are <code>private</code> in a <code>class</code>. Try to add methods, maybe the area ?\n</p>"
  },
  {
    "id": 1717,
    "date": "2020-10-19T09:00:47",
    "date_gmt": "2020-10-19T17:00:47",
    "modified": "2020-10-23T08:40:19",
    "modified_gmt": "2020-10-23T16:40:19",
    "slug": "recursion",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-recursion/",
    "title": " Scala Recursion",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1EPT31\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Recursion.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Recursion !</p>\n\n<div class=\"skb-focus\"><p>\n<i>Recursion</i> is a major tool in the toolbox of the software engineer.\n</p>\n<p>\nIt can allow to describe a problem from a different perspective.\n</p>\n<p>\nIn the context of <i>Functional Programming</i> this is also a major trick to avoid using <i>mutable</i> variables.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/Cnic9MRTRE2BgIR3NAC5Zg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/Cnic9MRTRE2BgIR3NAC5Zg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (Cnic9MRTRE2BgIR3NAC5Zg)</a>.</p>\n\n<h2>More information about Scala Recursion</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Recursion.</p>\n\n<div class=\"skb-focus\"><p>\nThis is a very basic example to be able to understand the concept of recursion fully. In the future, we will see more complex application of <i>recursion</i>.\n</p>\n\n<p>\nTo build a successful recursion, you need several things:\n\n<ul>\n\n<li>\nStopping condition: this is the most important thing. Without it the recursion will keep going for ever and eventually fail with an exception: <code>StackOverflowError</code>.\n</li>\n\n<li>\nThe method needs to call itself. In this example, you can see the <code>loop</code> function is called inside of itself.\n</li>\n\n<li>\nIncrement: something needs to change when calling the function again, otherwise, same as without a stopping condition, the code will never stop running since the stopping condition will never get reached. In this example you can see that when <code>loop</code> is called, it is called with modified arguments.\n</li>\n\n<li>\nMost of the time you will have some kind of accumulator that hold the final result of the computation. In our example, this would be the argument named <code>acc</code>.\n</li>\n\n<li>\nInitial condition: we also need a starting value for the accumulator and the other arguments that might be required to perform the computation. In this example, we need to set <code>acc</code> equals to <code>0</code>.\n</li>\n\n</ul>\n\n</p>\n\n<p>\nThe most famous example of recursion in books are always <code>factorial</code> or <code>Fibonacci</code>. I would love to see your implementation, feel free to submit a Scastie link in the comment section or on Discord. \n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Recursion.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-abstract-class/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1717\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1717\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1717\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1717\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1717\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Recursion &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Recursion here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1717\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1717\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1717\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1717\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1717\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "Cnic9MRTRE2BgIR3NAC5Zg",
    "prevUrl": "abstract-class",
    "nextUrl": "repeated-parameters",
    "mainInfoBox": "<p>\n<i>Recursion</i> is a major tool in the toolbox of the software engineer.\n</p>\n<p>\nIt can allow to describe a problem from a different perspective.\n</p>\n<p>\nIn the context of <i>Functional Programming</i> this is also a major trick to avoid using <i>mutable</i> variables.\n</p>",
    "detailedInfoBox": "<p>\nThis is a very basic example to be able to understand the concept of recursion fully. In the future, we will see more complex application of <i>recursion</i>.\n</p>\n\n<p>\nTo build a successful recursion, you need several things:\n\n</p><ul>\n\n<li>\nStopping condition: this is the most important thing. Without it the recursion will keep going for ever and eventually fail with an exception: <code>StackOverflowError</code>.\n</li>\n\n<li>\nThe method needs to call itself. In this example, you can see the <code>loop</code> function is called inside of itself.\n</li>\n\n<li>\nIncrement: something needs to change when calling the function again, otherwise, same as without a stopping condition, the code will never stop running since the stopping condition will never get reached. In this example you can see that when <code>loop</code> is called, it is called with modified arguments.\n</li>\n\n<li>\nMost of the time you will have some kind of accumulator that hold the final result of the computation. In our example, this would be the argument named <code>acc</code>.\n</li>\n\n<li>\nInitial condition: we also need a starting value for the accumulator and the other arguments that might be required to perform the computation. In this example, we need to set <code>acc</code> equals to <code>0</code>.\n</li>\n\n</ul>\n\n<p></p>\n\n<p>\nThe most famous example of recursion in books are always <code>factorial</code> or <code>Fibonacci</code>. I would love to see your implementation, feel free to submit a Scastie link in the comment section or on Discord. \n</p>"
  },
  {
    "id": 1720,
    "date": "2020-10-21T09:02:40",
    "date_gmt": "2020-10-21T17:02:40",
    "modified": "2020-10-23T20:13:57",
    "modified_gmt": "2020-10-24T04:13:57",
    "slug": "repeated-parameters",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-repeated-parameters/",
    "title": " Scala Repeated Parameters",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1spQra\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Repeated Parameters.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Repeated Parameters !</p>\n\n<div class=\"skb-focus\"><p>\nLittle break in <i>Object Oriented Programming</i> and <i>Functional Programming</i> features.\n</p>\n<p>\nToday is about a little &#8220;nice to know&#8221;.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/t4txyXUBQ16HDTrla2PhZw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/t4txyXUBQ16HDTrla2PhZw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (t4txyXUBQ16HDTrla2PhZw)</a>.</p>\n\n<h2>More information about Scala Repeated Parameters</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Repeated Parameters.</p>\n\n<div class=\"skb-focus\"><p>\nYou probably understood that this allow you to take an array as input without having to actually create an array when calling the function.</p>\n\n<p> \nIt can be very useful with nested case class with list of list. It makes the code more readable.\n\n<pre>\n\ncase class Foo(f: Foo*)\n\nFoo(\n  Foo(\n    Foo(),\n    Foo()\n  ),\n  Foo()\n)\n</pre>\n\nImagine this code with having to create <code>List(Foo())</code> each time, it would make the code really hard to digest.\n</p>\n\n<p>\nBut, like everything in life, there is a drawback&#8230; If you already have an array, you need to use the weird <code>:_*</code>. It is a minor issue, with experience, you are going to know those few characters by heart. It basically turns a list of item into a series of arguments.\n</p>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Repeated Parameters.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-recursion/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1720\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1720\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1720\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1720\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1720\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Repeated Parameters &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Repeated Parameters here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1720\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1720\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1720\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1720\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1720\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "t4txyXUBQ16HDTrla2PhZw",
    "prevUrl": "recursion",
    "nextUrl": "generic-trait",
    "mainInfoBox": "<p>\nLittle break in <i>Object Oriented Programming</i> and <i>Functional Programming</i> features.\n</p>\n<p>\nToday is about a little “nice to know”.\n</p>",
    "detailedInfoBox": "<p>\nYou probably understood that this allow you to take an array as input without having to actually create an array when calling the function.</p>\n\n<p> \nIt can be very useful with nested case class with list of list. It makes the code more readable.\n\n</p><pre>\ncase class Foo(f: Foo*)\n\nFoo(\n  Foo(\n    Foo(),\n    Foo()\n  ),\n  Foo()\n)\n</pre>\n\nImagine this code with having to create <code>List(Foo())</code> each time, it would make the code really hard to digest.\n<p></p>\n\n<p>\nBut, like everything in life, there is a drawback… If you already have an array, you need to use the weird <code>:_*</code>. It is a minor issue, with experience, you are going to know those few characters by heart. It basically turns a list of item into a series of arguments.\n</p>\n"
  },
  {
    "id": 1724,
    "date": "2020-10-23T09:01:26",
    "date_gmt": "2020-10-23T17:01:26",
    "modified": "2020-10-26T16:39:47",
    "modified_gmt": "2020-10-27T00:39:47",
    "slug": "generic-trait",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-generic-trait/",
    "title": " Scala Generic Trait",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1tSMFK\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Generic Trait.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Generic Trait !</p>\n\n<div class=\"skb-focus\"><p>\nToday is a milestone in the <i>Object Oriented Programming</i> journey. In combination with <i>inheritance</i>, that we saw in the past, <i>generics</i> are a key feature of <i>Object Oriented Programming</i>.\n</p>\n\n<p>\nOnce you start using it, you will never be able to live without it !\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/1KailbBGTNCH2CDwVFK4fA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/1KailbBGTNCH2CDwVFK4fA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (1KailbBGTNCH2CDwVFK4fA)</a>.</p>\n\n<h2>More information about Scala Generic Trait</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Generic Trait.</p>\n\n<div class=\"skb-focus\"><p>\nI heard the Internet likes potatoes ! \n</p>\n\n<p>\nIn this example, we want to sum our <code>PotatoBag</code>. But, for some reason, we want to describe the action to <code>Combine</code> anything. We can describe combine easily, it is the action of taking two elements of the same type and producing a new element of the same type. You can see there that we declared a function with the typed signature: <code>A.combineWith(A) => A</code>.\n</p>\n\n<p>\nWith this in place, we can now combine anything. Try to go back to the exercise and create a different case class that inherit from the <code>Combine[A]</code> trait.\n</p>\n\n<p>\nWhat is called <code>generic</code> in this context is the <code>[A]</code>. It means that this will have some kind of type parameter that will be needed at <i>compiled time</i> to create the class. For instance, if you were to create a <code>Combine[Int]</code>, you can imagine the compiler writing code for you and creating a whole new class :\n\n<pre>\ntrait CombineInt {\n  def combineWith(a: Int): Int\n}\n</pre>\n\nIt is an other way to not have to write almost similar code several times.\n</p>\n\n<p>Keep in mind that this example has been trim down and simplified for this exercise, in production code we would do things slightly differently but I don&#8217;t want to bring too much at once and confuse you. I am trying to make bite size knowledge pieces.</p>\n\n<p>The combine pattern is use often and not far away from it you will almost always find the <code>reduce</code> function. In this case we use <code>reduceOption</code> for safety. <code>reduceOption</code> will return <code>None</code> when the list is empty, <code>reduce</code> will throw an exception.</p>\n\n<p>You can go back to the code and replace <code>reduceOption</code> by <code>reduce</code> and remove all items from the <code>TruckOfPotatoes</code> to see it for yourself.\n</p>\n\n<p>\nOther thing to try, <code>.reduceOption((a, b) => a.combineWith(b))</code> can be replaced by <code>.reduceOption(_ combineWith _)</code>. But, this involve <i>infix</i> notation as well as the placeholder <code>_</code>, so we are going to learn more about it later. But at least, you have been exposed to it.\n</p>\n\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Generic Trait.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-repeated-parameters/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1724\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1724\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1724\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1724\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1724\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Generic Trait &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Generic Trait here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1724\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1724\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1724\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1724\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1724\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "1KailbBGTNCH2CDwVFK4fA",
    "prevUrl": "repeated-parameters",
    "nextUrl": "sealed",
    "mainInfoBox": "<p>\nToday is a milestone in the <i>Object Oriented Programming</i> journey. In combination with <i>inheritance</i>, that we saw in the past, <i>generics</i> are a key feature of <i>Object Oriented Programming</i>.\n</p>\n\n<p>\nOnce you start using it, you will never be able to live without it !\n</p>",
    "detailedInfoBox": "<p>\nI heard the Internet likes potatoes ! \n</p>\n\n<p>\nIn this example, we want to sum our <code>PotatoBag</code>. But, for some reason, we want to describe the action to <code>Combine</code> anything. We can describe combine easily, it is the action of taking two elements of the same type and producing a new element of the same type. You can see there that we declared a function with the typed signature: <code>A.combineWith(A) =&gt; A</code>.\n</p>\n\n<p>\nWith this in place, we can now combine anything. Try to go back to the exercise and create a different case class that inherit from the <code>Combine[A]</code> trait.\n</p>\n\n<p>\nWhat is called <code>generic</code> in this context is the <code>[A]</code>. It means that this will have some kind of type parameter that will be needed at <i>compiled time</i> to create the class. For instance, if you were to create a <code>Combine[Int]</code>, you can imagine the compiler writing code for you and creating a whole new class :\n\n</p><pre>trait CombineInt {\n  def combineWith(a: Int): Int\n}\n</pre>\n\nIt is an other way to not have to write almost similar code several times.\n<p></p>\n\n<p>Keep in mind that this example has been trim down and simplified for this exercise, in production code we would do things slightly differently but I don’t want to bring too much at once and confuse you. I am trying to make bite size knowledge pieces.</p>\n\n<p>The combine pattern is use often and not far away from it you will almost always find the <code>reduce</code> function. In this case we use <code>reduceOption</code> for safety. <code>reduceOption</code> will return <code>None</code> when the list is empty, <code>reduce</code> will throw an exception.</p>\n\n<p>You can go back to the code and replace <code>reduceOption</code> by <code>reduce</code> and remove all items from the <code>TruckOfPotatoes</code> to see it for yourself.\n</p>\n\n<p>\nOther thing to try, <code>.reduceOption((a, b) =&gt; a.combineWith(b))</code> can be replaced by <code>.reduceOption(_ combineWith _)</code>. But, this involve <i>infix</i> notation as well as the placeholder <code>_</code>, so we are going to learn more about it later. But at least, you have been exposed to it.\n</p>\n\n"
  },
  {
    "id": 1727,
    "date": "2020-10-26T09:02:35",
    "date_gmt": "2020-10-26T17:02:35",
    "modified": "2020-11-01T04:10:42",
    "modified_gmt": "2020-11-01T12:10:42",
    "slug": "sealed",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-sealed/",
    "title": " Scala Sealed",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-kdHUt\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>sealed</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>sealed</code> !</p>\n\n<div class=\"skb-focus\"><p>A simple new keyword today</p>\n\n<p>It is not possible to illustrate its main function using Scastie, so if you would like to learn more you will have to read the description snippet below. I am sorry about that.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/FLCt7eVzRmedD4gb40BpVQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/FLCt7eVzRmedD4gb40BpVQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (FLCt7eVzRmedD4gb40BpVQ)</a>.</p>\n\n<h2>More information about Scala <code>sealed</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>sealed</code>.</p>\n\n<div class=\"skb-focus\"><p>We are reusing a lot of feature we saw in the past for this SKB. Everything should look familiar except the new keyword <code>sealed</code></p>\n\n<p>\n<code>sealed</code> is related to Object Oriented Programming and more specifically about inheritance.\n</p>\n\n<p>\nThe keyword <code>sealed</code> allows you to block inheritance if it is not within the same file. If you define a <code>sealed</code> <code>trait</code> or <code>abstract class</code> ( it works for both the exact same way ), you will only be able to <code>extends</code> this <code>trait</code> within this file. \n</p>\n\n<p>This is the reason why it is hard to illustrate it within Scastie since everything is just one worksheet.</p>\n\n<p>It is very useful when you want to describe something which have finite options. We are going to learn more about a very specific use case in the next SKB.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>sealed</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-generic-trait/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1727\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1727\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1727\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1727\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1727\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Sealed &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Sealed here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1727\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1727\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1727\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1727\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1727\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "FLCt7eVzRmedD4gb40BpVQ",
    "prevUrl": "generic-trait",
    "nextUrl": "case-object",
    "mainInfoBox": "<p>A simple new keyword today</p>\n\n<p>It is not possible to illustrate its main function using Scastie, so if you would like to learn more you will have to read the description snippet below. I am sorry about that.</p>",
    "detailedInfoBox": "<p>We are reusing a lot of feature we saw in the past for this SKB. Everything should look familiar except the new keyword <code>sealed</code></p>\n\n<p>\n<code>sealed</code> is related to Object Oriented Programming and more specifically about inheritance.\n</p>\n\n<p>\nThe keyword <code>sealed</code> allows you to block inheritance if it is not within the same file. If you define a <code>sealed</code> <code>trait</code> or <code>abstract class</code> ( it works for both the exact same way ), you will only be able to <code>extends</code> this <code>trait</code> within this file. \n</p>\n\n<p>This is the reason why it is hard to illustrate it within Scastie since everything is just one worksheet.</p>\n\n<p>It is very useful when you want to describe something which have finite options. We are going to learn more about a very specific use case in the next SKB.</p>"
  },
  {
    "id": 1730,
    "date": "2020-10-28T09:06:44",
    "date_gmt": "2020-10-28T17:06:44",
    "modified": "2020-11-01T04:11:25",
    "modified_gmt": "2020-11-01T12:11:25",
    "slug": "case-object",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-case-object/",
    "title": " Scala case object",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-ZjAPGq\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>case object</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>case object</code> !</p>\n\n<div class=\"skb-focus\"><p>\nThis one should be pretty quick. </p>\n<p>\nIntroducing <code>case object</code>.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/vzjyjr0WSTOskKtlV1EoDQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/vzjyjr0WSTOskKtlV1EoDQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (vzjyjr0WSTOskKtlV1EoDQ)</a>.</p>\n\n<h2>More information about Scala <code>case object</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>case object</code>.</p>\n\n<div class=\"skb-focus\"><p>\nThere is not much to it at first sight. It is the equivalent of what <code>case class</code> is for <code>class</code> but for <code>object</code>.\n</p>\n<p>\nA <code>case object</code> has everything a <code>object</code> have. Feel free to go back to the corresponding episode. But add also some convenient method. For instance the `<code>toString</code> is a lot nicer, allowing you to get the name of the <code>case object</code> itself which allow for great logging.\n</p>\n\n<p>\nIt was not easy to introduce only <code>case object</code> because their main use case is in the implementation of the Scala v2.x Enumerations which we are going to see next time. I wanted a dedicated episode to Enumeration but couldn&#8217;t go for it until <code>case object</code> were introduced. Now that it is done, see you next time.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>case object</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-sealed/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1730\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1730\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1730\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1730\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1730\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala case object &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala case object here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1730\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1730\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1730\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1730\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1730\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "vzjyjr0WSTOskKtlV1EoDQ",
    "prevUrl": "sealed",
    "nextUrl": "enumeration",
    "mainInfoBox": "<p>\nThis one should be pretty quick. </p>\n<p>\nIntroducing <code>case object</code>.\n</p>",
    "detailedInfoBox": "<p>\nThere is not much to it at first sight. It is the equivalent of what <code>case class</code> is for <code>class</code> but for <code>object</code>.\n</p>\n<p>\nA <code>case object</code> has everything a <code>object</code> have. Feel free to go back to the corresponding episode. But add also some convenient method. For instance the `<code>toString</code> is a lot nicer, allowing you to get the name of the <code>case object</code> itself which allow for great logging.\n</p>\n\n<p>\nIt was not easy to introduce only <code>case object</code> because their main use case is in the implementation of the Scala v2.x Enumerations which we are going to see next time. I wanted a dedicated episode to Enumeration but couldn’t go for it until <code>case object</code> were introduced. Now that it is done, see you next time.\n</p>"
  },
  {
    "id": 1733,
    "date": "2020-10-30T09:00:57",
    "date_gmt": "2020-10-30T17:00:57",
    "modified": "2020-11-02T11:37:20",
    "modified_gmt": "2020-11-02T19:37:20",
    "slug": "enumeration",
    "status": "publish",
    "link": "https://leobenkel.com/2020/10/skb-scala-enumeration/",
    "title": " Scala Enumeration for 2.x",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z2cUEnA\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Enumeration for 2.x.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Enumeration for 2.x !</p>\n\n<div class=\"skb-focus\"><p>Time to assemble everything we learned in the recent episodes !</p>\n\n<p>We are going to use <code>sealed</code>, <i>pattern matching</i>, <code>trait</code>, <code>case object</code>, <code>map</code>, etc&#8230;</p>\n\n<p>What you are about to see here is good knowledge to keep but the exact use case and application showed here will be deprecated in Scala 3. However, the underlying features and logic we are using will still be here so it is not a loss ! </p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/RpzCdEpvSnKsBpI1TsckHw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/RpzCdEpvSnKsBpI1TsckHw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (RpzCdEpvSnKsBpI1TsckHw)</a>.</p>\n\n<h2>More information about Scala Enumeration for 2.x</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Enumeration for 2.x.</p>\n\n<div class=\"skb-focus\"><p>\nWe are writing an Ore management software today. \n</p>\n<p>\nNotice how we are able to describe the Ores with a finite number of possibilities. If we want a new one, we need to add it ourselves. Did you notice the warning about pattern matching :\n<pre>\nwarning: match may not be exhaustive.\n</pre>\nSince we are using <code>sealed</code>, the compiler can know exactly the number of options available for this type. So the compiler can help us !\n</p>\n\n<p>\nWe could simply have a <code>ore: String</code> of course. But noticed the typo in <code>Godl</code> instead of <code>Gold</code> ? And the compiler caught it for us ! \n</p>\n\n<p>The rest of the exercise is just to go a bit further and play with what we built.</p>\n<p>You can set up a system for reporting, and add handy calculation with <code>lazy val</code>.</p>\n<p>You can also set up special case like for Iron in the last example.</p>\n\n<p>Something that needs to be said is that in Scala 3 this pattern will be completely changed. Scala 3 will implement its shortcut version for Enumeration that will pretty much write this boiler plate code for us. But all those features to customize it yourself will still be available so it is not a loss to know about it !</p>\n\n<p>I hope this little exercise with a more applicable example was fun! If you have any feedback, as always, don&#8217;t hesitate to comment below or message me on the Discord server. Looking forward to hearing from you.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Enumeration for 2.x.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-case-object/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1733\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1733\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1733\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1733\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1733\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Enumeration for 2.x &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Enumeration for 2.x here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1733\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1733\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1733\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1733\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1733\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "RpzCdEpvSnKsBpI1TsckHw",
    "prevUrl": "case-object",
    "nextUrl": "contexts",
    "mainInfoBox": "<p>Time to assemble everything we learned in the recent episodes !</p>\n\n<p>We are going to use <code>sealed</code>, <i>pattern matching</i>, <code>trait</code>, <code>case object</code>, <code>map</code>, etc…</p>\n\n<p>What you are about to see here is good knowledge to keep but the exact use case and application showed here will be deprecated in Scala 3. However, the underlying features and logic we are using will still be here so it is not a loss ! </p>",
    "detailedInfoBox": "<p>\nWe are writing an Ore management software today. \n</p>\n<p>\nNotice how we are able to describe the Ores with a finite number of possibilities. If we want a new one, we need to add it ourselves. Did you notice the warning about pattern matching :\n</p><pre>warning: match may not be exhaustive.\n</pre>\nSince we are using <code>sealed</code>, the compiler can know exactly the number of options available for this type. So the compiler can help us !\n<p></p>\n\n<p>\nWe could simply have a <code>ore: String</code> of course. But noticed the typo in <code>Godl</code> instead of <code>Gold</code> ? And the compiler caught it for us ! \n</p>\n\n<p>The rest of the exercise is just to go a bit further and play with what we built.</p>\n<p>You can set up a system for reporting, and add handy calculation with <code>lazy val</code>.</p>\n<p>You can also set up special case like for Iron in the last example.</p>\n\n<p>Something that needs to be said is that in Scala 3 this pattern will be completely changed. Scala 3 will implement its shortcut version for Enumeration that will pretty much write this boiler plate code for us. But all those features to customize it yourself will still be available so it is not a loss to know about it !</p>\n\n<p>I hope this little exercise with a more applicable example was fun! If you have any feedback, as always, don’t hesitate to comment below or message me on the Discord server. Looking forward to hearing from you.</p>"
  },
  {
    "id": 1751,
    "date": "2020-11-02T09:01:11",
    "date_gmt": "2020-11-02T17:01:11",
    "modified": "2020-11-06T03:47:53",
    "modified_gmt": "2020-11-06T11:47:53",
    "slug": "contexts",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-contexts/",
    "title": " Scala contexts",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1NSgIs\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala contexts.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala contexts !</p>\n\n<div class=\"skb-focus\"><p>\nWe are going to formalize something we saw before but without stopping and looking at it.\n</p>\n<p>\nContexts are defined by <code>{ ... }</code>.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/IpAmRkEzSOGRRDEFuAp5RA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/IpAmRkEzSOGRRDEFuAp5RA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (IpAmRkEzSOGRRDEFuAp5RA)</a>.</p>\n\n<h2>More information about Scala contexts</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala contexts.</p>\n\n<div class=\"skb-focus\"><p>\nYou realize that we saw <i>context</i> before. We saw the characters <code>{</code> and <code>}</code> in the previous SKBs.\n</p>\n\n<p>\nWe saw it before when we defined a method using <code>def</code>. We also saw it when we defined a <code>class</code>, an <code>object</code>, even a <code>val</code>.\n</p>\n\n<p>\nIf you use a <code>val</code> within a context, you are going to be using the one the closest to the context you are in. Keep in mind that it is not good practice to reuse the same name over and over as it makes the code extremely confusing and hard to debug. But this example is trying to illustrate to <i>scope</i> of the <code>val</code> based on inside which context is has been declared and is being used.\n</p>\n\n<p>\nContext always return a value. You can see that in the very first context defined by \n<pre>\n1\n</pre>\nThis context is implicit, and could be re-written to:\n<pre>\n{ \n   1\n}\n</pre>\nThis is the same concept for each <code>val</code>:\n<pre>\nval a: Int = 1\n</pre>\ncan be read as \n<pre>\nval a: Int = {\n   1\n}\n</pre>\n</p>\n<p>\nContext always return the last line of code as its overall returned value. The other aspect to know about is related to the <i>garbage collector</i> inherited from <i>Java</i>. Yes, sometimes we have to remember that Scala is based on the JVM and inherits some of its core features, one of them being the <i>garbage collector</i>. \n</p>\n<p>\nThe idea behind the <i>garbage collector</i> is the memory management. Each time you create a <code>val</code> you need to allocate memories to keep it &#8220;alive&#8221;. That is all well and good but if you keep creating more and more things, your computer is going to die. How do you know you can remove a value from the memory ? Context !\n</p>\n<p>\nWhen the program is leaving a context, it knows it can safely remove all values that were declared in this context and free the memory. \n</p>\n<p>\nI hope this SKB was helpful in understanding better the structure of a Scala program. As always, don&#8217;t hesitate to message me or any member of our community if you need help ! \n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala contexts.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/10/skb-scala-enumeration/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1751\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1751\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1751\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1751\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1751\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala contexts &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala contexts here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1751\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1751\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1751\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1751\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1751\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "IpAmRkEzSOGRRDEFuAp5RA",
    "prevUrl": "enumeration",
    "nextUrl": "infix-notation",
    "mainInfoBox": "<p>\nWe are going to formalize something we saw before but without stopping and looking at it.\n</p>\n<p>\nContexts are defined by <code>{ ... }</code>.\n</p>",
    "detailedInfoBox": "<p>\nYou realize that we saw <i>context</i> before. We saw the characters <code>{</code> and <code>}</code> in the previous SKBs.\n</p>\n\n<p>\nWe saw it before when we defined a method using <code>def</code>. We also saw it when we defined a <code>class</code>, an <code>object</code>, even a <code>val</code>.\n</p>\n\n<p>\nIf you use a <code>val</code> within a context, you are going to be using the one the closest to the context you are in. Keep in mind that it is not good practice to reuse the same name over and over as it makes the code extremely confusing and hard to debug. But this example is trying to illustrate to <i>scope</i> of the <code>val</code> based on inside which context is has been declared and is being used.\n</p>\n\n<p>\nContext always return a value. You can see that in the very first context defined by \n</p><pre>1\n</pre>\nThis context is implicit, and could be re-written to:\n<pre>{ \n   1\n}\n</pre>\nThis is the same concept for each <code>val</code>:\n<pre>val a: Int = 1\n</pre>\ncan be read as \n<pre>val a: Int = {\n   1\n}\n</pre>\n<p></p>\n<p>\nContext always return the last line of code as its overall returned value. The other aspect to know about is related to the <i>garbage collector</i> inherited from <i>Java</i>. Yes, sometimes we have to remember that Scala is based on the JVM and inherits some of its core features, one of them being the <i>garbage collector</i>. \n</p>\n<p>\nThe idea behind the <i>garbage collector</i> is the memory management. Each time you create a <code>val</code> you need to allocate memories to keep it “alive”. That is all well and good but if you keep creating more and more things, your computer is going to die. How do you know you can remove a value from the memory ? Context !\n</p>\n<p>\nWhen the program is leaving a context, it knows it can safely remove all values that were declared in this context and free the memory. \n</p>\n<p>\nI hope this SKB was helpful in understanding better the structure of a Scala program. As always, don’t hesitate to message me or any member of our community if you need help ! \n</p>"
  },
  {
    "id": 1748,
    "date": "2020-11-04T09:03:46",
    "date_gmt": "2020-11-04T17:03:46",
    "modified": "2020-11-06T09:05:52",
    "modified_gmt": "2020-11-06T17:05:52",
    "slug": "infix-notation",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-infix-notation/",
    "title": " Scala infix notation",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-ZYsNOL\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala infix notation.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala infix notation !</p>\n\n<div class=\"skb-focus\"><p>\nThis SKB will teach you a little more about some syntax allowed by the Scala language: infix.\n</p>\n<p>\nIt allows you to remove the <code>.</code> and the <code>()</code> when using a method.\n</p>\n</div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/5YZMNrc1R5WjgZlBc772Kw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/5YZMNrc1R5WjgZlBc772Kw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (5YZMNrc1R5WjgZlBc772Kw)</a>.</p>\n\n<h2>More information about Scala infix notation</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala infix notation.</p>\n\n<div class=\"skb-focus\"><p>\nFirst of all, did you realize that every operation that seems to be &#8220;magic&#8221; like the <code>+</code> or <code>==</code> are just function like any other. But by habit , we use the infix notation for those by default. It is possible to use the &#8220;normal&#8221; notation with the <code>.</code> and the <code>()</code> but let&#8217;s be honest, it looks weird !\n</p>\n\n<p>\nYou can use the infix notation for every method that takes one argument. Which means you can use it for <code>map</code>, <code>flatMap</code> and all the other ones.\n</p>\n\n<p>\nWe also kind of saw it quickly previously when we talked about <code>reduce</code>. We saw that we could turn \n<pre>\nlist.reduce ( (a, b) => a.combineWith(b) )\n</pre>\ninto \n<pre>\nlist.reduce ( _ combinedWith _ )\n</pre>\nYou now understand one part of puzzle. The second part being the <code>_</code> that we are going to see soon.\n</p>\n\n<p>\nOne last note, be careful not to abuse it or the code can become extremely horrible to decipher. You could chain methods are methods and lost track of which value is executing what.\n<pre>\na map _ combined v map _ + 1\n</pre>\nThis example is hard to read. Does <code>combined</code> return a list ? What is the second <code>map</code> applied to ? So, be careful !\n</p>\n\n<p>It is also possible to use infix notation for function that has no arguments, but it is an extra feature, not included by default that you need to enable. To learn more, you can search for <code>scala.language.postfixOps</code> which allow you to use infix notation even without an argument.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala infix notation.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-contexts/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1748\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1748\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1748\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1748\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1748\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala infix notation &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala infix notation here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1748\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1748\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1748\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1748\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1748\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "5YZMNrc1R5WjgZlBc772Kw",
    "prevUrl": "contexts",
    "nextUrl": "pattern-matching-at",
    "mainInfoBox": "<p>\nThis SKB will teach you a little more about some syntax allowed by the Scala language: infix.\n</p>\n<p>\nIt allows you to remove the <code>.</code> and the <code>()</code> when using a method.\n</p>\n",
    "detailedInfoBox": "<p>\nFirst of all, did you realize that every operation that seems to be “magic” like the <code>+</code> or <code>==</code> are just function like any other. But by habit , we use the infix notation for those by default. It is possible to use the “normal” notation with the <code>.</code> and the <code>()</code> but let’s be honest, it looks weird !\n</p>\n\n<p>\nYou can use the infix notation for every method that takes one argument. Which means you can use it for <code>map</code>, <code>flatMap</code> and all the other ones.\n</p>\n\n<p>\nWe also kind of saw it quickly previously when we talked about <code>reduce</code>. We saw that we could turn \n</p><pre>list.reduce ( (a, b) =&gt; a.combineWith(b) )\n</pre>\ninto \n<pre>list.reduce ( _ combinedWith _ )\n</pre>\nYou now understand one part of puzzle. The second part being the <code>_</code> that we are going to see soon.\n<p></p>\n\n<p>\nOne last note, be careful not to abuse it or the code can become extremely horrible to decipher. You could chain methods are methods and lost track of which value is executing what.\n</p><pre>a map _ combined v map _ + 1\n</pre>\nThis example is hard to read. Does <code>combined</code> return a list ? What is the second <code>map</code> applied to ? So, be careful !\n<p></p>\n\n<p>It is also possible to use infix notation for function that has no arguments, but it is an extra feature, not included by default that you need to enable. To learn more, you can search for <code>scala.language.postfixOps</code> which allow you to use infix notation even without an argument.</p>"
  },
  {
    "id": 1768,
    "date": "2020-11-06T09:00:49",
    "date_gmt": "2020-11-06T17:00:49",
    "modified": "2020-11-11T10:01:21",
    "modified_gmt": "2020-11-11T18:01:21",
    "slug": "pattern-matching-at",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/",
    "title": " Scala pattern matching @",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-ffu0I\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala pattern matching <code>@</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala pattern matching <code>@</code> !</p>\n\n<div class=\"skb-focus\"><p>\nA little more about <i>pattern matching</i> ! \n</p>\n\n<p>And we are going to learn about a new operator: <code>@</code> !\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/xsycVjGaSwubwwjAYM688w.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/xsycVjGaSwubwwjAYM688w\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (xsycVjGaSwubwwjAYM688w)</a>.</p>\n\n<h2>More information about Scala pattern matching <code>@</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala pattern matching <code>@</code>.</p>\n\n<div class=\"skb-focus\"><p>\nThe operator <code>@</code> allows you to capture the full entity the pattern matching has matched on.\n</p>\n<p>It is convenient in numerous use case but here is a few examples. \n</p>\n<pre>\ncase a @ \"something\" => // something with a\n</pre>\n\n<p>\nIt is also very convenient in cases with <code>Option</code>: \n</p>\n<pre>\nopt match {\n    case s @ Some(\"abc\") => s\n    case _ => Some(default)\n}\n</pre>\n\n<p>\nWithout it you would have to recreate a new object instead of reusing the one we already have. \n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala pattern matching <code>@</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-infix-notation/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1768\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1768\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1768\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1768\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1768\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; pattern matching &#8216;@&#8217; &#8211; Periodic exercise to learn bits of knowledge about Scala. pattern matching &#8216;@&#8217; here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1768\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1768\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1768\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1768\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1768\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "xsycVjGaSwubwwjAYM688w",
    "prevUrl": "infix-notation",
    "nextUrl": "pattern-matching-or",
    "mainInfoBox": "<p>\nA little more about <i>pattern matching</i> ! \n</p>\n\n<p>And we are going to learn about a new operator: <code>@</code> !\n</p>",
    "detailedInfoBox": "<p>\nThe operator <code>@</code> allows you to capture the full entity the pattern matching has matched on.\n</p>\n<p>It is convenient in numerous use case but here is a few examples. \n</p>\n<pre>case a @ \"something\" =&gt; // something with a\n</pre>\n\n<p>\nIt is also very convenient in cases with <code>Option</code>: \n</p>\n<pre>opt match {\n    case s @ Some(\"abc\") =&gt; s\n    case _ =&gt; Some(default)\n}\n</pre>\n\n<p>\nWithout it you would have to recreate a new object instead of reusing the one we already have. \n</p>"
  },
  {
    "id": 1757,
    "date": "2020-11-09T09:00:54",
    "date_gmt": "2020-11-09T17:00:54",
    "modified": "2020-11-11T09:42:35",
    "modified_gmt": "2020-11-11T17:42:35",
    "slug": "pattern-matching-or",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/",
    "title": " Scala pattern matching OR",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-8bGTi\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala pattern matching OR.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala pattern matching OR !</p>\n\n<div class=\"skb-focus\"><p>Let&#8217;s continue the pattern matching exploration.</p>\n\n<p>\nHow would you match several conditions at once ? We are going to learn this today.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/L2xDjw3yTfeVu8BvTlvJuw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/L2xDjw3yTfeVu8BvTlvJuw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (L2xDjw3yTfeVu8BvTlvJuw)</a>.</p>\n\n<h2>More information about Scala pattern matching OR</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala pattern matching OR.</p>\n\n<div class=\"skb-focus\"><p>\nOnce you know the syntax, it is pretty straight forward, you have to use the symbol <code>|</code>. Like the boolean operator <code>OR</code>: <code>||</code>.\n</p>\n\n<p>The syntax is:</p>\n<pre>\ncase valueName @ ( enum1 | enum2 | enum3 ) => ...\n</pre>\n\n<p>You can also do the same thing without the <code>@</code>:\n</p>\n\n<pre>\ncase ( enum1 | enum2 | enum3 ) => ...\n</pre>\n\n<p>\nAnd you can do the same thing with <code>case class</code>:\n</p>\n\n<pre>\ncase valueName @ ( CaseClass(_, exactMatch) | CaseClass(match2, _) ) => ...\n</pre>\n\n<p>\nNext time, we are going to dive more into the <code>case class</code> use case.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala pattern matching OR.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-at/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1757\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1757\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1757\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1757\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1757\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala pattern matching OR &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala pattern matching OR here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1757\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1757\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1757\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1757\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1757\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "L2xDjw3yTfeVu8BvTlvJuw",
    "prevUrl": "pattern-matching-at",
    "nextUrl": "pattern-matching-for-case-class",
    "mainInfoBox": "<p>Let’s continue the pattern matching exploration.</p>\n\n<p>\nHow would you match several conditions at once ? We are going to learn this today.\n</p>",
    "detailedInfoBox": "<p>\nOnce you know the syntax, it is pretty straight forward, you have to use the symbol <code>|</code>. Like the boolean operator <code>OR</code>: <code>||</code>.\n</p>\n\n<p>The syntax is:</p>\n<pre>case valueName @ ( enum1 | enum2 | enum3 ) =&gt; ...\n</pre>\n\n<p>You can also do the same thing without the <code>@</code>:\n</p>\n\n<pre>case ( enum1 | enum2 | enum3 ) =&gt; ...\n</pre>\n\n<p>\nAnd you can do the same thing with <code>case class</code>:\n</p>\n\n<pre>case valueName @ ( CaseClass(_, exactMatch) | CaseClass(match2, _) ) =&gt; ...\n</pre>\n\n<p>\nNext time, we are going to dive more into the <code>case class</code> use case.</p>"
  },
  {
    "id": 1760,
    "date": "2020-11-11T09:01:22",
    "date_gmt": "2020-11-11T17:01:22",
    "modified": "2020-11-13T19:25:00",
    "modified_gmt": "2020-11-14T03:25:00",
    "slug": "pattern-matching-for-case-class",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/",
    "title": " Scala pattern matching for case class",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-5anzp\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala pattern matching for case class.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala pattern matching for case class !</p>\n\n<div class=\"skb-focus\"><p>We learned about pattern matching in the past and there were a lot of &#8220;<i>we will learn about this later</i>&#8220;.</p>\n\n<p>\nSome of the <i>later</i> is today !\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/v70vPtVcTWmJb6NBzSAnDg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/v70vPtVcTWmJb6NBzSAnDg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (v70vPtVcTWmJb6NBzSAnDg)</a>.</p>\n\n<h2>More information about Scala pattern matching for case class</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala pattern matching for case class.</p>\n\n<div class=\"skb-focus\"><p>\nOne of the big advantage of <code>case class</code> over <code>class</code> is the built-in support for pattern matching. We are going to see the same advantage with <code>case object</code> in a later SKB.\n</p>\n\n<p>\nComing back to <code>case class</code>. You can perform several test using pattern matching:\n<p>\n\n<ul>\n\n<li>Extraction of field: <code>case Person(firstName, lastName) => ???</code></li>\n\n<li>Extraction of field with condition: <code>case Person(firstName, lastName) if firstName.startsWith(\"L\") => ???</code></li>\n\n<li>Filter with exact match: <code>case Person(\"Leo\", lastName) => ???</code></li>\n\n<li>Filter with exact match and handle on case class: <code>case p @ Person(\"Leo\", lastName) => ???</code></li>\n\n<li>Several filters: <code>case p @ (Person(\"a\", _) | Person(_, \"b\")) => ???</code></li>\n\n</ul>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala pattern matching for case class.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-or/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1760\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1760\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1760\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1760\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1760\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala pattern matching for case class &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala pattern matching for case class here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1760\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1760\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1760\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1760\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1760\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "v70vPtVcTWmJb6NBzSAnDg",
    "prevUrl": "pattern-matching-or",
    "nextUrl": "upper-constraint",
    "mainInfoBox": "<p>We learned about pattern matching in the past and there were a lot of “<i>we will learn about this later</i>“.</p>\n\n<p>\nSome of the <i>later</i> is today !\n</p>",
    "detailedInfoBox": "<p>\nOne of the big advantage of <code>case class</code> over <code>class</code> is the built-in support for pattern matching. We are going to see the same advantage with <code>case object</code> in a later SKB.\n</p>\n\n<p>\nComing back to <code>case class</code>. You can perform several test using pattern matching:\n</p><p>\n\n</p><ul>\n\n<li>Extraction of field: <code>case Person(firstName, lastName) =&gt; ???</code></li>\n\n<li>Extraction of field with condition: <code>case Person(firstName, lastName) if firstName.startsWith(\"L\") =&gt; ???</code></li>\n\n<li>Filter with exact match: <code>case Person(\"Leo\", lastName) =&gt; ???</code></li>\n\n<li>Filter with exact match and handle on case class: <code>case p @ Person(\"Leo\", lastName) =&gt; ???</code></li>\n\n<li>Several filters: <code>case p @ (Person(\"a\", _) | Person(_, \"b\")) =&gt; ???</code></li>\n\n</ul>\n"
  },
  {
    "id": 1782,
    "date": "2020-11-13T09:04:31",
    "date_gmt": "2020-11-13T17:04:31",
    "modified": "2020-11-16T09:16:57",
    "modified_gmt": "2020-11-16T17:16:57",
    "slug": "upper-constraint",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-upper-constraint/",
    "title": " Scala upper constraint",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-16F5zq\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala upper constraint.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala upper constraint !</p>\n\n<div class=\"skb-focus\"><p>Let&#8217;s go back to Object Oriented Programming concepts and specifically to interfaces (<code>trait</code>).</p>\n\n<p>We are going to see how to constraint what type can be passed on. Several constraints are possible, let&#8217;s talk about a upper bound. The technical term for it is <i>Upper Type Bounds</i> but let&#8217;s keep it simple.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/wYG9m3B3T1qBOuvy5vLjAQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/wYG9m3B3T1qBOuvy5vLjAQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (wYG9m3B3T1qBOuvy5vLjAQ)</a>.</p>\n\n<h2>More information about Scala upper constraint</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala upper constraint.</p>\n\n<div class=\"skb-focus\"><p>\nThe new operator we are looking at today is <code><:</code>\n</p>\n\n<p>\nThe syntax is <code>A <: B</code> and it means that the type <code>A</code> must be <code>B</code> or a class that has inherited from <code>B</code>, a child class.\n</p>\n\n<p>\nThe main advantage of doing this is that if you were to only have a simple generic class <code>[A]</code>, you would not know anything about <code>A</code> at compile time. However, if you <i>bound</i> it, using <code>[A <: B]</code>, the compiler would know that <code>A</code> is <i>at least</i> a <code>B</code>. That allow you to write code that can use the fields and methods of <code>B</code> as if <code>A</code> was <code>B</code>.\n</p>\n\n<p>\nExtra note, when defining a custom type using <code>type</code>, it is possible to describe in a parent class as <code>type MYTYPE <: CONSTRAINT</code> so that child class has to implement it with a type that is a child of <code>CONSTRAINT</code>.\n</p>\n<pre>\ntrait ParentClassOfConstraint\n\nclass ChildClassOfConstraint extends ParentClassOfConstraint\n\ntrait Foo {\n   type MYTYPE <: ParentClassOfConstraint\n}\n\nclass Bar extends Foo {\n   override type MYTYPE = ChildClassOfConstraint\n}\n</pre>\n\n<p> It is a bit advanced but I thought you should know about it.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala upper constraint.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-pattern-matching-for-case-class/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1782\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1782\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1782\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1782\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1782\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala upper constraint &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala upper constraint here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1782\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1782\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1782\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1782\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1782\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "wYG9m3B3T1qBOuvy5vLjAQ",
    "prevUrl": "pattern-matching-for-case-class",
    "nextUrl": "case-class-copy",
    "mainInfoBox": "<p>Let’s go back to Object Oriented Programming concepts and specifically to interfaces (<code>trait</code>).</p>\n\n<p>We are going to see how to constraint what type can be passed on. Several constraints are possible, let’s talk about a upper bound. The technical term for it is <i>Upper Type Bounds</i> but let’s keep it simple.\n</p>",
    "detailedInfoBox": "<p>\nThe new operator we are looking at today is <code>&lt;:</code>\n</p>\n\n<p>\nThe syntax is <code>A &lt;: B</code> and it means that the type <code>A</code> must be <code>B</code> or a class that has inherited from <code>B</code>, a child class.\n</p>\n\n<p>\nThe main advantage of doing this is that if you were to only have a simple generic class <code>[A]</code>, you would not know anything about <code>A</code> at compile time. However, if you <i>bound</i> it, using <code>[A &lt;: B]</code>, the compiler would know that <code>A</code> is <i>at least</i> a <code>B</code>. That allow you to write code that can use the fields and methods of <code>B</code> as if <code>A</code> was <code>B</code>.\n</p>\n\n<p>\nExtra note, when defining a custom type using <code>type</code>, it is possible to describe in a parent class as <code>type MYTYPE &lt;: CONSTRAINT</code> so that child class has to implement it with a type that is a child of <code>CONSTRAINT</code>.\n</p>\n<pre>trait ParentClassOfConstraint\n\nclass ChildClassOfConstraint extends ParentClassOfConstraint\n\ntrait Foo {\n   type MYTYPE &lt;: ParentClassOfConstraint\n}\n\nclass Bar extends Foo {\n   override type MYTYPE = ChildClassOfConstraint\n}\n</pre>\n\n<p> It is a bit advanced but I thought you should know about it.</p>"
  },
  {
    "id": 1793,
    "date": "2020-11-16T09:00:16",
    "date_gmt": "2020-11-16T17:00:16",
    "modified": "2020-11-18T09:04:36",
    "modified_gmt": "2020-11-18T17:04:36",
    "slug": "case-class-copy",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-case-class-copy/",
    "title": " Scala case class copy",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-ZjV7pq\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala case class <code>copy</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala case class <code>copy</code> !</p>\n\n<div class=\"skb-focus\"><p>\nWe learned about <code>case class</code> in previous SKBs, but we haven&#8217;t seen the full spectrum of features that this special structure offers.\n</p>\n<p>One of the use case for this structure is to represent a row in a database. In some other languages, <code>case class</code> are even called <i>Record</i>.</p>\n<p>We are now going to learn how to modify the values of the column of this record.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/zJFFFqP7S5Gym4PZzKLVXA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/zJFFFqP7S5Gym4PZzKLVXA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (zJFFFqP7S5Gym4PZzKLVXA)</a>.</p>\n\n<h2>More information about Scala case class <code>copy</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala case class <code>copy</code>.</p>\n\n<div class=\"skb-focus\"><p>\nIntroducing <code>copy</code> !\n</p>\n\n<p>\n<code>copy</code> is this generated method that all <code>case class</code> have. It allows to make a copy of the case class instance while modifying zero, one, more or all the fields that the <code>case class</code> has.\n</p>\n\n<p>\nRemember than in functional programming and in Scala, we want to only work with immutable entities. It would be very tedious to have to manually recreate the case class, which could have dozens of fields, when all we want is, for instance, to modify the <i>last updated date</i>. The is the reason for the method, <code>copy</code>.\n</p>\n\n<p>\nBut how does this magic mathod works ! \n</p>\n<p>\nWell, look at the method in the example called <code>updateContent</code>. You can see that the arguments have default values set for them. The trick is to use the current value of the fields of the case class as default value and voila! \n</p>\n<p>Look at how it is used lower in the exercise, you can omit some of the arguments of the method, which means it will use the default value. This allow us to modify only the part we want and keep the rest the same. \n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala case class <code>copy</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-upper-constraint/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1793\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1793\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1793\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1793\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1793\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala case class copy &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala case class copy here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1793\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1793\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1793\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1793\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1793\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "zJFFFqP7S5Gym4PZzKLVXA",
    "prevUrl": "upper-constraint",
    "nextUrl": "implicit-conversion",
    "mainInfoBox": "<p>\nWe learned about <code>case class</code> in previous SKBs, but we haven’t seen the full spectrum of features that this special structure offers.\n</p>\n<p>One of the use case for this structure is to represent a row in a database. In some other languages, <code>case class</code> are even called <i>Record</i>.</p>\n<p>We are now going to learn how to modify the values of the column of this record.</p>",
    "detailedInfoBox": "<p>\nIntroducing <code>copy</code> !\n</p>\n\n<p>\n<code>copy</code> is this generated method that all <code>case class</code> have. It allows to make a copy of the case class instance while modifying zero, one, more or all the fields that the <code>case class</code> has.\n</p>\n\n<p>\nRemember than in functional programming and in Scala, we want to only work with immutable entities. It would be very tedious to have to manually recreate the case class, which could have dozens of fields, when all we want is, for instance, to modify the <i>last updated date</i>. The is the reason for the method, <code>copy</code>.\n</p>\n\n<p>\nBut how does this magic mathod works ! \n</p>\n<p>\nWell, look at the method in the example called <code>updateContent</code>. You can see that the arguments have default values set for them. The trick is to use the current value of the fields of the case class as default value and voila! \n</p>\n<p>Look at how it is used lower in the exercise, you can omit some of the arguments of the method, which means it will use the default value. This allow us to modify only the part we want and keep the rest the same. \n</p>"
  },
  {
    "id": 1799,
    "date": "2020-11-18T09:00:02",
    "date_gmt": "2020-11-18T17:00:02",
    "modified": "2020-11-20T09:23:11",
    "modified_gmt": "2020-11-20T17:23:11",
    "slug": "implicit-conversion",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-implicit-conversion/",
    "title": " Scala implicit conversion",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-2q3qkW\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala implicit conversion.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala implicit conversion !</p>\n\n<div class=\"skb-focus\"><p>Be careful ! I am going to show you something that you have to be really careful about.</p>\n\n<p><i>With great power comes great responsibilities.</i></p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/2UnR8tnRRky1rrfT1MNDzw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/2UnR8tnRRky1rrfT1MNDzw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (2UnR8tnRRky1rrfT1MNDzw)</a>.</p>\n\n<h2>More information about Scala implicit conversion</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala implicit conversion.</p>\n\n<div class=\"skb-focus\"><p>\nThe construct <code>implicit def</code> allows you to implicitly convert from one type to another.\n</p>\n\n<p>\nThe syntax is pretty straightforward:\n</p>\n<pre>\nimplicit def [NAME](input: INPUT_TYPE): OUTPUT_TYPE = ???\n</pre>\n<p>\nIt is usually named either <code>from[INPUT_TYPE]To[OUTPUT_TYPE]</code> or in our case since it is already contained inside of the <i>companion object</i>, simply <code>to[OUTPUT_TYPE]</code>.\n</p>\n\n<p>\nYou have to be careful however. You can trap yourself. \n</p>\n\n<p>\nFor instance, if by mistake you are passing the name of the user in the id field, in a normal situation, the compiler would break and tell you that you are giving a <code>String</code> when the method expect an <code>Int</code> and that will catch your mistake. \n</p>\n<p>However, let&#8217;s say you want to make your life easier for a different use case, you implement an <i>implicit conversion</i> that automatically convert <code>String</code> to <code>Int</code>. At this point, the compiler will automatically convert any <code>String</code> to <code>Int</code> which can create a real mess.\n</p>\n\n<p>\nI would suggest to use <code>implicit def</code> extremely carefully and in very limited scope. Also, do not implement <i>implicit conversion</i> for basic types such as <code>String</code> or <code>Int</code>, but only for more complex types like <code>trait</code> or <code>case class</code>. So that you have a more refined control on when it is used.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala implicit conversion.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-copy/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1799\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1799\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1799\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1799\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1799\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala implicit conversion &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala implicit conversion here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1799\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1799\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1799\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1799\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1799\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "2UnR8tnRRky1rrfT1MNDzw",
    "prevUrl": "case-class-copy",
    "nextUrl": "case-class-unapply",
    "mainInfoBox": "<p>Be careful ! I am going to show you something that you have to be really careful about.</p>\n\n<p><i>With great power comes great responsibilities.</i></p>",
    "detailedInfoBox": "<p>\nThe construct <code>implicit def</code> allows you to implicitly convert from one type to another.\n</p>\n\n<p>\nThe syntax is pretty straightforward:\n</p>\n<pre>implicit def [NAME](input: INPUT_TYPE): OUTPUT_TYPE = ???\n</pre>\n<p>\nIt is usually named either <code>from[INPUT_TYPE]To[OUTPUT_TYPE]</code> or in our case since it is already contained inside of the <i>companion object</i>, simply <code>to[OUTPUT_TYPE]</code>.\n</p>\n\n<p>\nYou have to be careful however. You can trap yourself. \n</p>\n\n<p>\nFor instance, if by mistake you are passing the name of the user in the id field, in a normal situation, the compiler would break and tell you that you are giving a <code>String</code> when the method expect an <code>Int</code> and that will catch your mistake. \n</p>\n<p>However, let’s say you want to make your life easier for a different use case, you implement an <i>implicit conversion</i> that automatically convert <code>String</code> to <code>Int</code>. At this point, the compiler will automatically convert any <code>String</code> to <code>Int</code> which can create a real mess.\n</p>\n\n<p>\nI would suggest to use <code>implicit def</code> extremely carefully and in very limited scope. Also, do not implement <i>implicit conversion</i> for basic types such as <code>String</code> or <code>Int</code>, but only for more complex types like <code>trait</code> or <code>case class</code>. So that you have a more refined control on when it is used.\n</p>"
  },
  {
    "id": 1802,
    "date": "2020-11-20T09:00:41",
    "date_gmt": "2020-11-20T17:00:41",
    "modified": "2020-11-23T09:21:06",
    "modified_gmt": "2020-11-23T17:21:06",
    "slug": "case-class-unapply",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-case-class-unapply/",
    "title": " Scala case class unapply",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1iFnDF\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala case class <code>unapply</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala case class <code>unapply</code> !</p>\n\n<div class=\"skb-focus\"><p>After so many SKBs, you pretty much are an expert !</p>\n<p>So, let&#8217;s dive into a more advanced concept.</p>\n<p>And particularly, about one more features of the <code>case class</code> related on how pattern matching works.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/pDSJjw7QQpSvUqFxWxQDlQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/pDSJjw7QQpSvUqFxWxQDlQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (pDSJjw7QQpSvUqFxWxQDlQ)</a>.</p>\n\n<h2>More information about Scala case class <code>unapply</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala case class <code>unapply</code>.</p>\n\n<div class=\"skb-focus\"><p>\nWe have seen previously how, with <code>case class</code>, you can extract the component of it and match specific values. Have you ever wondered how it was built ? If yes, today is your lucky day ! If not, then you are going to learn it anyway.\n</p>\n\n<p>\nThe answer is the special method <code>unapply</code>. Similarly to <code>apply</code>, <code>unapply</code> has specific use case and behavior.\n</p>\n\n<p>\n<code>unapply</code> allows you to extract parts of &#8220;something&#8221; in the context of a <i>pattern matching</i>.\n</p>\n<p>\nThe syntax can be very confusing. Let&#8217;s look at it in details. Everything that needs to be replace for your specific use case is in between <code>[   ]</code>.\n</p>\n<p>Declaration:</p>\n<pre>\nobject [PATTERN_MATCHING_NAME] {\n    def unapply(input: [INPUT_TYPE]): Option[[OUTPUT_TYPE]] = {\n         // to match, must return:\n         Some([output_value])\n         // to 'pass'\n         None\n    }\n}\n</pre>\n<p>We are going to see the notion of &#8216;pass&#8217; in a later SKB</p>\n\n<p>How it is used:</p>\n<pre>\nval input: [INPUT_TYPE] = ???\n\ninput match {\n    case [PATTERN_MATCHING_NAME]([OUTPUT_TYPE]) => ???\n}\n</pre>\n\n<p>\nWhat is confusing is when <code>[OUTPUT_TYPE]</code> is a tuple. Because in the <code>unapply</code> definition, it will be written something like <code>(Int, String)</code> but in the usage, in the pattern matching, it will be written <code>PATTERN_MATCHING_TYPE(a: Int, b: String)</code> and NOT <code>PATTERN_MATCHING_TYPE(a : (Int, String))</code>. \n</p>\n\n<p>\nThis syntax works for every pattern matching, which means it also works in <code>map</code>, <code>flatMap</code> and all.\n</p>\n\n<p>\nYou might imagine other possible use case for <code>unapply</code> and you are right. In our example, we only reproduced what the <code>case class</code> was doing but we can do much more.  We are going to see more advanced usage of <code>unapply</code> in upcoming SKBs.\n</p>\n\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala case class <code>unapply</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-conversion/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1802\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1802\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1802\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1802\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1802\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Scala case class unapply &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Scala case class unapply here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1802\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1802\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1802\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1802\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1802\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "pDSJjw7QQpSvUqFxWxQDlQ",
    "prevUrl": "implicit-conversion",
    "nextUrl": "challenge-1",
    "mainInfoBox": "<p>After so many SKBs, you pretty much are an expert !</p>\n<p>So, let’s dive into a more advanced concept.</p>\n<p>And particularly, about one more features of the <code>case class</code> related on how pattern matching works.</p>",
    "detailedInfoBox": "<p>\nWe have seen previously how, with <code>case class</code>, you can extract the component of it and match specific values. Have you ever wondered how it was built ? If yes, today is your lucky day ! If not, then you are going to learn it anyway.\n</p>\n\n<p>\nThe answer is the special method <code>unapply</code>. Similarly to <code>apply</code>, <code>unapply</code> has specific use case and behavior.\n</p>\n\n<p>\n<code>unapply</code> allows you to extract parts of “something” in the context of a <i>pattern matching</i>.\n</p>\n<p>\nThe syntax can be very confusing. Let’s look at it in details. Everything that needs to be replace for your specific use case is in between <code>[   ]</code>.\n</p>\n<p>Declaration:</p>\n<pre>object [PATTERN_MATCHING_NAME] {\n    def unapply(input: [INPUT_TYPE]): Option[[OUTPUT_TYPE]] = {\n         // to match, must return:\n         Some([output_value])\n         // to 'pass'\n         None\n    }\n}\n</pre>\n<p>We are going to see the notion of ‘pass’ in a later SKB</p>\n\n<p>How it is used:</p>\n<pre>val input: [INPUT_TYPE] = ???\n\ninput match {\n    case [PATTERN_MATCHING_NAME]([OUTPUT_TYPE]) =&gt; ???\n}\n</pre>\n\n<p>\nWhat is confusing is when <code>[OUTPUT_TYPE]</code> is a tuple. Because in the <code>unapply</code> definition, it will be written something like <code>(Int, String)</code> but in the usage, in the pattern matching, it will be written <code>PATTERN_MATCHING_TYPE(a: Int, b: String)</code> and NOT <code>PATTERN_MATCHING_TYPE(a : (Int, String))</code>. \n</p>\n\n<p>\nThis syntax works for every pattern matching, which means it also works in <code>map</code>, <code>flatMap</code> and all.\n</p>\n\n<p>\nYou might imagine other possible use case for <code>unapply</code> and you are right. In our example, we only reproduced what the <code>case class</code> was doing but we can do much more.  We are going to see more advanced usage of <code>unapply</code> in upcoming SKBs.\n</p>\n\n"
  },
  {
    "id": 1825,
    "date": "2020-11-23T09:00:23",
    "date_gmt": "2020-11-23T17:00:23",
    "modified": "2021-04-04T11:15:14",
    "modified_gmt": "2021-04-04T19:15:14",
    "slug": "challenge-1",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-challenge-1/",
    "title": " Scala Challenge 1",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-2lKOUh\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Challenge 1.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Challenge 1 !</p>\n\n<div class=\"skb-focus\"><p>\nToday will be a practice challenge ! I had this idea in the corner of my mind for a while, but today is the day.\n</p>\n\n<p>\nWe have been learning a lot together in those past months. It is time to now apply everything we practiced so far in a little challenge exercise. You will have to implement things yourself and fix the code.\n</p>\n\n<p>\nIf you have trouble, feel free to jump in the Discord server to get help.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/xYbhCpOyRGCalWW4CgA6Iw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/xYbhCpOyRGCalWW4CgA6Iw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (xYbhCpOyRGCalWW4CgA6Iw)</a>.</p>\n\n<h2>More information about Scala Challenge 1</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Challenge 1.</p>\n\n<div class=\"skb-focus\"><p>\nHow was it ?! Did you manage to solve all the problems ? \n</p>\n\n<p>\nWhat tools did we use to solve this challenge ? \n</p>\n\n<ul>\n<li>Math, for the rounding and totals</li>\n<li><code>trait</code> and <code>abstract class</code> for the <code>display</code> and <code>Item</code></li>\n<li><code>Case class</code></li>\n<li><code>Object</code></li>\n<li><code>copy</code></li>\n<li>And some fun with text interpolation to display a beautiful receipt.</li>\n</ul>\n\n<p>\nI hope that was fun. This is the first time, so please let me know if you have any feedback. Was it too easy ? Was it too hard ?\n</p>\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Challenge 1.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-case-class-unapply/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1825\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1825\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1825\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1825\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1825\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Challenge 1 &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Challenge 1 here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1825\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1825\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1825\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1825\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1825\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "xYbhCpOyRGCalWW4CgA6Iw",
    "prevUrl": "case-class-unapply",
    "nextUrl": "list-zip",
    "mainInfoBox": "<p>\nToday will be a practice challenge ! I had this idea in the corner of my mind for a while, but today is the day.\n</p>\n\n<p>\nWe have been learning a lot together in those past months. It is time to now apply everything we practiced so far in a little challenge exercise. You will have to implement things yourself and fix the code.\n</p>\n\n<p>\nIf you have trouble, feel free to jump in the Discord server to get help.\n</p>",
    "detailedInfoBox": "<p>\nHow was it ?! Did you manage to solve all the problems ? \n</p>\n\n<p>\nWhat tools did we use to solve this challenge ? \n</p>\n\n<ul>\n<li>Math, for the rounding and totals</li>\n<li><code>trait</code> and <code>abstract class</code> for the <code>display</code> and <code>Item</code></li>\n<li><code>Case class</code></li>\n<li><code>Object</code></li>\n<li><code>copy</code></li>\n<li>And some fun with text interpolation to display a beautiful receipt.</li>\n</ul>\n\n<p>\nI hope that was fun. This is the first time, so please let me know if you have any feedback. Was it too easy ? Was it too hard ?\n</p>\n"
  },
  {
    "id": 1835,
    "date": "2020-11-25T09:01:50",
    "date_gmt": "2020-11-25T17:01:50",
    "modified": "2020-11-27T09:12:32",
    "modified_gmt": "2020-11-27T17:12:32",
    "slug": "list-zip",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-list-zip/",
    "title": " Scala List zip",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1ptDGj\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala List <code>zip</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala List <code>zip</code> !</p>\n\n<div class=\"skb-focus\"><p>\nI just realized we forgot to talk about <code>zip</code>.\n</p>\n\n<p>Today should be an easy one.</p>\n\n<p>Don&#8217;t forget, you can use <code>Range</code> to create List more easily.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/lMLBr2JBQZGtHCaAoZnlRg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/lMLBr2JBQZGtHCaAoZnlRg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (lMLBr2JBQZGtHCaAoZnlRg)</a>.</p>\n\n<h2>More information about Scala List <code>zip</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala List <code>zip</code>.</p>\n\n<div class=\"skb-focus\"><p>\nEasy ?\n</p>\n<p>\n<code>zip</code> allows you to combine two list into one. The syntax is\n</p>\n<pre>\nList[A].zip(List[B]) => List[(A, B)]\n</pre>\n<p>\nIt will return a list with both type as a <code>tuple</code>\n</p>\n\n<p>\nI also introduce a little new function: <code>swap</code>. It is a function available for <code>Tuple[A, B]</code>. It allows to flip a <code>tuple(a, b)</code> into a <code>tuple(b, a)</code>.\n</p>\n\n<p>Extra exercise:</p>\n<p>\nWhat happen if you zip several times in a row ? \n</p>\n<p>\nTry out: <code>l1.zip(l2).zip(l3).zip(l4)</code>\n</p>\n<p>\nAnd then try to combine it all with\n<code>.map{ case ??? => }</code>\n</p>\n<p>\nWhat will be the case pattern here ?\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala List <code>zip</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-challenge-1/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1835\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1835\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1835\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1835\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1835\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala List zip &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala List zip here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1835\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1835\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1835\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1835\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1835\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "lMLBr2JBQZGtHCaAoZnlRg",
    "prevUrl": "challenge-1",
    "nextUrl": "_-placeholder",
    "mainInfoBox": "<p>\nI just realized we forgot to talk about <code>zip</code>.\n</p>\n\n<p>Today should be an easy one.</p>\n\n<p>Don’t forget, you can use <code>Range</code> to create List more easily.</p>",
    "detailedInfoBox": "<p>\nEasy ?\n</p>\n<p>\n<code>zip</code> allows you to combine two list into one. The syntax is\n</p>\n<pre>List[A].zip(List[B]) =&gt; List[(A, B)]\n</pre>\n<p>\nIt will return a list with both type as a <code>tuple</code>\n</p>\n\n<p>\nI also introduce a little new function: <code>swap</code>. It is a function available for <code>Tuple[A, B]</code>. It allows to flip a <code>tuple(a, b)</code> into a <code>tuple(b, a)</code>.\n</p>\n\n<p>Extra exercise:</p>\n<p>\nWhat happen if you zip several times in a row ? \n</p>\n<p>\nTry out: <code>l1.zip(l2).zip(l3).zip(l4)</code>\n</p>\n<p>\nAnd then try to combine it all with\n<code>.map{ case ??? =&gt; }</code>\n</p>\n<p>\nWhat will be the case pattern here ?\n</p>"
  },
  {
    "id": 1829,
    "date": "2020-11-27T09:01:59",
    "date_gmt": "2020-11-27T17:01:59",
    "modified": "2020-11-30T09:05:06",
    "modified_gmt": "2020-11-30T17:05:06",
    "slug": "_-placeholder",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-_-placeholder/",
    "title": " Scala _ placeholder",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1oDBsD\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>_</code> placeholder.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>_</code> placeholder !</p>\n\n<div class=\"skb-focus\"><p>Today we are leveling up !</p>\n\n<p>Introducing several use cases for the mysterious <code>_</code>. I consider all those use cases to fall under the &#8220;<i>Placeholder</i>&#8221; category but the technical terms can be more granular. In the extra explanation, after the exercise, I will put a link with more in detailed description if you want to dive deeper.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/y3LB3ugXQKOR4VhY3aaotA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/y3LB3ugXQKOR4VhY3aaotA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (y3LB3ugXQKOR4VhY3aaotA)</a>.</p>\n\n<h2>More information about Scala <code>_</code> placeholder</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>_</code> placeholder.</p>\n\n<div class=\"skb-focus\"><p>\nSorry it was a lengthy exercise !\n</p>\n<p>\nThe first use case is related to <i>partial function</i>. It allows you to put a placeholder where an argument of a function would be to create a new function that take as argument the missing argument(s).\n</p>\n<p>\nYou can omit more than one argument and the input of the new function will be those omitted arguments.\n</p>\n\n<p>\nThe second use case is during transformations or chained operation such as <code>map</code>, <code>flatMap</code>, <code>filter</code>, etc&#8230; \n</p>\n\n<p>\nNow, when you see something like <code>a => a ...</code>, you know you can replace it with <code>_</code>.\n</p>\n<p>\nAs a side note, in IntelliJ, you can put your caret on the variable ( the variable name before the <code>=></code> ), press <i>ALT+ENTER</i> and you should be seeing something like <i>&#8220;Convert parameter to underscore section&#8221;</i>. That will replace the variable by <code>_</code> for you.\n</p>\n\n<p>\nThe third and last example under the category <i>Placeholder</i> is when you are computing accumulations. Using function such as <code>foldLeft</code> or <code>reduce</code>. Explaining why sometime you have to use <code>a._1 + a._2</code> and sometime <code>_ + _</code> is beyond this lesson. But now you know what it means when you read things like <code>.reduce(_*_)</code> : it is simply <code>.product</code>.\n</p>\n\n<p>There are a lot more use case for <code>_</code> that falls under other categories and we are going to see them in later SKBs.</p>\n\n<p>If you want to know more, feel free to check out this <a href=\"https://stackoverflow.com/questions/8000903/what-are-all-the-uses-of-an-underscore-in-scala\" target=\"_blank\">Stackoverflow answer</a>.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>_</code> placeholder.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-list-zip/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1829\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1829\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1829\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1829\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1829\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala _ placeholder &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala _ placeholder here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1829\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1829\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1829\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1829\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1829\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "y3LB3ugXQKOR4VhY3aaotA",
    "prevUrl": "list-zip",
    "nextUrl": "implicit-proof",
    "mainInfoBox": "<p>Today we are leveling up !</p>\n\n<p>Introducing several use cases for the mysterious <code>_</code>. I consider all those use cases to fall under the “<i>Placeholder</i>” category but the technical terms can be more granular. In the extra explanation, after the exercise, I will put a link with more in detailed description if you want to dive deeper.</p>",
    "detailedInfoBox": "<p>\nSorry it was a lengthy exercise !\n</p>\n<p>\nThe first use case is related to <i>partial function</i>. It allows you to put a placeholder where an argument of a function would be to create a new function that take as argument the missing argument(s).\n</p>\n<p>\nYou can omit more than one argument and the input of the new function will be those omitted arguments.\n</p>\n\n<p>\nThe second use case is during transformations or chained operation such as <code>map</code>, <code>flatMap</code>, <code>filter</code>, etc… \n</p>\n\n<p>\nNow, when you see something like <code>a =&gt; a ...</code>, you know you can replace it with <code>_</code>.\n</p>\n<p>\nAs a side note, in IntelliJ, you can put your caret on the variable ( the variable name before the <code>=&gt;</code> ), press <i>ALT+ENTER</i> and you should be seeing something like <i>“Convert parameter to underscore section”</i>. That will replace the variable by <code>_</code> for you.\n</p>\n\n<p>\nThe third and last example under the category <i>Placeholder</i> is when you are computing accumulations. Using function such as <code>foldLeft</code> or <code>reduce</code>. Explaining why sometime you have to use <code>a._1 + a._2</code> and sometime <code>_ + _</code> is beyond this lesson. But now you know what it means when you read things like <code>.reduce(_*_)</code> : it is simply <code>.product</code>.\n</p>\n\n<p>There are a lot more use case for <code>_</code> that falls under other categories and we are going to see them in later SKBs.</p>\n\n<p>If you want to know more, feel free to check out this <a href=\"https://stackoverflow.com/questions/8000903/what-are-all-the-uses-of-an-underscore-in-scala\" target=\"_blank\">Stackoverflow answer</a>.\n</p>"
  },
  {
    "id": 1850,
    "date": "2020-11-30T09:00:00",
    "date_gmt": "2020-11-30T17:00:00",
    "modified": "2020-12-02T09:11:33",
    "modified_gmt": "2020-12-02T17:11:33",
    "slug": "implicit-proof",
    "status": "publish",
    "link": "https://leobenkel.com/2020/11/skb-scala-implicit-proof/",
    "title": " Scala implicit proof",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1OrX08\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala implicit proof.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala implicit proof !</p>\n\n<div class=\"skb-focus\"><p>\nToday diving deeper into making a friend out of the compiler.\n</p>\n<p>\nWe are going to learn on how to guarantee that a generic type follow specific rules. We are going to use <i>implicit proof</i>.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/rPQxPMehSye8cwfa4VU9zg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/rPQxPMehSye8cwfa4VU9zg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (rPQxPMehSye8cwfa4VU9zg)</a>.</p>\n\n<h2>More information about Scala implicit proof</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala implicit proof.</p>\n\n<div class=\"skb-focus\"><p>\nHopefully this was not too hard. If you have any questions, please come ask them on the Discord server.\n</p>\n\n<p>\nThe first way to prove that a generic type <code>A</code> is of type <code>T</code>, we can do the following:\n</p>\n\n<pre>\ndef name[A: T](arguments...): RETURN_TYPE = ???\n</pre>\n\n<p>\nThis syntax will block compilation if we use the method with a type that cannot be proven to be of type <code>T</code> or made of type <code>T</code> with conversions.\n</p>\n\n<p>\nYou will often see this being used with <code>A : TypeTag: ClassTag</code> but we are going to look into those Scala standard types an other time in a dedicated episode.\n</p>\n\n<p>\nIn our example, you can see that we define our proofs in <code>ValidFoos</code> using the syntax:\n</p>\n\n<pre>\nimplicit val name: PROOF_TYPE[TYPE_NEEDING_PROOF] = ???\n</pre>\n\n<p>\nOur example is of course a bit silly but there are production use cases that would need those structures. For instance if you have complex data types that share underlying <code>trait</code>. But we are going to see more advance use case right now, when we actually use the proof.\n</p>\n\n<p>\nIn the second example, not only we are requiring a proof, but we are not using the <code>[A: T]</code> syntax, we are using the syntax that expose the proof so we can use it:\n</p>\n\n<pre>\ndef name[A](arguments...)(implicit proof_name: PROOF_TYPE[A]): RETURN_TYPE = ???\n</pre>\n\n<p>\nWritten this way, we can actually use the proof and do things with it. \n</p>\n\n<p>\nIn this case, we want the proof that the input is some kind of number, we do not want to write one function for <code>Int</code>, one for <code>Double</code>, one for <code>Long</code>, etc&#8230; That would be very tedious. So we need a way to target all numbers. In Scala, we can prove that a TYPE is a number when there a <code>Numeric[A]</code> proof. \n</p>\n\n<p>\nOnce we acquire the proof, we can use <code>num</code> to perform operations. For instance, we simply perform a sum here.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala implicit proof.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-_-placeholder/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1850\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1850\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1850\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1850\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1850\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala implicit proof &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala implicit proof here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1850\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1850\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1850\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1850\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1850\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "rPQxPMehSye8cwfa4VU9zg",
    "prevUrl": "_-placeholder",
    "nextUrl": "unapply-magic",
    "mainInfoBox": "<p>\nToday diving deeper into making a friend out of the compiler.\n</p>\n<p>\nWe are going to learn on how to guarantee that a generic type follow specific rules. We are going to use <i>implicit proof</i>.\n</p>",
    "detailedInfoBox": "<p>\nHopefully this was not too hard. If you have any questions, please come ask them on the Discord server.\n</p>\n\n<p>\nThe first way to prove that a generic type <code>A</code> is of type <code>T</code>, we can do the following:\n</p>\n\n<pre>def name[A: T](arguments...): RETURN_TYPE = ???\n</pre>\n\n<p>\nThis syntax will block compilation if we use the method with a type that cannot be proven to be of type <code>T</code> or made of type <code>T</code> with conversions.\n</p>\n\n<p>\nYou will often see this being used with <code>A : TypeTag: ClassTag</code> but we are going to look into those Scala standard types an other time in a dedicated episode.\n</p>\n\n<p>\nIn our example, you can see that we define our proofs in <code>ValidFoos</code> using the syntax:\n</p>\n\n<pre>implicit val name: PROOF_TYPE[TYPE_NEEDING_PROOF] = ???\n</pre>\n\n<p>\nOur example is of course a bit silly but there are production use cases that would need those structures. For instance if you have complex data types that share underlying <code>trait</code>. But we are going to see more advance use case right now, when we actually use the proof.\n</p>\n\n<p>\nIn the second example, not only we are requiring a proof, but we are not using the <code>[A: T]</code> syntax, we are using the syntax that expose the proof so we can use it:\n</p>\n\n<pre>def name[A](arguments...)(implicit proof_name: PROOF_TYPE[A]): RETURN_TYPE = ???\n</pre>\n\n<p>\nWritten this way, we can actually use the proof and do things with it. \n</p>\n\n<p>\nIn this case, we want the proof that the input is some kind of number, we do not want to write one function for <code>Int</code>, one for <code>Double</code>, one for <code>Long</code>, etc… That would be very tedious. So we need a way to target all numbers. In Scala, we can prove that a TYPE is a number when there a <code>Numeric[A]</code> proof. \n</p>\n\n<p>\nOnce we acquire the proof, we can use <code>num</code> to perform operations. For instance, we simply perform a sum here.\n</p>"
  },
  {
    "id": 1863,
    "date": "2020-12-02T09:00:24",
    "date_gmt": "2020-12-02T17:00:24",
    "modified": "2021-04-11T05:00:12",
    "modified_gmt": "2021-04-11T13:00:12",
    "slug": "unapply-magic",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-unapply-magic/",
    "title": " Scala unapply magic",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z16XqQw\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala unapply magic.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala unapply magic !</p>\n\n<div class=\"skb-focus\"><p>\nI personally love the <code>unapply</code> method. Not many people talk about it but I think it has really cool features.\n</p>\n\n<p>\nA somewhat long exercise today but it will give you a great tool to use in the future !\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/3dUlzSLfRMqUFGOQ1Ms8vA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/3dUlzSLfRMqUFGOQ1Ms8vA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (3dUlzSLfRMqUFGOQ1Ms8vA)</a>.</p>\n\n<h2>More information about Scala unapply magic</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala unapply magic.</p>\n\n<div class=\"skb-focus\"><p>\nLet&#8217;s recap quickly what <code>unapply</code> was used for as far as we know for the moment.\n</p>\n\n<p>In the previous episodes, we saw <code>unapply</code> in the context of <code>case class</code> to be able to extract the fields.\n</p>\n<p>\nThe syntax is:</p>\n\n<pre>\nobject HANDLER {\n    def unapply(input: INPUT_TYPE): Option[OUTPUT_TYPE] = {\n         // when return value is \"some\", it is outputed\n         // when return value is \"none\", this match is pass\n    }\n}\n</pre>\n\n<p>And how it is used:</p>\n<pre>\ninput match {\n     case HANDLER(OUTPUT_TYPE) => ....\n}\n</pre>\n\n<p>\nAs you can see, the input of <code>unapply</code> is what enter the pattern matching structure and the output is an <code>Option</code> of what is being returned from the match.\n</p>\n\n<p>\nSeveral interesting things that you can do with <code>unapply</code>:\n</p>\n<ul>\n<li>Customize the input</li>\n<li>Customize the output</li>\n<li>Customize the name</li>\n<li>And the most interesting part to me, you can yield the match to the next matching condition. </li>\n</ul>\n\n<p>\nThe last bullet to me is the most important one.\nIt is a great tool to contain responsibilities. The <code>Option</code> output allows you to return something when you know what to do with it or return <code>None</code> when you don&#8217;t know and the higher abstraction level will make decisions on how to handle the situation. It is really powerful to me because that allows you to &#8220;fail&#8221; without failing. And try several things before giving up. Let me go into details.\n</p>\n\n<pre>\n    val output: OUTPUT_TYPE = input match {\n        case Attempt1(result) => result\n        case Attempt2(result) => result\n        case Attempt3(result) => result\n        case n => // when all else has failed\n    }\n</pre>\n\n<p>\nThis pattern that I use often in parser for examples, allows you to add new handler very easily. Also, each parser should be very simple, returning <code>None</code> when nothing can be done without having to care for the rest.\n</p>\n\n<p>\nOne thing to be very aware/careful about is the order, because in this structure, the first match that works will be the results. If one of your matcher is more specific than an other one, lift it up first in the order of test or a larger condition might yield true before it.\n</p>\n\n<p>If you want to talk more about one of my favorite Scala method: <code>unapply</code>, jump on the Discord channel!</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala unapply magic.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/11/skb-scala-implicit-proof/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1863\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1863\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1863\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1863\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1863\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala unapply magic &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala unapply magic here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1863\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1863\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1863\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1863\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1863\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "3dUlzSLfRMqUFGOQ1Ms8vA",
    "prevUrl": "implicit-proof",
    "nextUrl": "multiple-inheritance",
    "mainInfoBox": "<p>\nI personally love the <code>unapply</code> method. Not many people talk about it but I think it has really cool features.\n</p>\n\n<p>\nA somewhat long exercise today but it will give you a great tool to use in the future !\n</p>",
    "detailedInfoBox": "<p>\nLet’s recap quickly what <code>unapply</code> was used for as far as we know for the moment.\n</p>\n\n<p>In the previous episodes, we saw <code>unapply</code> in the context of <code>case class</code> to be able to extract the fields.\n</p>\n<p>\nThe syntax is:</p>\n\n<pre>object HANDLER {\n    def unapply(input: INPUT_TYPE): Option[OUTPUT_TYPE] = {\n         // when return value is \"some\", it is outputed\n         // when return value is \"none\", this match is pass\n    }\n}\n</pre>\n\n<p>And how it is used:</p>\n<pre>input match {\n     case HANDLER(OUTPUT_TYPE) =&gt; ....\n}\n</pre>\n\n<p>\nAs you can see, the input of <code>unapply</code> is what enter the pattern matching structure and the output is an <code>Option</code> of what is being returned from the match.\n</p>\n\n<p>\nSeveral interesting things that you can do with <code>unapply</code>:\n</p>\n<ul>\n<li>Customize the input</li>\n<li>Customize the output</li>\n<li>Customize the name</li>\n<li>And the most interesting part to me, you can yield the match to the next matching condition. </li>\n</ul>\n\n<p>\nThe last bullet to me is the most important one.\nIt is a great tool to contain responsibilities. The <code>Option</code> output allows you to return something when you know what to do with it or return <code>None</code> when you don’t know and the higher abstraction level will make decisions on how to handle the situation. It is really powerful to me because that allows you to “fail” without failing. And try several things before giving up. Let me go into details.\n</p>\n\n<pre>    val output: OUTPUT_TYPE = input match {\n        case Attempt1(result) =&gt; result\n        case Attempt2(result) =&gt; result\n        case Attempt3(result) =&gt; result\n        case n =&gt; // when all else has failed\n    }\n</pre>\n\n<p>\nThis pattern that I use often in parser for examples, allows you to add new handler very easily. Also, each parser should be very simple, returning <code>None</code> when nothing can be done without having to care for the rest.\n</p>\n\n<p>\nOne thing to be very aware/careful about is the order, because in this structure, the first match that works will be the results. If one of your matcher is more specific than an other one, lift it up first in the order of test or a larger condition might yield true before it.\n</p>\n\n<p>If you want to talk more about one of my favorite Scala method: <code>unapply</code>, jump on the Discord channel!</p>"
  },
  {
    "id": 1870,
    "date": "2020-12-04T09:01:30",
    "date_gmt": "2020-12-04T17:01:30",
    "modified": "2020-12-07T09:06:01",
    "modified_gmt": "2020-12-07T17:06:01",
    "slug": "multiple-inheritance",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/",
    "title": " Scala multiple inheritance",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-pzgC3\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala multiple inheritance.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala multiple inheritance !</p>\n\n<div class=\"skb-focus\"><p>\nWe talked about inheritance in the past.\n</p>\n<p>\nLet&#8217;s see how we can combine several <code>trait</code> together and what are the limitations.\n</p>\n\n<p>\nFor this episode, finish the exercise once and then go back and follow the extra instructions in the comments if you have time to learn more.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/QpCO0GjsTrKBo4wGdIpEJA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/QpCO0GjsTrKBo4wGdIpEJA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (QpCO0GjsTrKBo4wGdIpEJA)</a>.</p>\n\n<h2>More information about Scala multiple inheritance</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala multiple inheritance.</p>\n\n<div class=\"skb-focus\"><p>\nThe keyword of the day is <code>with</code>.\n</p>\n\n<p>\nThis article is for scala 2.x, things are changing in scala 3.x but the concepts are still the same. At the time of this article, Scastie, which I use to render the exercise do not support Scala 3 yet so we are going to revisit those concept and the new syntaxes in the future.\n</p>\n\n<p>\nWe saw <code>extends</code> already, when we want to add one more <code>trait</code> to the mix, we use <code>with</code> for the one after the first one.\n</p>\n\n<pre>\n[case] class MyClass(args....) extends TRAIT1 with TRAIT2 with TRAIT3 .... {\n\n}\n</pre>\n\n<p>\nIf you have followed the extra instructions in the comments after you were done with the exercise, you noticed that <code>trait</code> and <code>abstract class</code> behave differently. \n</p>\n\n<p>\nYou have to put the <code>abstract class</code> in first position and you can only have one present. It can seems weird but in practice, it is rarely an issue since you can convert the <code>abstract class</code> to a <code>trait</code> very easily. You would just move the input arguments to the body of the <code>class</code> and make them methods with <code>def</code>.\n</p>\n\n<p>\nYou might have also noticed that you can mix two or more <code>trait</code> that have the same method(s) defined as long as they are identical. But it stops working if they have methods with the same name but different types.\n</p>\n\n<p>\nAnd the last bits to keep in mind is when using defined type, you cannot use that has a shortcut to create larger <code>trait</code>. But you can use it in the position of type. Let me explain:\n</p>\n\n<pre>\ntype FOO = A with B\n\n// this do no work:\ntrait BAR extends FOO\n\n// this works:\ntrait BAR extends A with B\n\n// this works:\nval f: FOO = ???\n</pre>\n\n<p>If you want to create bundle of <code>trait</code>, you can simply make a new <code>trait</code></p>\n\n<pre>\ntrait FOO extends A with B\n\ntrait BAR extends FOO\n\nval f: FOO = new BAR {}\n</pre>\n\n<p>And that is it for mixing several <code>trait</code> and handle multiple inheritance. As always, if you have questions or feedbacks, jump on the Discord server ! See you there.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala multiple inheritance.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-unapply-magic/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1870\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1870\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1870\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1870\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1870\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala multiple inheritance &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala multiple inheritance here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1870\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1870\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1870\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1870\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1870\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "QpCO0GjsTrKBo4wGdIpEJA",
    "prevUrl": "unapply-magic",
    "nextUrl": "constraint-inheritance",
    "mainInfoBox": "<p>\nWe talked about inheritance in the past.\n</p>\n<p>\nLet’s see how we can combine several <code>trait</code> together and what are the limitations.\n</p>\n\n<p>\nFor this episode, finish the exercise once and then go back and follow the extra instructions in the comments if you have time to learn more.\n</p>",
    "detailedInfoBox": "<p>\nThe keyword of the day is <code>with</code>.\n</p>\n\n<p>\nThis article is for scala 2.x, things are changing in scala 3.x but the concepts are still the same. At the time of this article, Scastie, which I use to render the exercise do not support Scala 3 yet so we are going to revisit those concept and the new syntaxes in the future.\n</p>\n\n<p>\nWe saw <code>extends</code> already, when we want to add one more <code>trait</code> to the mix, we use <code>with</code> for the one after the first one.\n</p>\n\n<pre>[case] class MyClass(args....) extends TRAIT1 with TRAIT2 with TRAIT3 .... {\n\n}\n</pre>\n\n<p>\nIf you have followed the extra instructions in the comments after you were done with the exercise, you noticed that <code>trait</code> and <code>abstract class</code> behave differently. \n</p>\n\n<p>\nYou have to put the <code>abstract class</code> in first position and you can only have one present. It can seems weird but in practice, it is rarely an issue since you can convert the <code>abstract class</code> to a <code>trait</code> very easily. You would just move the input arguments to the body of the <code>class</code> and make them methods with <code>def</code>.\n</p>\n\n<p>\nYou might have also noticed that you can mix two or more <code>trait</code> that have the same method(s) defined as long as they are identical. But it stops working if they have methods with the same name but different types.\n</p>\n\n<p>\nAnd the last bits to keep in mind is when using defined type, you cannot use that has a shortcut to create larger <code>trait</code>. But you can use it in the position of type. Let me explain:\n</p>\n\n<pre>type FOO = A with B\n\n// this do no work:\ntrait BAR extends FOO\n\n// this works:\ntrait BAR extends A with B\n\n// this works:\nval f: FOO = ???\n</pre>\n\n<p>If you want to create bundle of <code>trait</code>, you can simply make a new <code>trait</code></p>\n\n<pre>trait FOO extends A with B\n\ntrait BAR extends FOO\n\nval f: FOO = new BAR {}\n</pre>\n\n<p>And that is it for mixing several <code>trait</code> and handle multiple inheritance. As always, if you have questions or feedbacks, jump on the Discord server ! See you there.</p>"
  },
  {
    "id": 1880,
    "date": "2020-12-07T09:01:22",
    "date_gmt": "2020-12-07T17:01:22",
    "modified": "2020-12-09T09:14:20",
    "modified_gmt": "2020-12-09T17:14:20",
    "slug": "constraint-inheritance",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/",
    "title": " Scala constraint inheritance",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-MpQFK\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala constraint inheritance.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala constraint inheritance !</p>\n\n<div class=\"skb-focus\"><p>\nMore inheritance today, more specifically how to get help from the compiler in complex inheritance patterns\n</p>\n\n<p>\nThe example here is simple to illustrate the feature but imagine what it would look like in a much more complex project.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/1rovwDJFTRaHBS7e2c2ofg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/1rovwDJFTRaHBS7e2c2ofg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (1rovwDJFTRaHBS7e2c2ofg)</a>.</p>\n\n<h2>More information about Scala constraint inheritance</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala constraint inheritance.</p>\n\n<div class=\"skb-focus\"><p>\nWe saw multiple inheritance last time, but it can quickly become messy if a lot of your <code>trait</code> are depending on each other.\n</p>\n\n<p>\nIt would be great if we could ask the compiler to remind us that two or more trait needs to always be together for the code to work well.\n</p>\n\n<p>\nWell, guess what? It is !\n</p>\n\n<p>\nIt is possible in Scala to create a <code>trait</code> that cannot be used if not mixed in with a selection of other <code>trait</code>. Let&#8217;s look at the syntax:\n</p>\n\n<pre>\ntrait MyTrait { name: DependencyTrait => \n    ...\n}\n</pre>\n\n<p>\nThe <code>name</code> can be any variable name if you need to disambiguates two or more trait that might have same function names. It can also be <code>this</code> if you do not need an extra handler for it.  \n</p>\n\n<p>\nAnd <code>DependencyTrait</code> can be one <code>trait</code> that is required to create <code>MyTrait</code> but it can more than one if you replace it by <code>trait1 with trait2 with trait3 ...</code>. \n</p>\n\n<p>\nIn case of failure to comply those constraint, the compiler will give you the following error:\n</p>\n\n<pre>\nillegal inheritance;\n self-type [Class you are working on] does not conform to [MyTrait]'s selftype [MyTrait] with [DependencyTrait]\n</pre>\n\n<p>\nYou should have seen this error message in the exercise and you now know how to fix it. \n</p>\n\n<p>\nYou also now know how to befriend the compiler and making sure you don&#8217;t forget a critical <code>trait</code> in the mix for your classes.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala constraint inheritance.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-multiple-inheritance/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1880\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1880\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1880\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1880\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1880\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala constraint inheritance &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala constraint inheritance here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1880\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1880\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1880\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1880\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1880\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "1rovwDJFTRaHBS7e2c2ofg",
    "prevUrl": "multiple-inheritance",
    "nextUrl": "higher-kind",
    "mainInfoBox": "<p>\nMore inheritance today, more specifically how to get help from the compiler in complex inheritance patterns\n</p>\n\n<p>\nThe example here is simple to illustrate the feature but imagine what it would look like in a much more complex project.\n</p>",
    "detailedInfoBox": "<p>\nWe saw multiple inheritance last time, but it can quickly become messy if a lot of your <code>trait</code> are depending on each other.\n</p>\n\n<p>\nIt would be great if we could ask the compiler to remind us that two or more trait needs to always be together for the code to work well.\n</p>\n\n<p>\nWell, guess what? It is !\n</p>\n\n<p>\nIt is possible in Scala to create a <code>trait</code> that cannot be used if not mixed in with a selection of other <code>trait</code>. Let’s look at the syntax:\n</p>\n\n<pre>trait MyTrait { name: DependencyTrait =&gt; \n    ...\n}\n</pre>\n\n<p>\nThe <code>name</code> can be any variable name if you need to disambiguates two or more trait that might have same function names. It can also be <code>this</code> if you do not need an extra handler for it.  \n</p>\n\n<p>\nAnd <code>DependencyTrait</code> can be one <code>trait</code> that is required to create <code>MyTrait</code> but it can more than one if you replace it by <code>trait1 with trait2 with trait3 ...</code>. \n</p>\n\n<p>\nIn case of failure to comply those constraint, the compiler will give you the following error:\n</p>\n\n<pre>illegal inheritance;\n self-type [Class you are working on] does not conform to [MyTrait]'s selftype [MyTrait] with [DependencyTrait]\n</pre>\n\n<p>\nYou should have seen this error message in the exercise and you now know how to fix it. \n</p>\n\n<p>\nYou also now know how to befriend the compiler and making sure you don’t forget a critical <code>trait</code> in the mix for your classes.\n</p>"
  },
  {
    "id": 1883,
    "date": "2020-12-09T09:00:01",
    "date_gmt": "2020-12-09T17:00:01",
    "modified": "2020-12-11T09:14:38",
    "modified_gmt": "2020-12-11T17:14:38",
    "slug": "higher-kind",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-higher-kind/",
    "title": " Scala higher kind",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z10bvqX\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala higher kind.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala higher kind !</p>\n\n<div class=\"skb-focus\"><p>\nLet&#8217;s dive more into object oriented programming ideas but with a dash of functional programming.\n</p>\n\n<p>\nThe idea today is to go a bit further with <code>trait</code> and be able to describe behaviors of <i>higher kinds</i>. It is just a fancy terms to describe type that accept type as parameter, such as <code>List[A]</code>, the <code>A</code> being the type accepted as parameter.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/fC18HjQmT6Gbh5mTox5zbw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/fC18HjQmT6Gbh5mTox5zbw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (fC18HjQmT6Gbh5mTox5zbw)</a>.</p>\n\n<h2>More information about Scala higher kind</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala higher kind.</p>\n\n<div class=\"skb-focus\"><p>\nTo create a generic trait that &#8220;target&#8221; type that take type(s) as parameter, the syntax is:\n</p>\n\n<pre>\ntrait MyTrait[F[_]] {}\n</pre>\n\n<p>\nThe <code>F[_]</code> means that we are expecting a type <code>F</code> that take one type parameter as argument, the <code>_</code>.\n</p>\n\n<p>\nNote that it is possible to target a type that takes two types as input with the following syntax: <code>F[_, _]</code>. You can imagine that it is possible to target type with more than two following the same logic.\n</p>\n\n<p>\nWhen you use a parameterized type you do something like <code>List[Int]</code> so if you want to use the type itself you simply has to do <code>Trait[List]</code>, not need to add anything after the <code>List</code>.\n</p>\n\n<p>\nYou also noticed that you can create your own type and it will behave the same way. Look at <code>CounterT</code> in our example. It takes one type as parameter so it can be used with our <code>trait</code>.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala higher kind.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-constraint-inheritance/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1883\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1883\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1883\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1883\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1883\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala higher kind &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala higher kind here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1883\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1883\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1883\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1883\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1883\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "fC18HjQmT6Gbh5mTox5zbw",
    "prevUrl": "constraint-inheritance",
    "nextUrl": "_-wildcard",
    "mainInfoBox": "<p>\nLet’s dive more into object oriented programming ideas but with a dash of functional programming.\n</p>\n\n<p>\nThe idea today is to go a bit further with <code>trait</code> and be able to describe behaviors of <i>higher kinds</i>. It is just a fancy terms to describe type that accept type as parameter, such as <code>List[A]</code>, the <code>A</code> being the type accepted as parameter.\n</p>",
    "detailedInfoBox": "<p>\nTo create a generic trait that “target” type that take type(s) as parameter, the syntax is:\n</p>\n\n<pre>trait MyTrait[F[_]] {}\n</pre>\n\n<p>\nThe <code>F[_]</code> means that we are expecting a type <code>F</code> that take one type parameter as argument, the <code>_</code>.\n</p>\n\n<p>\nNote that it is possible to target a type that takes two types as input with the following syntax: <code>F[_, _]</code>. You can imagine that it is possible to target type with more than two following the same logic.\n</p>\n\n<p>\nWhen you use a parameterized type you do something like <code>List[Int]</code> so if you want to use the type itself you simply has to do <code>Trait[List]</code>, not need to add anything after the <code>List</code>.\n</p>\n\n<p>\nYou also noticed that you can create your own type and it will behave the same way. Look at <code>CounterT</code> in our example. It takes one type as parameter so it can be used with our <code>trait</code>.\n</p>"
  },
  {
    "id": 1888,
    "date": "2020-12-11T09:00:41",
    "date_gmt": "2020-12-11T17:00:41",
    "modified": "2020-12-14T09:54:35",
    "modified_gmt": "2020-12-14T17:54:35",
    "slug": "_-wildcard",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-_-wildcard/",
    "title": " Scala _ wildcard",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1t7a66\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>_</code> wildcard.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>_</code> wildcard !</p>\n\n<div class=\"skb-focus\"><p>\nFew episodes ago we talked about <code>_</code> in a context of use cases that I described as <i>placeholder</i>. \n</p>\n\n<p>\nNow, let&#8217;s see the other big group of use cases that is the <i>wildcard</i> or the <i>I don&#8217;t care</i> category.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/VJneetExT8uloX6bomOZ7g.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/VJneetExT8uloX6bomOZ7g\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (VJneetExT8uloX6bomOZ7g)</a>.</p>\n\n<h2>More information about Scala <code>_</code> wildcard</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>_</code> wildcard.</p>\n\n<div class=\"skb-focus\"><p>Let&#8217;s review each of the use cases one by one</p>\n\n<p>\nThe first one is one that we have seen before in pattern matching, it is the <i>default</i> or <i>wildcard</i> match. Which is the match that match everything. Most of the time, it is used to catch errors or implement a default behavior when all the other matches have failed. Usually, you might want to put a value name instead of <code>_</code> so that you can include what has failed in your error message.\n</p>\n\n<p>\nThe second one is to match some kind of structure, in this case, match on any <code>Some</code> and we don&#8217;t care what is inside. As always, you could replace the <code>_</code> by some value name to be able to do something with what is inside, but if you don&#8217;t care, you can use the <code>_</code> syntax.\n</p>\n\n<p>\nNext one is related to the previous one, but with case class this time. We talked about <code>unapply</code> before. And so you might understand that the example with <code>Some(_)</code> is actually the same as the <code>CaseClass(_, _, ...)</code>. It basically, ignore some of the return elements of the <code>unapply</code> method.\n</p>\n\n<p>\nNumber 4 is related to imports. It allows you to import everything under a specific package path. Same idea, if <i>you do not care</i> to include specific things, you include it all.\n</p>\n\n<p>\nNumber 5 , even tho it doesn&#8217;t look like it, is also related. In fact, <code>val</code> behave like a <i>pattern matching</i> structure. We are going to see this more into details in a following episode.\n</p>\n\n<p>\nNumber 6 is similar as well, but the <code>val</code> is hidden inside the <i>for-comprehension</i>. It allows you to handle method that return <code>Unit</code> and still be able to include it inside the structure.\n</p>\n\n<p>\nNumber 7 is similar, it allows you to create behavior that ignores the input. \n</p>\n\n<p>\nAs you can see, <code>_</code> can be used when you want to not care about a particular output. \n</p>\n\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>_</code> wildcard.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-higher-kind/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1888\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1888\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1888\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1888\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1888\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala _ wildcard &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala _ wildcard here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1888\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1888\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1888\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1888\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1888\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "VJneetExT8uloX6bomOZ7g",
    "prevUrl": "higher-kind",
    "nextUrl": "val-pattern-matching",
    "mainInfoBox": "<p>\nFew episodes ago we talked about <code>_</code> in a context of use cases that I described as <i>placeholder</i>. \n</p>\n\n<p>\nNow, let’s see the other big group of use cases that is the <i>wildcard</i> or the <i>I don’t care</i> category.\n</p>",
    "detailedInfoBox": "<p>Let’s review each of the use cases one by one</p>\n\n<p>\nThe first one is one that we have seen before in pattern matching, it is the <i>default</i> or <i>wildcard</i> match. Which is the match that match everything. Most of the time, it is used to catch errors or implement a default behavior when all the other matches have failed. Usually, you might want to put a value name instead of <code>_</code> so that you can include what has failed in your error message.\n</p>\n\n<p>\nThe second one is to match some kind of structure, in this case, match on any <code>Some</code> and we don’t care what is inside. As always, you could replace the <code>_</code> by some value name to be able to do something with what is inside, but if you don’t care, you can use the <code>_</code> syntax.\n</p>\n\n<p>\nNext one is related to the previous one, but with case class this time. We talked about <code>unapply</code> before. And so you might understand that the example with <code>Some(_)</code> is actually the same as the <code>CaseClass(_, _, ...)</code>. It basically, ignore some of the return elements of the <code>unapply</code> method.\n</p>\n\n<p>\nNumber 4 is related to imports. It allows you to import everything under a specific package path. Same idea, if <i>you do not care</i> to include specific things, you include it all.\n</p>\n\n<p>\nNumber 5 , even tho it doesn’t look like it, is also related. In fact, <code>val</code> behave like a <i>pattern matching</i> structure. We are going to see this more into details in a following episode.\n</p>\n\n<p>\nNumber 6 is similar as well, but the <code>val</code> is hidden inside the <i>for-comprehension</i>. It allows you to handle method that return <code>Unit</code> and still be able to include it inside the structure.\n</p>\n\n<p>\nNumber 7 is similar, it allows you to create behavior that ignores the input. \n</p>\n\n<p>\nAs you can see, <code>_</code> can be used when you want to not care about a particular output. \n</p>\n\n"
  },
  {
    "id": 1903,
    "date": "2020-12-14T09:00:25",
    "date_gmt": "2020-12-14T17:00:25",
    "modified": "2020-12-16T09:04:17",
    "modified_gmt": "2020-12-16T17:04:17",
    "slug": "val-pattern-matching",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/",
    "title": " Scala val pattern matching",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1wLBvX\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala val pattern matching.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala val pattern matching !</p>\n\n<div class=\"skb-focus\"><p>\nLet&#8217;s see how <i>pattern matching</i> appear in other aspect of the language.\n</p>\n<p>\nMore specifically, how it shows up in <code>val</code> assignment.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/aLWSbioJT0ir0qACbt6yCg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/aLWSbioJT0ir0qACbt6yCg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (aLWSbioJT0ir0qACbt6yCg)</a>.</p>\n\n<h2>More information about Scala val pattern matching</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala val pattern matching.</p>\n\n<div class=\"skb-focus\"><p>\nUsing <i>pattern matching</i> in conjunction with <code>val</code> can be very useful especially when working with <code>Tuple</code> or other structures such as <code>Option</code>. \n</p>\n<p>\nIt allows you to extract only the part you need and leave behind the rest using the <code>_</code> symbol. \n</p>\n<p>\nHowever, you have to be extremely careful using <i>pattern matching</i> with <code>val</code> because you don&#8217;t have a <code>case _ =></code> to catch the not matched cases. Which means, you are going to trigger exception at runtime. \n</p>\n<p>\nIn the last example, if you give anything different than <code>abc</code>, the code is going to fail. But this failure happens at runtime, not at compile time which can be extremely bad and dangerous.\n</p>\n<p>\nUse this carefully !\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala val pattern matching.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-_-wildcard/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1903\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1903\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1903\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1903\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1903\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala val pattern matching &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala val pattern matching here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1903\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1903\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1903\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1903\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1903\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "aLWSbioJT0ir0qACbt6yCg",
    "prevUrl": "_-wildcard",
    "nextUrl": "star-parameter",
    "mainInfoBox": "<p>\nLet’s see how <i>pattern matching</i> appear in other aspect of the language.\n</p>\n<p>\nMore specifically, how it shows up in <code>val</code> assignment.\n</p>",
    "detailedInfoBox": "<p>\nUsing <i>pattern matching</i> in conjunction with <code>val</code> can be very useful especially when working with <code>Tuple</code> or other structures such as <code>Option</code>. \n</p>\n<p>\nIt allows you to extract only the part you need and leave behind the rest using the <code>_</code> symbol. \n</p>\n<p>\nHowever, you have to be extremely careful using <i>pattern matching</i> with <code>val</code> because you don’t have a <code>case _ =&gt;</code> to catch the not matched cases. Which means, you are going to trigger exception at runtime. \n</p>\n<p>\nIn the last example, if you give anything different than <code>abc</code>, the code is going to fail. But this failure happens at runtime, not at compile time which can be extremely bad and dangerous.\n</p>\n<p>\nUse this carefully !\n</p>"
  },
  {
    "id": 1906,
    "date": "2020-12-16T09:00:54",
    "date_gmt": "2020-12-16T17:00:54",
    "modified": "2021-04-21T04:39:08",
    "modified_gmt": "2021-04-21T12:39:08",
    "slug": "star-parameter",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-star-parameter/",
    "title": " Scala *-parameter",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z2mhY37\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala *-parameter.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala *-parameter !</p>\n\n<div class=\"skb-focus\"><p>\nLet&#8217;s see how we can pass an array as argument smoothly.\n</p>\n\n<p>\nWe are going to see an example when this syntax shine the most: nested Node creation.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/uhVWCfgeREWEbRKVUX639w.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/uhVWCfgeREWEbRKVUX639w\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (uhVWCfgeREWEbRKVUX639w)</a>.</p>\n\n<h2>More information about Scala *-parameter</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala *-parameter.</p>\n\n<div class=\"skb-focus\"><p>\nDo you experience the pain of writing <code>Node(List(Node(List(...</code>. Not pleasant huh ?!\n</p>\n<p>\nBut never again you will have to do this now that you know about <code>*</code> !\n</p>\n<p>Let&#8217;s see how it works:</p>\n<p>\nIn a function, you can have <code>TYPE*</code> to take all the last parameters given to the function and turn it into an array. If you place the argument of the method with <code>TYPE*</code> <strong>not</strong> as last argument you will get an exception <code>*-parameter must come last</code>.\n</p>\n<p>\nAfter doing this, instead of doing <code>foo(List(a,b,c))</code> you are able to do <code>foo(a,b,c)</code>. And inside the body of the method you can use the parameter the same as before.\n</p>\n\n<p>\nBut now, let&#8217;s say in some part of your code you do have a <code>List</code> already but you have changed the method, you want to convert the <code>List</code> into a <code>*-parameter</code>. \n</p>\n<p>\nThe weird syntax to do this is: <code>foo(list:_*)</code>. It means you are casting (changing the type) , with <code>:</code> into <code>_</code> which is a wildcard, so anything, in this case, the anything being the type <code>A</code> of the list which should be the same as the input type of the method <code>A*</code>, and finally <code>*</code>.\n</p>\n<p>\nIf we look at the type only we are doing this:\n</p>\n<pre>\nlist      : _*\nList[A] : A*\n</pre>\n<p>\nIf I didn&#8217;t explain well, please feel free to reach out on the Discord server so we can improve the content of this article together.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala *-parameter.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-val-pattern-matching\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1906\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1906\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1906\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1906\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1906\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala array as function argument &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala array as function argument here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1906\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1906\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1906\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1906\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1906\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "uhVWCfgeREWEbRKVUX639w",
    "prevUrl": "val-pattern-matching",
    "nextUrl": "self-referred-type",
    "mainInfoBox": "<p>\nLet’s see how we can pass an array as argument smoothly.\n</p>\n\n<p>\nWe are going to see an example when this syntax shine the most: nested Node creation.\n</p>",
    "detailedInfoBox": "<p>\nDo you experience the pain of writing <code>Node(List(Node(List(...</code>. Not pleasant huh ?!\n</p>\n<p>\nBut never again you will have to do this now that you know about <code>*</code> !\n</p>\n<p>Let’s see how it works:</p>\n<p>\nIn a function, you can have <code>TYPE*</code> to take all the last parameters given to the function and turn it into an array. If you place the argument of the method with <code>TYPE*</code> <strong>not</strong> as last argument you will get an exception <code>*-parameter must come last</code>.\n</p>\n<p>\nAfter doing this, instead of doing <code>foo(List(a,b,c))</code> you are able to do <code>foo(a,b,c)</code>. And inside the body of the method you can use the parameter the same as before.\n</p>\n\n<p>\nBut now, let’s say in some part of your code you do have a <code>List</code> already but you have changed the method, you want to convert the <code>List</code> into a <code>*-parameter</code>. \n</p>\n<p>\nThe weird syntax to do this is: <code>foo(list:_*)</code>. It means you are casting (changing the type) , with <code>:</code> into <code>_</code> which is a wildcard, so anything, in this case, the anything being the type <code>A</code> of the list which should be the same as the input type of the method <code>A*</code>, and finally <code>*</code>.\n</p>\n<p>\nIf we look at the type only we are doing this:\n</p>\n<pre>list      : _*\nList[A] : A*\n</pre>\n<p>\nIf I didn’t explain well, please feel free to reach out on the Discord server so we can improve the content of this article together.\n</p>"
  },
  {
    "id": 1910,
    "date": "2020-12-18T09:00:02",
    "date_gmt": "2020-12-18T17:00:02",
    "modified": "2020-12-21T09:12:36",
    "modified_gmt": "2020-12-21T17:12:36",
    "slug": "self-referred-type",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-self-referred-type/",
    "title": " Scala self-referred type",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-25HyMl\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala self-referred type.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala self-referred type !</p>\n\n<div class=\"skb-focus\"><p>\nLet&#8217;s dive more into generic type and self-referred type. \n</p>\n<p>\nThe use case is how to use the children Type in the Parent trait safely.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/9fDW3IfPTParnRzONDXkkA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/9fDW3IfPTParnRzONDXkkA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (9fDW3IfPTParnRzONDXkkA)</a>.</p>\n\n<h2>More information about Scala self-referred type</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala self-referred type.</p>\n\n<div class=\"skb-focus\"><p>\nSorry for the long exercise but I really wanted to show step by step how we end up with this solution based on the problem encountered.\n</p>\n<p>\nIn the first example, without doing anything, we are able to change the output type to the child type when we override the method but not the input type.\n</p>\n<p>\nIn the second example we now have information about the child type from inside the parent trait but there are not guarantee that <code>A</code> is the right children, it could be any children.\n</p>\n<p>\nWith the final solution, <code>A</code> must be in used in the child type which guarantee that it is the child.\n</p>\n<p>\nLet&#8217;s summaries the syntax:\n</p>\n<pre>\ntrait Name[A <: Name[A]] { this: A => \n}\n</pre>\n<p>\nHopefully that will help you make the compiler your friend and catch more mistake at compile time rather than at runtime !\n</p>\n\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala self-referred type.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-star-parameter\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1910\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1910\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1910\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1910\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1910\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala self-referred type &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala self-referred type here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1910\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1910\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1910\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1910\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1910\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "9fDW3IfPTParnRzONDXkkA",
    "prevUrl": "star-parameter",
    "nextUrl": "option-pattern-matching",
    "mainInfoBox": "<p>\nLet’s dive more into generic type and self-referred type. \n</p>\n<p>\nThe use case is how to use the children Type in the Parent trait safely.\n</p>",
    "detailedInfoBox": "<p>\nSorry for the long exercise but I really wanted to show step by step how we end up with this solution based on the problem encountered.\n</p>\n<p>\nIn the first example, without doing anything, we are able to change the output type to the child type when we override the method but not the input type.\n</p>\n<p>\nIn the second example we now have information about the child type from inside the parent trait but there are not guarantee that <code>A</code> is the right children, it could be any children.\n</p>\n<p>\nWith the final solution, <code>A</code> must be in used in the child type which guarantee that it is the child.\n</p>\n<p>\nLet’s summaries the syntax:\n</p>\n<pre>trait Name[A &lt;: Name[A]] { this: A =&gt; \n}\n</pre>\n<p>\nHopefully that will help you make the compiler your friend and catch more mistake at compile time rather than at runtime !\n</p>\n\n"
  },
  {
    "id": 1917,
    "date": "2020-12-21T09:02:35",
    "date_gmt": "2020-12-21T17:02:35",
    "modified": "2020-12-23T09:06:20",
    "modified_gmt": "2020-12-23T17:06:20",
    "slug": "option-pattern-matching",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/",
    "title": " Scala Option pattern matching",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1cR3rU\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>Option</code> <i>pattern matching</i>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>Option</code> <i>pattern matching</i> !</p>\n\n<div class=\"skb-focus\"><p>Easy one today.</p>\n<p>We are going to see how the concepts of <code>unapply</code>, <i>pattern matching</i> and <code>Option</code> work together.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/PDLP0wHGQKqN5oS2yt6R4g.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/PDLP0wHGQKqN5oS2yt6R4g\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (PDLP0wHGQKqN5oS2yt6R4g)</a>.</p>\n\n<h2>More information about Scala <code>Option</code> <i>pattern matching</i></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>Option</code> <i>pattern matching</i>.</p>\n\n<div class=\"skb-focus\"><p>\nUnder the hood <code>Option</code> is a <i>sealed trait</i> that we saw before. It has two implementations: <code>Some</code> and <code>None</code>. \n</p>\n\n<p>\nThe <code>Some</code> has an <code>unapply</code> method that let you extract the value out. You can see it being used in <code>case Some(n) =></code>. The <code>None</code> do not since it defines the case when the <code>Option</code> is empty.\n</p>\n\n<p>\nOn the <i>pattern matching</i> sides of things, because it is a <i>sealed trait</i>, the compiler knows how many possible cases there are: 2. If you remove the <code>Some</code> case or the <code>None</code> one, the compiler will give you a warning related to the completeness of the match cases. \n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>Option</code> <i>pattern matching</i>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-self-referred-type/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1917\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1917\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1917\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1917\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1917\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Option pattern matching &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Option pattern matching here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1917\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1917\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1917\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1917\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1917\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "PDLP0wHGQKqN5oS2yt6R4g",
    "prevUrl": "self-referred-type",
    "nextUrl": "list-pattern-matching",
    "mainInfoBox": "<p>Easy one today.</p>\n<p>We are going to see how the concepts of <code>unapply</code>, <i>pattern matching</i> and <code>Option</code> work together.</p>",
    "detailedInfoBox": "<p>\nUnder the hood <code>Option</code> is a <i>sealed trait</i> that we saw before. It has two implementations: <code>Some</code> and <code>None</code>. \n</p>\n\n<p>\nThe <code>Some</code> has an <code>unapply</code> method that let you extract the value out. You can see it being used in <code>case Some(n) =&gt;</code>. The <code>None</code> do not since it defines the case when the <code>Option</code> is empty.\n</p>\n\n<p>\nOn the <i>pattern matching</i> sides of things, because it is a <i>sealed trait</i>, the compiler knows how many possible cases there are: 2. If you remove the <code>Some</code> case or the <code>None</code> one, the compiler will give you a warning related to the completeness of the match cases. \n</p>"
  },
  {
    "id": 1919,
    "date": "2020-12-23T09:02:30",
    "date_gmt": "2020-12-23T17:02:30",
    "modified": "2020-12-25T09:19:04",
    "modified_gmt": "2020-12-25T17:19:04",
    "slug": "list-pattern-matching",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/",
    "title": " Scala List pattern matching",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z29nQLK\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>List</code> <i>pattern matching</i>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>List</code> <i>pattern matching</i> !</p>\n\n<div class=\"skb-focus\"><p>\nLet&#8217;s see how <code>List</code> is used in the context of <i>pattern matching</i>.\n</p>\n\n<p>\nThis is a pre-requirement to talk about recursion later on.\n</p>\n</div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/i7RNOt1qStGNACeNygqEwQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/i7RNOt1qStGNACeNygqEwQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (i7RNOt1qStGNACeNygqEwQ)</a>.</p>\n\n<h2>More information about Scala <code>List</code> <i>pattern matching</i></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>List</code> <i>pattern matching</i>.</p>\n\n<div class=\"skb-focus\"><p>\nFirst we have to talk about how <code>List</code> can be created and modified.\n</p>\n<p>\nEverything is immutable which is why we always create a new <code>List</code>, we don&#8217;t update the previous one.\n</p>\n<p>\nA few new operator today:\n</p>\n\n<ul>\n\n<li><code>Nil</code>: not really an operator, but it describe an empty list, it is a short cut for <code>List.empty[A]</code></li>\n\n<li><code>::</code>: to add an element at the start of a <code>List</code>, which is why to create a <code>List</code> using this operator, we have to finish by <code>Nil</code>. We actually prepend element to an empty list.</li>\n\n<li><code>+:</code>: to prepend an element to the <code>List</code>. Same as <code>::</code>.</li>\n\n<li><code>:+</code>: to append an element at the end of a <code>List</code></li>\n</ul>\n\n<p>\nIf know that <code>+:</code> and <code>:+</code> can be confusing but you simply have to remember that <code>:</code> is towards the <code>List</code>.\n</p>\n\n<p><i>Pattern matching</i> now</p>\n\n<p>Using the <code>::</code> we can extract head element(s) from the </code>List</code>.</p>\n\n<p>\nFor instance, we can <code>case head :: tail => </code> to extract the first element of the list. We can also do <code>case a :: b :: tail =></code> to extract the two first element of the list. We can continue with as many as we would like.\n</p>\n\n<p>\nSimilarly to all the other <i>pattern matching</i> construct, we can add conditions to all those patterns. Either by adding <code>if</code> at the end or by replacing a value name by a literal value, for instance: <code>case 1 :: tail =></code> will match on any list that start by a <code>1</code>. And <code>case 1 :: Nil => </code> will match on a list containing one element being <code>1</code>.\n</p>\n\n</div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>List</code> <i>pattern matching</i>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-option-pattern-matching/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1919\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1919\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1919\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1919\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1919\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala List pattern matching &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala List pattern matching here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1919\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1919\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1919\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1919\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1919\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "i7RNOt1qStGNACeNygqEwQ",
    "prevUrl": "option-pattern-matching",
    "nextUrl": "list-of-option-flatten",
    "mainInfoBox": "<p>\nLet’s see how <code>List</code> is used in the context of <i>pattern matching</i>.\n</p>\n\n<p>\nThis is a pre-requirement to talk about recursion later on.\n</p>\n",
    "detailedInfoBox": "<p>\nFirst we have to talk about how <code>List</code> can be created and modified.\n</p>\n<p>\nEverything is immutable which is why we always create a new <code>List</code>, we don’t update the previous one.\n</p>\n<p>\nA few new operator today:\n</p>\n\n<ul>\n\n<li><code>Nil</code>: not really an operator, but it describe an empty list, it is a short cut for <code>List.empty[A]</code></li>\n\n<li><code>::</code>: to add an element at the start of a <code>List</code>, which is why to create a <code>List</code> using this operator, we have to finish by <code>Nil</code>. We actually prepend element to an empty list.</li>\n\n<li><code>+:</code>: to prepend an element to the <code>List</code>. Same as <code>::</code>.</li>\n\n<li><code>:+</code>: to append an element at the end of a <code>List</code></li>\n</ul>\n\n<p>\nIf know that <code>+:</code> and <code>:+</code> can be confusing but you simply have to remember that <code>:</code> is towards the <code>List</code>.\n</p>\n\n<p><i>Pattern matching</i> now</p>\n\n<p>Using the <code>::</code> we can extract head element(s) from the List.</p>\n\n<p>\nFor instance, we can <code>case head :: tail =&gt; </code> to extract the first element of the list. We can also do <code>case a :: b :: tail =&gt;</code> to extract the two first element of the list. We can continue with as many as we would like.\n</p>\n\n<p>\nSimilarly to all the other <i>pattern matching</i> construct, we can add conditions to all those patterns. Either by adding <code>if</code> at the end or by replacing a value name by a literal value, for instance: <code>case 1 :: tail =&gt;</code> will match on any list that start by a <code>1</code>. And <code>case 1 :: Nil =&gt; </code> will match on a list containing one element being <code>1</code>.\n</p>\n\n"
  },
  {
    "id": 1921,
    "date": "2020-12-25T09:02:53",
    "date_gmt": "2020-12-25T17:02:53",
    "modified": "2021-01-10T04:35:20",
    "modified_gmt": "2021-01-10T12:35:20",
    "slug": "list-of-option-flatten",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/",
    "title": " Scala List of Option flatten",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-meoRB\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <code>List</code> of <code>Option</code> <code>flatten</code>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <code>List</code> of <code>Option</code> <code>flatten</code> !</p>\n\n<div class=\"skb-focus\"><p>\nRecently ( as on December 2020 ), we have talked about List of Option on the Discord server so I thought we would dive in deeper here.\n</p>\n\n<p>\nThis specific <code>flatten</code> operation is not well documented but extremely useful in a lost of use cases. Today we are simply going to see how it works and later on we are going to see in what cases it can be useful.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/WU5TCyfhTLKRPcvMccymZg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/WU5TCyfhTLKRPcvMccymZg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (WU5TCyfhTLKRPcvMccymZg)</a>.</p>\n\n<h2>More information about Scala <code>List</code> of <code>Option</code> <code>flatten</code></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <code>List</code> of <code>Option</code> <code>flatten</code>.</p>\n\n<div class=\"skb-focus\"><p>\nWe saw it before but <code>flatMap(f)</code> is the same as <code>.map(f).flatten</code>. The <code>flatten</code> operation will combine two layers of container ( monad ) into one. So it will combine <code>List[List[A]]</code> into <code>List[A]</code> or <code>Option[Option[A]]</code> into <code>Option[A]</code> for instance.\n</p>\n\n<p>\nIn this episode, we are looking at what happen in the specific case of <code>List[Option[A]]</code> when it is flatten. \n</p>\n\n<p>\n<code>List[Option[A]]</code> will be turned into <code>List[A]</code> by the <code>flatten</code> operation.\n</p>\n\n<p>\nIt might be interesting to note that <code>Option[List[A]].flatten</code> triggers an error.\n</p>\n\n<p>\nBut this answer raise a new question, what happen to the <code>Option</code> elements in the list !?\n</p>\n\n<p>\nRemember that <code>Option</code> has two possible case. The first one is <code>Some</code> when there is an element, those will simply be opened up and they will be transformed from <code>Some[A]</code> to <code>A</code>. For the second case, <code>None</code>, they will be removed from the list. So you will end up with potentially less element that you started with in the list after performing the <code>flatten</code> operation. \n</p>\n\n<p>\nIt would be equivalent of doing this:\n</p>\n\n<pre>\nval l: List[Option[A]] = ???\n\nval r: List[A] = l \n  .filter{\n    case Some(_) => true\n    case None => false\n  }\n  .map {\n     case Some(n) => n\n     case None => throw new Exception(\"Cannot happen\")\n  }\n</pre></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <code>List</code> of <code>Option</code> <code>flatten</code>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-list-pattern-matching/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1921\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1921\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1921\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1921\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1921\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala List of Option flatten &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala List of Option flatten here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1921\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1921\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1921\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1921\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1921\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "WU5TCyfhTLKRPcvMccymZg",
    "prevUrl": "list-pattern-matching",
    "nextUrl": "operators",
    "mainInfoBox": "<p>\nRecently ( as on December 2020 ), we have talked about List of Option on the Discord server so I thought we would dive in deeper here.\n</p>\n\n<p>\nThis specific <code>flatten</code> operation is not well documented but extremely useful in a lost of use cases. Today we are simply going to see how it works and later on we are going to see in what cases it can be useful.\n</p>",
    "detailedInfoBox": "<p>\nWe saw it before but <code>flatMap(f)</code> is the same as <code>.map(f).flatten</code>. The <code>flatten</code> operation will combine two layers of container ( monad ) into one. So it will combine <code>List[List[A]]</code> into <code>List[A]</code> or <code>Option[Option[A]]</code> into <code>Option[A]</code> for instance.\n</p>\n\n<p>\nIn this episode, we are looking at what happen in the specific case of <code>List[Option[A]]</code> when it is flatten. \n</p>\n\n<p>\n<code>List[Option[A]]</code> will be turned into <code>List[A]</code> by the <code>flatten</code> operation.\n</p>\n\n<p>\nIt might be interesting to note that <code>Option[List[A]].flatten</code> triggers an error.\n</p>\n\n<p>\nBut this answer raise a new question, what happen to the <code>Option</code> elements in the list !?\n</p>\n\n<p>\nRemember that <code>Option</code> has two possible case. The first one is <code>Some</code> when there is an element, those will simply be opened up and they will be transformed from <code>Some[A]</code> to <code>A</code>. For the second case, <code>None</code>, they will be removed from the list. So you will end up with potentially less element that you started with in the list after performing the <code>flatten</code> operation. \n</p>\n\n<p>\nIt would be equivalent of doing this:\n</p>\n\n<pre>val l: List[Option[A]] = ???\n\nval r: List[A] = l \n  .filter{\n    case Some(_) =&gt; true\n    case None =&gt; false\n  }\n  .map {\n     case Some(n) =&gt; n\n     case None =&gt; throw new Exception(\"Cannot happen\")\n  }\n</pre>"
  },
  {
    "id": 1926,
    "date": "2020-12-28T09:00:23",
    "date_gmt": "2020-12-28T17:00:23",
    "modified": "2020-12-30T09:10:06",
    "modified_gmt": "2020-12-30T17:10:06",
    "slug": "operators",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-operators/",
    "title": " Scala operators",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-2qoSWv\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala operators.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala operators !</p>\n\n<div class=\"skb-focus\"><p>\nHave you ever wondered how <code>!</code> and <code>+</code> operator works ?\n</p>\n<p>\nLet&#8217;s make your own !\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/i2ZSLmI0R7egM6vkvJqKug.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/i2ZSLmI0R7egM6vkvJqKug\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (i2ZSLmI0R7egM6vkvJqKug)</a>.</p>\n\n<h2>More information about Scala operators</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala operators.</p>\n\n<div class=\"skb-focus\"><p>\nLong exercise but I wanted to make sure to see several examples to get a good knowledge about Operators for you !\n</p>\n\n<p>\nThe first section (<code>{...}</code>) is about traditional, easy operator such as <code>+</code> and <code>*</code>. In Scala, you can use pretty much any characters to create a method name so it is not too hard at this point. Sorry for the math about complex numbers ! \n</p>\n\n<p>\nNext we see weirder ones with backslash <code>\\</code> and one famous one, the combine operator : <code>|+|</code>, present in many libraries such as <i>Cats</i>.\n</p>\n\n<p>\nAnd finally even weirder ones. Operator that goes <i>before</i> the caller ! Those are called <code>unary</code> and the syntax is : \n</p>\n\n<pre>\n\nclass MyClass(...) {\n   // ... other fields and methods ...\n    \n    def unary_[prefix_name] = ???\n\n   // ... more things ...\n}\n\nval a : MyClass = ???\n\n[prefix_name] a\n</pre>\n\n<p>\nIt is worth noting that only a selected list of characters and names are authorized for <code>unary</code> methods. For example, <code>+</code>, <code>*</code>, <code>~</code>, and <code>!</code> are allowed. You can find a lot of example of people using <code>unary</code> on <a href=\"https://github.com/search?l=Scala&#038;q=%22def+unary%22&#038;type=Code\" target=\"_blank\">GitHub</a>.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala operators.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-list-of-option-flatten/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1926\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1926\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1926\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1926\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1926\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala operators &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala operators here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1926\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1926\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1926\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1926\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1926\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-operators/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "i2ZSLmI0R7egM6vkvJqKug",
    "prevUrl": "list-of-option-flatten",
    "nextUrl": "literal-identifiers",
    "mainInfoBox": "<p>\nHave you ever wondered how <code>!</code> and <code>+</code> operator works ?\n</p>\n<p>\nLet’s make your own !\n</p>",
    "detailedInfoBox": "<p>\nLong exercise but I wanted to make sure to see several examples to get a good knowledge about Operators for you !\n</p>\n\n<p>\nThe first section (<code>{...}</code>) is about traditional, easy operator such as <code>+</code> and <code>*</code>. In Scala, you can use pretty much any characters to create a method name so it is not too hard at this point. Sorry for the math about complex numbers ! \n</p>\n\n<p>\nNext we see weirder ones with backslash <code>\\</code> and one famous one, the combine operator : <code>|+|</code>, present in many libraries such as <i>Cats</i>.\n</p>\n\n<p>\nAnd finally even weirder ones. Operator that goes <i>before</i> the caller ! Those are called <code>unary</code> and the syntax is : \n</p>\n\n<pre>\nclass MyClass(...) {\n   // ... other fields and methods ...\n    \n    def unary_[prefix_name] = ???\n\n   // ... more things ...\n}\n\nval a : MyClass = ???\n\n[prefix_name] a\n</pre>\n\n<p>\nIt is worth noting that only a selected list of characters and names are authorized for <code>unary</code> methods. For example, <code>+</code>, <code>*</code>, <code>~</code>, and <code>!</code> are allowed. You can find a lot of example of people using <code>unary</code> on <a href=\"https://github.com/search?l=Scala&amp;q=%22def+unary%22&amp;type=Code\" target=\"_blank\">GitHub</a>.\n</p>"
  },
  {
    "id": 1928,
    "date": "2020-12-30T09:03:03",
    "date_gmt": "2020-12-30T17:03:03",
    "modified": "2021-01-01T09:02:56",
    "modified_gmt": "2021-01-01T17:02:56",
    "slug": "literal-identifiers",
    "status": "publish",
    "link": "https://leobenkel.com/2020/12/skb-scala-literal-identifiers/",
    "title": " Scala literal identifiers",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1ySjTu\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala <i>literal identifiers</i>.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala <i>literal identifiers</i> !</p>\n\n<div class=\"skb-focus\"><p>Super short one today.</p>\n\n<p>But I think it is necessary to know in case you encounter it in the wild</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/PpMpUMxaSQyPHkYRKmbRIw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/PpMpUMxaSQyPHkYRKmbRIw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (PpMpUMxaSQyPHkYRKmbRIw)</a>.</p>\n\n<h2>More information about Scala <i>literal identifiers</i></h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala <i>literal identifiers</i>.</p>\n\n<div class=\"skb-focus\"><p>\nSo yes, super short today like I said. \n</p>\n\n<p>\nIt is possible in Scala to have weird value name that can be sentences. Or pretty much anything for that matter. You can even try to create a value named <code>\\n</code> and it works.\n</p>\n\n<p>\nThe syntax is straightforward, just have to start and end the name of the identifier by <code>`</code> backquote.\n</p>\n\n<p>It also works for field names in a <code>case class</code> for instance.</p>\n\n<p>\nOne use case where I have this used pretty often is with <i>giter8</i>. This is a system to create project template. You can learn more on <a href=\"https://github.com/foundweekends/giter8\" target=\"_blank\">their GitHub</a>. In those template, user can enter any input they want so i can be useful to keep the user input inside the <code>`</code> so the rest of the template do not break.\n</p>\n\n<p>\nAnother use case is to be able to use reserved keyword, for instance if you would like to name your value <code>type</code> that wouldn&#8217;t work, but you can name it <code>`type`</code>.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala <i>literal identifiers</i>.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-operators\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1928\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1928\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1928\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1928\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1928\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala literal identifiers &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala literal identifiers here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1928\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1928\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1928\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1928\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1928\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "PpMpUMxaSQyPHkYRKmbRIw",
    "prevUrl": "operators",
    "nextUrl": "extractor-pattern",
    "mainInfoBox": "<p>Super short one today.</p>\n\n<p>But I think it is necessary to know in case you encounter it in the wild</p>",
    "detailedInfoBox": "<p>\nSo yes, super short today like I said. \n</p>\n\n<p>\nIt is possible in Scala to have weird value name that can be sentences. Or pretty much anything for that matter. You can even try to create a value named <code>\\n</code> and it works.\n</p>\n\n<p>\nThe syntax is straightforward, just have to start and end the name of the identifier by <code>`</code> backquote.\n</p>\n\n<p>It also works for field names in a <code>case class</code> for instance.</p>\n\n<p>\nOne use case where I have this used pretty often is with <i>giter8</i>. This is a system to create project template. You can learn more on <a href=\"https://github.com/foundweekends/giter8\" target=\"_blank\">their GitHub</a>. In those template, user can enter any input they want so i can be useful to keep the user input inside the <code>`</code> so the rest of the template do not break.\n</p>\n\n<p>\nAnother use case is to be able to use reserved keyword, for instance if you would like to name your value <code>type</code> that wouldn’t work, but you can name it <code>`type`</code>.\n</p>"
  },
  {
    "id": 1931,
    "date": "2021-01-01T09:00:40",
    "date_gmt": "2021-01-01T17:00:40",
    "modified": "2021-05-16T03:57:36",
    "modified_gmt": "2021-05-16T11:57:36",
    "slug": "extractor-pattern",
    "status": "publish",
    "link": "https://leobenkel.com/2021/01/skb-scala-extractor-pattern/",
    "title": " Scala extractor pattern",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-ZDNCbY\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala extractor pattern.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala extractor pattern !</p>\n\n<div class=\"skb-focus\"><p>\nToday we are going to combine several things we know to learn about <i>extractor pattern</i>.\n</p>\n\n<p>\nIt might be a bit complicated but I am sure you are going to be fine !\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/m2wkxempSUqHNni7KEz1Zg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/m2wkxempSUqHNni7KEz1Zg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (m2wkxempSUqHNni7KEz1Zg)</a>.</p>\n\n<h2>More information about Scala extractor pattern</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala extractor pattern.</p>\n\n<div class=\"skb-focus\"><p>\nThe goal here is to be able to only keep the element of the <code>List</code> that are of a given type.\n</p>\n\n\n<p>\nWe start from a list of type A : <code>List[A]</code>. And we want to keep the element of type B, with B being the child class of A. We saw few exercise ago the syntax : <code>B <: A</code>. \n</p>\n\n<p>\nWe also saw the <code>implicit</code> proof using the syntax: <code>A : PROOF</code>. In this case we want <code>B</code> to be a <code>ClassTag</code> as well as being a child of <code>A</code>. Which is why we now have this syntax: <code>B <: A: ClassTag</code>.\n</p>\n\n<p>\nHave you tried removing the <code>ClassTag</code> ? You are seeing a <code>Warning</code> talking about <code>abstract type B is unchecked since it is eliminated by erasure</code>. We are going to dive deeper into this in another episode. But for now, you only need to know that to mitigate the \"type erasure\" problem, we need to introduce a proof to be <code>ClassTag</code>. \n</p>\n\n<p>\nNow that we have our extractor, we can filter down the <code>List[Animal]</code> to only keep the <code>Cat</code> or the <code>Dog</code> !\n</p>\n\n<p>\nI am sure you are going to need this pattern in one of your project one day ! Just let us know on the Discord server how that has been useful to you !\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala extractor pattern.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2020/12/skb-scala-literal-identifiers/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1931\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1931\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1931\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1931\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1931\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala extractor pattern &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala extractor pattern here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1931\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1931\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1931\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1931\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1931\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "m2wkxempSUqHNni7KEz1Zg",
    "prevUrl": "literal-identifiers",
    "nextUrl": "functor",
    "mainInfoBox": "<p>\nToday we are going to combine several things we know to learn about <i>extractor pattern</i>.\n</p>\n\n<p>\nIt might be a bit complicated but I am sure you are going to be fine !\n</p>",
    "detailedInfoBox": "<p>\nThe goal here is to be able to only keep the element of the <code>List</code> that are of a given type.\n</p>\n\n\n<p>\nWe start from a list of type A : <code>List[A]</code>. And we want to keep the element of type B, with B being the child class of A. We saw few exercise ago the syntax : <code>B &lt;: A</code>. \n</p>\n\n<p>\nWe also saw the <code>implicit</code> proof using the syntax: <code>A : PROOF</code>. In this case we want <code>B</code> to be a <code>ClassTag</code> as well as being a child of <code>A</code>. Which is why we now have this syntax: <code>B &lt;: A: ClassTag</code>.\n</p>\n\n<p>\nHave you tried removing the <code>ClassTag</code> ? You are seeing a <code>Warning</code> talking about <code>abstract type B is unchecked since it is eliminated by erasure</code>. We are going to dive deeper into this in another episode. But for now, you only need to know that to mitigate the \"type erasure\" problem, we need to introduce a proof to be <code>ClassTag</code>. \n</p>\n\n<p>\nNow that we have our extractor, we can filter down the <code>List[Animal]</code> to only keep the <code>Cat</code> or the <code>Dog</code> !\n</p>\n\n<p>\nI am sure you are going to need this pattern in one of your project one day ! Just let us know on the Discord server how that has been useful to you !\n</p>"
  },
  {
    "id": 1938,
    "date": "2021-01-04T09:00:29",
    "date_gmt": "2021-01-04T17:00:29",
    "modified": "2021-05-05T14:18:38",
    "modified_gmt": "2021-05-05T22:18:38",
    "slug": "functor",
    "status": "publish",
    "link": "https://leobenkel.com/2021/01/skb-scala-functor/",
    "title": " Scala Functor",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z15prQc\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Functor.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Functor !</p>\n\n<div class=\"skb-focus\"><p>\n<i>Functional Programming</i> today !\n</p>\n<p>\nAnd let&#8217;s start by the easiest one: <strong>Functor</strong>.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/lPfrjWhhQUew9oxzlD0nSw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/lPfrjWhhQUew9oxzlD0nSw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (lPfrjWhhQUew9oxzlD0nSw)</a>.</p>\n\n<h2>More information about Scala Functor</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Functor.</p>\n\n<div class=\"skb-focus\"><p>\nYou might have heard about <i>Monad</i>, <i>Monoid</i>, <i>Applicative</i>, etc&#8230; \n</p>\n<p>\nIn this episode, we are focusing on the <i>Functor</i>. \n</p>\n<p>\nThe formal definition for a <i>Functor</i> is a transformation from a category <code>A</code> to a category <code>B</code>. It is often represented by an arrow: <code>A -> B</code>.\n</p>\n\n<p>\nThis transformation, in Scala, is translated to the method <code>map</code> that we have seen a lot in the past.\n</p>\n\n<p>\nA <i>Functor</i> (<code>F</code>), in category theory, must follow several rules:\n</p>\n<ul>\n<li>All element of <code>A</code> must have a result in <code>B</code></li>\n<li>Identity:\n<ul>\n<li>\nIf we define <code>id</code>, the identity method: <code>id(a) == a</code>, \n</li>\n<li>\nthen <code>id(F) == F.map(id)</code>.\n</li>\n</ul></li>\n\n<li>Composition:\n<ul>\n<li>\nIf we define <code>f</code> and <code>g</code>, two methods, \n</li>\n<li>\nthen <code>F.map(f).map(g) == F.map( g(f(_)) )</code>.\n</li>\n</ul></li>\n\n</ul>\n\n<p>\nIn the following episode, we are going to learn more about the other component of the category theory ecosystem and functional programming overall. \n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Functor.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-extractor-pattern/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div><div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1938\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1938\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1938\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1938\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1938\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Functor &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Functor here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1938\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1938\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1938\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1938\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1938\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "lPfrjWhhQUew9oxzlD0nSw",
    "prevUrl": "extractor-pattern",
    "nextUrl": "foldable",
    "mainInfoBox": "<p>\n<i>Functional Programming</i> today !\n</p>\n<p>\nAnd let’s start by the easiest one: <strong>Functor</strong>.\n</p>",
    "detailedInfoBox": "<p>\nYou might have heard about <i>Monad</i>, <i>Monoid</i>, <i>Applicative</i>, etc… \n</p>\n<p>\nIn this episode, we are focusing on the <i>Functor</i>. \n</p>\n<p>\nThe formal definition for a <i>Functor</i> is a transformation from a category <code>A</code> to a category <code>B</code>. It is often represented by an arrow: <code>A -&gt; B</code>.\n</p>\n\n<p>\nThis transformation, in Scala, is translated to the method <code>map</code> that we have seen a lot in the past.\n</p>\n\n<p>\nA <i>Functor</i> (<code>F</code>), in category theory, must follow several rules:\n</p>\n<ul>\n<li>All element of <code>A</code> must have a result in <code>B</code></li>\n<li>Identity:\n<ul>\n<li>\nIf we define <code>id</code>, the identity method: <code>id(a) == a</code>, \n</li>\n<li>\nthen <code>id(F) == F.map(id)</code>.\n</li>\n</ul></li>\n\n<li>Composition:\n<ul>\n<li>\nIf we define <code>f</code> and <code>g</code>, two methods, \n</li>\n<li>\nthen <code>F.map(f).map(g) == F.map( g(f(_)) )</code>.\n</li>\n</ul></li>\n\n</ul>\n\n<p>\nIn the following episode, we are going to learn more about the other component of the category theory ecosystem and functional programming overall. \n</p>"
  },
  {
    "id": 1944,
    "date": "2021-01-06T09:00:48",
    "date_gmt": "2021-01-06T17:00:48",
    "modified": "2021-01-10T04:13:36",
    "modified_gmt": "2021-01-10T12:13:36",
    "slug": "foldable",
    "status": "publish",
    "link": "https://leobenkel.com/2021/01/skb-scala-foldable/",
    "title": " Scala Foldable",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Ze7r3l\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Foldable.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Foldable !</p>\n\n<div class=\"skb-focus\"><p>After learning about <i>Functor</i>, the next piece with no dependency is <i>Foldable</i>.</p>\n<p>Similarly to <i>Functor</i>, this concept is taken from Category Theory and used in Functional Programing.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/q7avzZbtSreqhyrrdrp1kA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/q7avzZbtSreqhyrrdrp1kA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (q7avzZbtSreqhyrrdrp1kA)</a>.</p>\n\n<h2>More information about Scala Foldable</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Foldable.</p>\n\n<div class=\"skb-focus\"><p>\nThe operation <i>fold</i> allows is an aggregation. It takes a starting element and combine it with the <i>Foldable</i> type following the recipe provided by the method <code>f</code>. \n</p>\n\n<p>\n<i>Fold</i> can the used to implement <code>reduce</code>. You should try it ! The difference with <code>reduce</code> is that the start element is either the identity of the operation provided in <code>f</code>, meaning an element that does not change the value, for instance empty string <code>\"\"</code> for the string concatenation operation or the <code>0</code> for the <code>+</code> operation in <code>Int</code> type. It is possible to implement a version of <code>reduce</code> where the start element is simply the first element to be combined in the <code>fold</code> if you have access to a function <code>head</code> for instance. You will have to handle cases when the <code>Foldable</code> provided is empty too. \n</p>\n\n<p>\nAs you can see <i>fold</i> implementation is relying on recursion. We talked about recursion in a previous episode.\n</p>\n\n<p>\nNow you have seen <code>Functor</code> and <code>Foldable</code> !\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Foldable.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-functor/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1944\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1944\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1944\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1944\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1944\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Foldable &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Foldable here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1944\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1944\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1944\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1944\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1944\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "q7avzZbtSreqhyrrdrp1kA",
    "prevUrl": "functor",
    "nextUrl": "applicative",
    "mainInfoBox": "<p>After learning about <i>Functor</i>, the next piece with no dependency is <i>Foldable</i>.</p>\n<p>Similarly to <i>Functor</i>, this concept is taken from Category Theory and used in Functional Programing.</p>",
    "detailedInfoBox": "<p>\nThe operation <i>fold</i> allows is an aggregation. It takes a starting element and combine it with the <i>Foldable</i> type following the recipe provided by the method <code>f</code>. \n</p>\n\n<p>\n<i>Fold</i> can the used to implement <code>reduce</code>. You should try it ! The difference with <code>reduce</code> is that the start element is either the identity of the operation provided in <code>f</code>, meaning an element that does not change the value, for instance empty string <code>\"\"</code> for the string concatenation operation or the <code>0</code> for the <code>+</code> operation in <code>Int</code> type. It is possible to implement a version of <code>reduce</code> where the start element is simply the first element to be combined in the <code>fold</code> if you have access to a function <code>head</code> for instance. You will have to handle cases when the <code>Foldable</code> provided is empty too. \n</p>\n\n<p>\nAs you can see <i>fold</i> implementation is relying on recursion. We talked about recursion in a previous episode.\n</p>\n\n<p>\nNow you have seen <code>Functor</code> and <code>Foldable</code> !\n</p>"
  },
  {
    "id": 1947,
    "date": "2021-01-08T09:00:11",
    "date_gmt": "2021-01-08T17:00:11",
    "modified": "2021-01-11T09:02:16",
    "modified_gmt": "2021-01-11T17:02:16",
    "slug": "applicative",
    "status": "publish",
    "link": "https://leobenkel.com/2021/01/skb-scala-applicative/",
    "title": " Scala Applicative",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-1A034Y\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Applicative.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Applicative !</p>\n\n<div class=\"skb-focus\"><p>\nLet&#8217;s enhance our <i>Functor</i> from few episodes ago !\n</p>\n\n<p>\nLet&#8217;s learn about <i>Applicative</i> which extends what a <i>Functor</i> can do.\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/Jmp5pWRLQxeXZwTWT7PpRw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/Jmp5pWRLQxeXZwTWT7PpRw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (Jmp5pWRLQxeXZwTWT7PpRw)</a>.</p>\n\n<h2>More information about Scala Applicative</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Applicative.</p>\n\n<div class=\"skb-focus\"><p>\nNow we can build more complex things with the structures we know ! \n</p>\n\n<p>\nKeep in mind that all the rules from <i>Functor</i> are still true.\n</p>\n\n<p>\nWith <i>Applicative</i> we open the possibility to work with several &#8220;Boxes&#8221;. With <i>Functor</i> only, it wouldn&#8217;t be possible to combine and compose them together. But with <i>Applicative</i>, we can !\n</p>\n\n<p>\nWith <i>Functor</i> only, if we have <code>F[A => B]</code> and <code>F[A]</code>, with <code>map</code> alone, we wouldn&#8217;t be able to combine them together. But with the <code>applicate</code> method (also simply called <code>ap</code>), we can !\n</p>\n\n<p>\nWe are getting closer to <code>flatten</code> and <code>flatMap</code> !\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Applicative.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-foldable/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1947\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1947\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1947\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1947\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1947\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Applicative &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Applicative here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1947\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1947\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1947\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1947\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1947\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "Jmp5pWRLQxeXZwTWT7PpRw",
    "prevUrl": "foldable",
    "nextUrl": "covariance",
    "mainInfoBox": "<p>\nLet’s enhance our <i>Functor</i> from few episodes ago !\n</p>\n\n<p>\nLet’s learn about <i>Applicative</i> which extends what a <i>Functor</i> can do.\n</p>",
    "detailedInfoBox": "<p>\nNow we can build more complex things with the structures we know ! \n</p>\n\n<p>\nKeep in mind that all the rules from <i>Functor</i> are still true.\n</p>\n\n<p>\nWith <i>Applicative</i> we open the possibility to work with several “Boxes”. With <i>Functor</i> only, it wouldn’t be possible to combine and compose them together. But with <i>Applicative</i>, we can !\n</p>\n\n<p>\nWith <i>Functor</i> only, if we have <code>F[A =&gt; B]</code> and <code>F[A]</code>, with <code>map</code> alone, we wouldn’t be able to combine them together. But with the <code>applicate</code> method (also simply called <code>ap</code>), we can !\n</p>\n\n<p>\nWe are getting closer to <code>flatten</code> and <code>flatMap</code> !\n</p>"
  },
  {
    "id": 1960,
    "date": "2021-01-11T09:00:00",
    "date_gmt": "2021-01-11T17:00:00",
    "modified": "2021-01-13T09:10:05",
    "modified_gmt": "2021-01-13T17:10:05",
    "slug": "covariance",
    "status": "publish",
    "link": "https://leobenkel.com/2021/01/skb-scala-covariance/",
    "title": " Scala Covariance",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z24Ct4i\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Covariance.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Covariance !</p>\n\n<div class=\"skb-focus\"><p>Let&#8217;s see what is <i>Covariance</i>.</p>\n\n<p>We are going to learn what it is and when to use it.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/iFi9nYjrT7OfSifQngJZlw.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/iFi9nYjrT7OfSifQngJZlw\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (iFi9nYjrT7OfSifQngJZlw)</a>.</p>\n\n<h2>More information about Scala Covariance</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Covariance.</p>\n\n<div class=\"skb-focus\"><p>\nSo, what is variance ? This is a concept related to types and how they are connected to each other. It is about inheritance. We saw before the relationship between a parent class and a child class. In functional programming we also talk about <i>sub-type</i>.\n</p>\n\n<p>\nYou can see in the start of the exercise what we encountered before related to parent and child class with inheritance.\n</p>\n\n<p>\nThen we use a &#8220;normal&#8221; generic class without the covariance. You see that using a <code>F[A]</code> as a <code>F[B]</code> do not with and you are getting <code>type mismatch</code> with some explanation : <code>found F[A] , required F[B]</code>. This is expected, the types are different even tho they share a common parent, they are different. \n</p>\n<p>\nHowever, why couldn&#8217;t you use a <code>F[A]</code> as a <code>F[P]</code> if <code>P</code> is the parent of <code>A</code> ? This time the error is a lot more detailed: \n</p>\n\n<pre>\ntype mismatch;\n found   : F[A]\n required: F[P]\nNote: A <: P, but trait F is invariant in type A.\nYou may wish to define A as +A instead. (SLS 4.5)\n</pre>\n\n<p>\nWe recognize one symbol we saw before: <code><:</code> which talks about the relationship between the two types.\n</p>\n\n<p>\nIn the last part of the exercise you make a covariant trait using the syntax:\n</p>\n\n<pre>\ntrait MyTrait[+A]\n</pre>\n\n<p>\nThe <code>+A</code> means that the trait is now <i>covariant</i> for <code>A</code>.\n</p>\n\n<p>\nAnd now, what was failing before is working. We are able to use <code>F[A]</code> as <code>F[P]</code>.\n</p>\n\n<p>\nHope that was of help to understand what the <code>+A</code> means when you encounter it and how to solve some exception you might have seen ! See you next time.</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Covariance.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-applicative/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1960\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1960\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1960\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1960\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1960\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Covariance &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Covariance here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1960\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1960\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1960\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1960\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1960\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "iFi9nYjrT7OfSifQngJZlw",
    "prevUrl": "applicative",
    "nextUrl": "traversable",
    "mainInfoBox": "<p>Let’s see what is <i>Covariance</i>.</p>\n\n<p>We are going to learn what it is and when to use it.</p>",
    "detailedInfoBox": "<p>\nSo, what is variance ? This is a concept related to types and how they are connected to each other. It is about inheritance. We saw before the relationship between a parent class and a child class. In functional programming we also talk about <i>sub-type</i>.\n</p>\n\n<p>\nYou can see in the start of the exercise what we encountered before related to parent and child class with inheritance.\n</p>\n\n<p>\nThen we use a “normal” generic class without the covariance. You see that using a <code>F[A]</code> as a <code>F[B]</code> do not with and you are getting <code>type mismatch</code> with some explanation : <code>found F[A] , required F[B]</code>. This is expected, the types are different even tho they share a common parent, they are different. \n</p>\n<p>\nHowever, why couldn’t you use a <code>F[A]</code> as a <code>F[P]</code> if <code>P</code> is the parent of <code>A</code> ? This time the error is a lot more detailed: \n</p>\n\n<pre>type mismatch;\n found   : F[A]\n required: F[P]\nNote: A &lt;: P, but trait F is invariant in type A.\nYou may wish to define A as +A instead. (SLS 4.5)\n</pre>\n\n<p>\nWe recognize one symbol we saw before: <code>&lt;:</code> which talks about the relationship between the two types.\n</p>\n\n<p>\nIn the last part of the exercise you make a covariant trait using the syntax:\n</p>\n\n<pre>trait MyTrait[+A]\n</pre>\n\n<p>\nThe <code>+A</code> means that the trait is now <i>covariant</i> for <code>A</code>.\n</p>\n\n<p>\nAnd now, what was failing before is working. We are able to use <code>F[A]</code> as <code>F[P]</code>.\n</p>\n\n<p>\nHope that was of help to understand what the <code>+A</code> means when you encounter it and how to solve some exception you might have seen ! See you next time.</p>"
  },
  {
    "id": 1962,
    "date": "2021-01-13T09:00:07",
    "date_gmt": "2021-01-13T17:00:07",
    "modified": "2021-01-15T09:11:09",
    "modified_gmt": "2021-01-15T17:11:09",
    "slug": "traversable",
    "status": "publish",
    "link": "https://leobenkel.com/2021/01/skb-scala-traversable/",
    "title": " Scala Traversable",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z1pw0wd\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Traversable.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Traversable !</p>\n\n<div class=\"skb-focus\"><p>Going a bit further in Functional Programming concepts with <i>Traversable</i></p>\n\n<p>\nWe already saw a few concepts so far such as <code>Functor</code> and <code>Applicative</code>.<br/>Let&#8217;s dig deeper !\n</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/ntaMRDzYQ3uMMgXbQZcECg.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/ntaMRDzYQ3uMMgXbQZcECg\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (ntaMRDzYQ3uMMgXbQZcECg)</a>.</p>\n\n<h2>More information about Scala Traversable</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Traversable.</p>\n\n<div class=\"skb-focus\"><p><i>Traversable</i> solves a specific problem. How to apply an operation to many inputs at once without leaving the &#8220;Box/Container/F&#8221; ?</p>\n\n<p>\nWithout <i>Traversable</i>, we would have to perform something like this:\n</p>\n\n<pre>\nval input: List[Int] = List(1,2,3)\nval operation: Int => F[Int] = ???\n\nval output: List[F[Int]] = input.map( i => operation(i))\n</pre>\n\n<p>\nBut how do we manage to get <code>F[List[A]]</code> instead of <code>List[F[A]]</code> ? Traversable !\n</p>\n\n<p>\nTo implement <code>traverse</code> we re-use what we built in the previous episodes: <code>Functor</code> and <code>Applicative</code>. So we can chain the operation and wrap into <code>F</code>. \n</p>\n\n<p>\nWith <code>traverse</code> which allows you to apply an operation to many element and stay inside <code>F</code>, we also get for free <code>sequence</code> which allow you to flip <code>List[F[A]]</code> inside out into <code>F[List[A]]</code>. You will see it in <code>Future.sequence</code> for instance that is very convenient to wait or combine many <code>Future</code> together.\n</p>\n\n<p>\nAs a note: <code>input.map(f).sequence</code> is the same as <code>input.traverse(f)</code>.\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Traversable.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-covariance\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1962\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1962\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1962\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1962\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1962\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Traversable &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Traversable here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1962\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1962\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1962\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1962\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1962\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "ntaMRDzYQ3uMMgXbQZcECg",
    "prevUrl": "covariance",
    "nextUrl": "typeclass",
    "mainInfoBox": "<p>Going a bit further in Functional Programming concepts with <i>Traversable</i></p>\n\n<p>\nWe already saw a few concepts so far such as <code>Functor</code> and <code>Applicative</code>.<br>Let’s dig deeper !\n</p>",
    "detailedInfoBox": "<p><i>Traversable</i> solves a specific problem. How to apply an operation to many inputs at once without leaving the “Box/Container/F” ?</p>\n\n<p>\nWithout <i>Traversable</i>, we would have to perform something like this:\n</p>\n\n<pre>val input: List[Int] = List(1,2,3)\nval operation: Int =&gt; F[Int] = ???\n\nval output: List[F[Int]] = input.map( i =&gt; operation(i))\n</pre>\n\n<p>\nBut how do we manage to get <code>F[List[A]]</code> instead of <code>List[F[A]]</code> ? Traversable !\n</p>\n\n<p>\nTo implement <code>traverse</code> we re-use what we built in the previous episodes: <code>Functor</code> and <code>Applicative</code>. So we can chain the operation and wrap into <code>F</code>. \n</p>\n\n<p>\nWith <code>traverse</code> which allows you to apply an operation to many element and stay inside <code>F</code>, we also get for free <code>sequence</code> which allow you to flip <code>List[F[A]]</code> inside out into <code>F[List[A]]</code>. You will see it in <code>Future.sequence</code> for instance that is very convenient to wait or combine many <code>Future</code> together.\n</p>\n\n<p>\nAs a note: <code>input.map(f).sequence</code> is the same as <code>input.traverse(f)</code>.\n</p>"
  },
  {
    "id": 1965,
    "date": "2021-01-15T09:02:53",
    "date_gmt": "2021-01-15T17:02:53",
    "modified": "2021-01-18T09:58:31",
    "modified_gmt": "2021-01-18T17:58:31",
    "slug": "typeclass",
    "status": "publish",
    "link": "https://leobenkel.com/2021/01/skb-scala-typeclass/",
    "title": " Scala Typeclass",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-22C4yc\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Typeclass.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Typeclass !</p>\n\n<div class=\"skb-focus\"><p><i>Typeclasses</i> woooohh , sorry it is a bit late for scary Halloween words but here we are !</p>\n\n<p>More seriously, we already saw all the components of what a <i>Typeclass</i> is but we haven&#8217;t formalized the word.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/UtjWBavyRMWd7mpfLiXlfQ.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/UtjWBavyRMWd7mpfLiXlfQ\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (UtjWBavyRMWd7mpfLiXlfQ)</a>.</p>\n\n<h2>More information about Scala Typeclass</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Typeclass.</p>\n\n<div class=\"skb-focus\"><p>We saw generic type before</p>\n\n<p>And we learned about <code>implicit val</code> as well and how to use them.</p>\n<p>I am just introducing <code>implicit object</code> while we are at it. But it works the exact same way.</p>\n\n\n<p>So what are <i>Typeclasses</i> ? It is just a construct that involve a <code>trait</code>, <code>implicit</code> implementations and a function that leverage those <code>implicit</code> implementations</p>\n\n<p>That&#8217;s it !</p>\n\n<p>As always, we talked about it in the past, using <code>implicit</code> can be dangerous and hard to maintain. It is easy to forget where the implementation is and it can be hard to find it back depending on the IDE you are using. Also debugging can be tricky. Use it when it seems right !</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Typeclass.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n  <p>Feel free to try on <a id=\"skb-next-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/\">the next Scala Knowledege Bit</a>.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-traversable\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1965\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1965\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1965\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1965\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1965\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala typeclass &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala typeclass here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1965\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1965\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1965\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1965\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1965\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "UtjWBavyRMWd7mpfLiXlfQ",
    "prevUrl": "traversable",
    "nextUrl": "monad",
    "mainInfoBox": "<p><i>Typeclasses</i> woooohh , sorry it is a bit late for scary Halloween words but here we are !</p>\n\n<p>More seriously, we already saw all the components of what a <i>Typeclass</i> is but we haven’t formalized the word.</p>",
    "detailedInfoBox": "<p>We saw generic type before</p>\n\n<p>And we learned about <code>implicit val</code> as well and how to use them.</p>\n<p>I am just introducing <code>implicit object</code> while we are at it. But it works the exact same way.</p>\n\n\n<p>So what are <i>Typeclasses</i> ? It is just a construct that involve a <code>trait</code>, <code>implicit</code> implementations and a function that leverage those <code>implicit</code> implementations</p>\n\n<p>That’s it !</p>\n\n<p>As always, we talked about it in the past, using <code>implicit</code> can be dangerous and hard to maintain. It is easy to forget where the implementation is and it can be hard to find it back depending on the IDE you are using. Also debugging can be tricky. Use it when it seems right !</p>"
  },
  {
    "id": 1979,
    "date": "2021-01-18T09:00:24",
    "date_gmt": "2021-01-18T17:00:24",
    "modified": "2021-01-17T05:53:53",
    "modified_gmt": "2021-01-17T13:53:53",
    "slug": "monad",
    "status": "publish",
    "link": "https://leobenkel.com/2021/01/skb-scala-monad/",
    "title": " Scala Monad",
    "content": "<div class=\"wp-block-lazyblock-scala-knowledge-bits-template lazyblock-scala-knowledge-bits-template-Z29h2cc\"><h2>Introduction</h2>\n\n<p>This article is part of the <a href=\"/category/scala/knowledge-bits\" target=\"_blank\" aria-label=\" (opens in a new tab)\">Scala knowledge bits Series</a>.</p>\n<p>Periodically, I will publish new exercises so you can slowly build up knowledge about Scala.</p>\n<p>It is designed to be done in a very short amount of time and learn a little bit each day, just to create a routine.</p>\n<p>This episode will teach you about Scala Monad.</p>\n<p>Hope you are going to enjoy it! It is designed for anyone to learn Scala from scratch and slowly learn, one Bit at a time.</p>\n<p>After this Bit, I would love to hear your feedback in the comments down below.</p>\n\n<p>\n  Feel free to join the <strong>Discord server</strong> as well if you would like some help and support from the rest of our community.\n</p>\n<div style=\"width: 100%; position: relative; height:60px; margin-bottom: 24px;\">\n<iframe src=\"https://leobenkel.github.io/Discord-iFrame-Widget/index.html?serverID=745529127720714310&#038;theme=dark&#038;invite=true\" \nheight=\"60\" \nallowtransparency=\"true\" frameborder=\"0\" \nsandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" \nallowfullscreen \nstyle=\"position: absolute;top: 0;left: 0;width: 100%;border-radius:10px;\"></iframe>\n</div>\n\n\n<h2>What are we learning today?</h2>\n\n<p>Today we are going to learn about Scala Monad !</p>\n\n<div class=\"skb-focus\"><p>We have done a lot in those last months !</p>\n\n<p>Today is the day <i>Monad</i> stops being scary.</p></div>\n\n<p>Time to try on the exercise on your own and scroll down for more information \nwhen you are done or if you are stuck.</p>\n\n<h2>Exercise</h2>\n<p>Here is an exercise to complete today.</p>\n<p>If I did my job well, you should be able to guess by yourself the solution based on what you previously learned and based on the clues.</p>\n<p>But if you get stuck, scroll down to get more information.</p>\n<p>The goal of the exercise is to replace the <code>???</code> by a piece of code so that the exercise compiles and that&#8217;s how you win! Good luck!</p>\n<p>You can fill the exercise right in here:</p>\n<script id=\"skb-main-exercise-scastie\" src=\"https://scastie.scala-lang.org/JB0wl7zzQxiefAf4EwfzBA.js\"></script>\n\n<p>Or, if it does not load, go on to <a href=\"https://scastie.scala-lang.org/JB0wl7zzQxiefAf4EwfzBA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Scastie (JB0wl7zzQxiefAf4EwfzBA)</a>.</p>\n\n<h2>More information about Scala Monad</h2>\n\n<p>In this exercise you will learn (or have learned, if you have already solved the puzzle) about Scala Monad.</p>\n\n<div class=\"skb-focus\"><p>\nWe already learned about <i>Functor</i>, <i>Foldable</i>, <i>Applicative</i>, and <i>Traversable</i>.\n</p>\n\n<p>\nWe have almost encountered all the beast of Category Theory at this point. Today we are going to tackle <i>Monad</i>.\n</p>\n\n<p>\nAs you can see, it is simply a <i>Functor</i> and <i>Applicative</i>, with one extra feature: <code>flatten</code>. Which allows us to define the world famous <code>flatMap</code>. As you can see in the definition, <code>flatMap</code> is simply <code>map</code> followed by <code>flatten</code>.\n</p>\n\n<p>\nWhen you look at the implementation, we only need a few concept defined: \n</p>\n\n<ul>\n\n<li><code>map</code>: which describe how to apply a transformation to the inner type <code>A</code> of the wrapper <code>F</code>.</li>\n<li><code>pure</code>: which describe how to wrap a <code>A</code> into a  <code>F[A]</code> </li>\n<li><code>flatten</code>: which describe how to compact <code>F[F[A]]</code> in to <code>F[A]</code></li>\n\n</ul>\n\n<p>\nThose concepts are all that needed to enable complex behavior like <code>filter</code> or <code>flatMap</code>.\n</p>\n\n<p>\nI also wanted to show off what we learned in the last episode about <code>TypeClasses</code> with the <code>implicit object</code> and the <code>implicit class</code> which allow us to give a shortcut for the function we want to use often. \n</p>\n\n<p>\nAs always, if you have any questions, reach out on Discord !\n</p></div>\n\n<p>Feel free to go back to the exercise, modify the code to try out new things \nand get a better intuition for Scala Monad.</p>\n\n<h2>Conclusion</h2>\n\n<p>I hope you have learned something new or had fun during this Scala Knowledge Bit.</p>\n\n<p>Please ask questions or post feedback in the comments below.</p>\n\n    <p>The next Scala knowledge bit is coming in a few days ! Come back soon to check it out.</p>\n\n  <p>If you are curious about <a id=\"skb-previous-skb\" href=\"https://leobenkel.com/2021/01/skb-scala-typeclass/\">the previous Scala knowledge Bits</a>, go check it out! 🙂 </p>\n</div>\n\n\n<p></p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1979\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1979\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1979\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1979\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1979\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "excerpt": "<p>Scala Knowledge Bits &#8211; Scala Monad &#8211; Periodic exercise to learn bits of knowledge about Scala. Scala Monad here.</p>\n<div class=\"sharedaddy sd-sharing-enabled\"><div class=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\"><div class=\"sd-content\"><ul><li class=\"share-facebook\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-facebook-1979\" class=\"share-facebook sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=facebook\" target=\"_blank\" title=\"Click to share on Facebook\"><span>Facebook</span></a></li><li class=\"share-twitter\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-twitter-1979\" class=\"share-twitter sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=twitter\" target=\"_blank\" title=\"Click to share on Twitter\"><span>Twitter</span></a></li><li class=\"share-linkedin\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-linkedin-1979\" class=\"share-linkedin sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=linkedin\" target=\"_blank\" title=\"Click to share on LinkedIn\"><span>LinkedIn</span></a></li><li class=\"share-reddit\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-reddit sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=reddit\" target=\"_blank\" title=\"Click to share on Reddit\"><span>Reddit</span></a></li><li><a href=\"#\" class=\"sharing-anchor sd-button share-more\"><span>More</span></a></li><li class=\"share-end\"></li></ul><div class=\"sharing-hidden\"><div class=\"inner\" style=\"display: none;\"><ul><li class=\"share-print\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-print sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/\" target=\"_blank\" title=\"Click to print\"><span>Print</span></a></li><li class=\"share-pocket\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-pocket sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=pocket\" target=\"_blank\" title=\"Click to share on Pocket\"><span>Pocket</span></a></li><li class=\"share-end\"></li><li class=\"share-pinterest\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-pinterest-1979\" class=\"share-pinterest sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=pinterest\" target=\"_blank\" title=\"Click to share on Pinterest\"><span>Pinterest</span></a></li><li class=\"share-tumblr\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-tumblr sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=tumblr\" target=\"_blank\" title=\"Click to share on Tumblr\"><span>Tumblr</span></a></li><li class=\"share-end\"></li><li class=\"share-jetpack-whatsapp\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-jetpack-whatsapp sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=jetpack-whatsapp\" target=\"_blank\" title=\"Click to share on WhatsApp\"><span>WhatsApp</span></a></li><li class=\"share-telegram\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"\" class=\"share-telegram sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=telegram\" target=\"_blank\" title=\"Click to share on Telegram\"><span>Telegram</span></a></li><li class=\"share-end\"></li><li class=\"share-skype\"><a rel=\"nofollow noopener noreferrer\" data-shared=\"sharing-skype-1979\" class=\"share-skype sd-button share-icon\" href=\"https://leobenkel.com/2021/01/skb-scala-monad/?share=skype\" target=\"_blank\" title=\"Click to share on Skype\"><span>Skype</span></a></li><li class=\"share-end\"></li></ul></div></div></div></div></div>",
    "scastieId": "JB0wl7zzQxiefAf4EwfzBA",
    "prevUrl": "typeclass",
    "nextUrl": null,
    "mainInfoBox": "<p>We have done a lot in those last months !</p>\n\n<p>Today is the day <i>Monad</i> stops being scary.</p>",
    "detailedInfoBox": "<p>\nWe already learned about <i>Functor</i>, <i>Foldable</i>, <i>Applicative</i>, and <i>Traversable</i>.\n</p>\n\n<p>\nWe have almost encountered all the beast of Category Theory at this point. Today we are going to tackle <i>Monad</i>.\n</p>\n\n<p>\nAs you can see, it is simply a <i>Functor</i> and <i>Applicative</i>, with one extra feature: <code>flatten</code>. Which allows us to define the world famous <code>flatMap</code>. As you can see in the definition, <code>flatMap</code> is simply <code>map</code> followed by <code>flatten</code>.\n</p>\n\n<p>\nWhen you look at the implementation, we only need a few concept defined: \n</p>\n\n<ul>\n\n<li><code>map</code>: which describe how to apply a transformation to the inner type <code>A</code> of the wrapper <code>F</code>.</li>\n<li><code>pure</code>: which describe how to wrap a <code>A</code> into a  <code>F[A]</code> </li>\n<li><code>flatten</code>: which describe how to compact <code>F[F[A]]</code> in to <code>F[A]</code></li>\n\n</ul>\n\n<p>\nThose concepts are all that needed to enable complex behavior like <code>filter</code> or <code>flatMap</code>.\n</p>\n\n<p>\nI also wanted to show off what we learned in the last episode about <code>TypeClasses</code> with the <code>implicit object</code> and the <code>implicit class</code> which allow us to give a shortcut for the function we want to use often. \n</p>\n\n<p>\nAs always, if you have any questions, reach out on Discord !\n</p>"
  }
]